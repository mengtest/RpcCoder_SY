// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StringNoticeRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StringNoticeRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* StringNoticeRpcNoticeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringNoticeRpcNoticeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_StringNoticeRpc_2eproto() {
  protobuf_AddDesc_StringNoticeRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "StringNoticeRpc.proto");
  GOOGLE_CHECK(file != NULL);
  StringNoticeRpcNoticeNotify_descriptor_ = file->message_type(0);
  static const int StringNoticeRpcNoticeNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringNoticeRpcNoticeNotify, configid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringNoticeRpcNoticeNotify, param_),
  };
  StringNoticeRpcNoticeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StringNoticeRpcNoticeNotify_descriptor_,
      StringNoticeRpcNoticeNotify::default_instance_,
      StringNoticeRpcNoticeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringNoticeRpcNoticeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringNoticeRpcNoticeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StringNoticeRpcNoticeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_StringNoticeRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StringNoticeRpcNoticeNotify_descriptor_, &StringNoticeRpcNoticeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_StringNoticeRpc_2eproto() {
  delete StringNoticeRpcNoticeNotify::default_instance_;
  delete StringNoticeRpcNoticeNotify_reflection_;
}

void protobuf_AddDesc_StringNoticeRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025StringNoticeRpc.proto\032\022PublicStruct.pr"
    "oto\"B\n\033StringNoticeRpcNoticeNotify\022\024\n\010Co"
    "nfigId\030\001 \001(\005:\002-1\022\r\n\005Param\030\002 \003(\t", 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StringNoticeRpc.proto", &protobuf_RegisterTypes);
  StringNoticeRpcNoticeNotify::default_instance_ = new StringNoticeRpcNoticeNotify();
  StringNoticeRpcNoticeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_StringNoticeRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_StringNoticeRpc_2eproto {
  StaticDescriptorInitializer_StringNoticeRpc_2eproto() {
    protobuf_AddDesc_StringNoticeRpc_2eproto();
  }
} static_descriptor_initializer_StringNoticeRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int StringNoticeRpcNoticeNotify::kConfigIdFieldNumber;
const int StringNoticeRpcNoticeNotify::kParamFieldNumber;
#endif  // !_MSC_VER

StringNoticeRpcNoticeNotify::StringNoticeRpcNoticeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StringNoticeRpcNoticeNotify::InitAsDefaultInstance() {
}

StringNoticeRpcNoticeNotify::StringNoticeRpcNoticeNotify(const StringNoticeRpcNoticeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StringNoticeRpcNoticeNotify::SharedCtor() {
  _cached_size_ = 0;
  configid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringNoticeRpcNoticeNotify::~StringNoticeRpcNoticeNotify() {
  SharedDtor();
}

void StringNoticeRpcNoticeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StringNoticeRpcNoticeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringNoticeRpcNoticeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringNoticeRpcNoticeNotify_descriptor_;
}

const StringNoticeRpcNoticeNotify& StringNoticeRpcNoticeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StringNoticeRpc_2eproto();
  return *default_instance_;
}

StringNoticeRpcNoticeNotify* StringNoticeRpcNoticeNotify::default_instance_ = NULL;

StringNoticeRpcNoticeNotify* StringNoticeRpcNoticeNotify::New() const {
  return new StringNoticeRpcNoticeNotify;
}

void StringNoticeRpcNoticeNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    configid_ = -1;
  }
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StringNoticeRpcNoticeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ConfigId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &configid_)));
          set_has_configid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Param;
        break;
      }

      // repeated string Param = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->param(this->param_size() - 1).data(),
            this->param(this->param_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Param;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StringNoticeRpcNoticeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ConfigId = 1 [default = -1];
  if (has_configid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->configid(), output);
  }

  // repeated string Param = 2;
  for (int i = 0; i < this->param_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->param(i).data(), this->param(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StringNoticeRpcNoticeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ConfigId = 1 [default = -1];
  if (has_configid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->configid(), target);
  }

  // repeated string Param = 2;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param(i).data(), this->param(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StringNoticeRpcNoticeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ConfigId = 1 [default = -1];
    if (has_configid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->configid());
    }

  }
  // repeated string Param = 2;
  total_size += 1 * this->param_size();
  for (int i = 0; i < this->param_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->param(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringNoticeRpcNoticeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StringNoticeRpcNoticeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StringNoticeRpcNoticeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringNoticeRpcNoticeNotify::MergeFrom(const StringNoticeRpcNoticeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_configid()) {
      set_configid(from.configid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StringNoticeRpcNoticeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringNoticeRpcNoticeNotify::CopyFrom(const StringNoticeRpcNoticeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringNoticeRpcNoticeNotify::IsInitialized() const {

  return true;
}

void StringNoticeRpcNoticeNotify::Swap(StringNoticeRpcNoticeNotify* other) {
  if (other != this) {
    std::swap(configid_, other->configid_);
    param_.Swap(&other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StringNoticeRpcNoticeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringNoticeRpcNoticeNotify_descriptor_;
  metadata.reflection = StringNoticeRpcNoticeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
