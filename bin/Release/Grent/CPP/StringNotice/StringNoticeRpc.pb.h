// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StringNoticeRpc.proto

#ifndef PROTOBUF_StringNoticeRpc_2eproto__INCLUDED
#define PROTOBUF_StringNoticeRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_StringNoticeRpc_2eproto();
void protobuf_AssignDesc_StringNoticeRpc_2eproto();
void protobuf_ShutdownFile_StringNoticeRpc_2eproto();

class StringNoticeRpcNoticeNotify;

// ===================================================================

class StringNoticeRpcNoticeNotify : public ::google::protobuf::Message {
 public:
  StringNoticeRpcNoticeNotify();
  virtual ~StringNoticeRpcNoticeNotify();

  StringNoticeRpcNoticeNotify(const StringNoticeRpcNoticeNotify& from);

  inline StringNoticeRpcNoticeNotify& operator=(const StringNoticeRpcNoticeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringNoticeRpcNoticeNotify& default_instance();

  void Swap(StringNoticeRpcNoticeNotify* other);

  // implements Message ----------------------------------------------

  StringNoticeRpcNoticeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringNoticeRpcNoticeNotify& from);
  void MergeFrom(const StringNoticeRpcNoticeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ConfigId = 1 [default = -1];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 configid() const;
  inline void set_configid(::google::protobuf::int32 value);

  // repeated string Param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:StringNoticeRpcNoticeNotify)
 private:
  inline void set_has_configid();
  inline void clear_has_configid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::int32 configid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_StringNoticeRpc_2eproto();
  friend void protobuf_AssignDesc_StringNoticeRpc_2eproto();
  friend void protobuf_ShutdownFile_StringNoticeRpc_2eproto();

  void InitAsDefaultInstance();
  static StringNoticeRpcNoticeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// StringNoticeRpcNoticeNotify

// optional int32 ConfigId = 1 [default = -1];
inline bool StringNoticeRpcNoticeNotify::has_configid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringNoticeRpcNoticeNotify::set_has_configid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringNoticeRpcNoticeNotify::clear_has_configid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringNoticeRpcNoticeNotify::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 StringNoticeRpcNoticeNotify::configid() const {
  return configid_;
}
inline void StringNoticeRpcNoticeNotify::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
}

// repeated string Param = 2;
inline int StringNoticeRpcNoticeNotify::param_size() const {
  return param_.size();
}
inline void StringNoticeRpcNoticeNotify::clear_param() {
  param_.Clear();
}
inline const ::std::string& StringNoticeRpcNoticeNotify::param(int index) const {
  return param_.Get(index);
}
inline ::std::string* StringNoticeRpcNoticeNotify::mutable_param(int index) {
  return param_.Mutable(index);
}
inline void StringNoticeRpcNoticeNotify::set_param(int index, const ::std::string& value) {
  param_.Mutable(index)->assign(value);
}
inline void StringNoticeRpcNoticeNotify::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
}
inline void StringNoticeRpcNoticeNotify::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringNoticeRpcNoticeNotify::add_param() {
  return param_.Add();
}
inline void StringNoticeRpcNoticeNotify::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
}
inline void StringNoticeRpcNoticeNotify::add_param(const char* value) {
  param_.Add()->assign(value);
}
inline void StringNoticeRpcNoticeNotify::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringNoticeRpcNoticeNotify::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringNoticeRpcNoticeNotify::mutable_param() {
  return &param_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StringNoticeRpc_2eproto__INCLUDED
