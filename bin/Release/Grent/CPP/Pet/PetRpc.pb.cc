// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PetRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PetRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PetRpcPetSyncAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcPetSyncAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcPetSyncReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcPetSyncReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcUnSummonAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcUnSummonAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcUnSummonReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcUnSummonReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcLevelUpgradeAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcLevelUpgradeAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcLevelUpgradeReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcLevelUpgradeReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcStarUpgradeAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcStarUpgradeAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcStarUpgradeReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcStarUpgradeReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcChangeNameAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcChangeNameAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcChangeNameReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcChangeNameReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcInheritAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcInheritAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcInheritReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcInheritReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcSkillInheritAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcSkillInheritAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcSkillInheritReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcSkillInheritReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcPassiveSkillsAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcPassiveSkillsAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcPassiveSkillsReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcPassiveSkillsReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcStudySkillAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcStudySkillAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcStudySkillReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcStudySkillReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcLockSkillAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcLockSkillAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcLockSkillReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcLockSkillReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcUnLockSkillAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcUnLockSkillAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetRpcUnLockSkillReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetRpcUnLockSkillReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PetRpc_2eproto() {
  protobuf_AddDesc_PetRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PetRpc.proto");
  GOOGLE_CHECK(file != NULL);
  PetRpcPetSyncAsk_descriptor_ = file->message_type(0);
  static const int PetRpcPetSyncAsk_offsets_[1] = {
  };
  PetRpcPetSyncAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcPetSyncAsk_descriptor_,
      PetRpcPetSyncAsk::default_instance_,
      PetRpcPetSyncAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcPetSyncAsk));
  PetRpcPetSyncReply_descriptor_ = file->message_type(1);
  static const int PetRpcPetSyncReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncReply, itemdata_),
  };
  PetRpcPetSyncReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcPetSyncReply_descriptor_,
      PetRpcPetSyncReply::default_instance_,
      PetRpcPetSyncReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPetSyncReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcPetSyncReply));
  PetRpcUnSummonAsk_descriptor_ = file->message_type(2);
  static const int PetRpcUnSummonAsk_offsets_[1] = {
  };
  PetRpcUnSummonAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcUnSummonAsk_descriptor_,
      PetRpcUnSummonAsk::default_instance_,
      PetRpcUnSummonAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcUnSummonAsk));
  PetRpcUnSummonReply_descriptor_ = file->message_type(3);
  static const int PetRpcUnSummonReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonReply, itemobj_),
  };
  PetRpcUnSummonReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcUnSummonReply_descriptor_,
      PetRpcUnSummonReply::default_instance_,
      PetRpcUnSummonReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnSummonReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcUnSummonReply));
  PetRpcLevelUpgradeAsk_descriptor_ = file->message_type(4);
  static const int PetRpcLevelUpgradeAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeAsk, itemcount_),
  };
  PetRpcLevelUpgradeAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcLevelUpgradeAsk_descriptor_,
      PetRpcLevelUpgradeAsk::default_instance_,
      PetRpcLevelUpgradeAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcLevelUpgradeAsk));
  PetRpcLevelUpgradeReply_descriptor_ = file->message_type(5);
  static const int PetRpcLevelUpgradeReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeReply, itemdata_),
  };
  PetRpcLevelUpgradeReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcLevelUpgradeReply_descriptor_,
      PetRpcLevelUpgradeReply::default_instance_,
      PetRpcLevelUpgradeReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLevelUpgradeReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcLevelUpgradeReply));
  PetRpcStarUpgradeAsk_descriptor_ = file->message_type(6);
  static const int PetRpcStarUpgradeAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeAsk, useguid_),
  };
  PetRpcStarUpgradeAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcStarUpgradeAsk_descriptor_,
      PetRpcStarUpgradeAsk::default_instance_,
      PetRpcStarUpgradeAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcStarUpgradeAsk));
  PetRpcStarUpgradeReply_descriptor_ = file->message_type(7);
  static const int PetRpcStarUpgradeReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeReply, itemdata_),
  };
  PetRpcStarUpgradeReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcStarUpgradeReply_descriptor_,
      PetRpcStarUpgradeReply::default_instance_,
      PetRpcStarUpgradeReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStarUpgradeReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcStarUpgradeReply));
  PetRpcChangeNameAsk_descriptor_ = file->message_type(8);
  static const int PetRpcChangeNameAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameAsk, newname_),
  };
  PetRpcChangeNameAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcChangeNameAsk_descriptor_,
      PetRpcChangeNameAsk::default_instance_,
      PetRpcChangeNameAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcChangeNameAsk));
  PetRpcChangeNameReply_descriptor_ = file->message_type(9);
  static const int PetRpcChangeNameReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameReply, name_),
  };
  PetRpcChangeNameReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcChangeNameReply_descriptor_,
      PetRpcChangeNameReply::default_instance_,
      PetRpcChangeNameReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcChangeNameReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcChangeNameReply));
  PetRpcInheritAsk_descriptor_ = file->message_type(10);
  static const int PetRpcInheritAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritAsk, useguid_),
  };
  PetRpcInheritAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcInheritAsk_descriptor_,
      PetRpcInheritAsk::default_instance_,
      PetRpcInheritAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcInheritAsk));
  PetRpcInheritReply_descriptor_ = file->message_type(11);
  static const int PetRpcInheritReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritReply, itemdata_),
  };
  PetRpcInheritReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcInheritReply_descriptor_,
      PetRpcInheritReply::default_instance_,
      PetRpcInheritReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcInheritReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcInheritReply));
  PetRpcSkillInheritAsk_descriptor_ = file->message_type(12);
  static const int PetRpcSkillInheritAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritAsk, useguid_),
  };
  PetRpcSkillInheritAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcSkillInheritAsk_descriptor_,
      PetRpcSkillInheritAsk::default_instance_,
      PetRpcSkillInheritAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcSkillInheritAsk));
  PetRpcSkillInheritReply_descriptor_ = file->message_type(13);
  static const int PetRpcSkillInheritReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritReply, itemdata_),
  };
  PetRpcSkillInheritReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcSkillInheritReply_descriptor_,
      PetRpcSkillInheritReply::default_instance_,
      PetRpcSkillInheritReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcSkillInheritReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcSkillInheritReply));
  PetRpcPassiveSkillsAsk_descriptor_ = file->message_type(14);
  static const int PetRpcPassiveSkillsAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsAsk, guid_),
  };
  PetRpcPassiveSkillsAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcPassiveSkillsAsk_descriptor_,
      PetRpcPassiveSkillsAsk::default_instance_,
      PetRpcPassiveSkillsAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcPassiveSkillsAsk));
  PetRpcPassiveSkillsReply_descriptor_ = file->message_type(15);
  static const int PetRpcPassiveSkillsReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsReply, skills_),
  };
  PetRpcPassiveSkillsReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcPassiveSkillsReply_descriptor_,
      PetRpcPassiveSkillsReply::default_instance_,
      PetRpcPassiveSkillsReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcPassiveSkillsReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcPassiveSkillsReply));
  PetRpcStudySkillAsk_descriptor_ = file->message_type(16);
  static const int PetRpcStudySkillAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillAsk, itemid_),
  };
  PetRpcStudySkillAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcStudySkillAsk_descriptor_,
      PetRpcStudySkillAsk::default_instance_,
      PetRpcStudySkillAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcStudySkillAsk));
  PetRpcStudySkillReply_descriptor_ = file->message_type(17);
  static const int PetRpcStudySkillReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, itemdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, replacedskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, index_),
  };
  PetRpcStudySkillReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcStudySkillReply_descriptor_,
      PetRpcStudySkillReply::default_instance_,
      PetRpcStudySkillReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcStudySkillReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcStudySkillReply));
  PetRpcLockSkillAsk_descriptor_ = file->message_type(18);
  static const int PetRpcLockSkillAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillAsk, skillid_),
  };
  PetRpcLockSkillAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcLockSkillAsk_descriptor_,
      PetRpcLockSkillAsk::default_instance_,
      PetRpcLockSkillAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcLockSkillAsk));
  PetRpcLockSkillReply_descriptor_ = file->message_type(19);
  static const int PetRpcLockSkillReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillReply, itemdata_),
  };
  PetRpcLockSkillReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcLockSkillReply_descriptor_,
      PetRpcLockSkillReply::default_instance_,
      PetRpcLockSkillReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcLockSkillReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcLockSkillReply));
  PetRpcUnLockSkillAsk_descriptor_ = file->message_type(20);
  static const int PetRpcUnLockSkillAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillAsk, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillAsk, skillid_),
  };
  PetRpcUnLockSkillAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcUnLockSkillAsk_descriptor_,
      PetRpcUnLockSkillAsk::default_instance_,
      PetRpcUnLockSkillAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcUnLockSkillAsk));
  PetRpcUnLockSkillReply_descriptor_ = file->message_type(21);
  static const int PetRpcUnLockSkillReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillReply, itemdata_),
  };
  PetRpcUnLockSkillReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetRpcUnLockSkillReply_descriptor_,
      PetRpcUnLockSkillReply::default_instance_,
      PetRpcUnLockSkillReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetRpcUnLockSkillReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetRpcUnLockSkillReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PetRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcPetSyncAsk_descriptor_, &PetRpcPetSyncAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcPetSyncReply_descriptor_, &PetRpcPetSyncReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcUnSummonAsk_descriptor_, &PetRpcUnSummonAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcUnSummonReply_descriptor_, &PetRpcUnSummonReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcLevelUpgradeAsk_descriptor_, &PetRpcLevelUpgradeAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcLevelUpgradeReply_descriptor_, &PetRpcLevelUpgradeReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcStarUpgradeAsk_descriptor_, &PetRpcStarUpgradeAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcStarUpgradeReply_descriptor_, &PetRpcStarUpgradeReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcChangeNameAsk_descriptor_, &PetRpcChangeNameAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcChangeNameReply_descriptor_, &PetRpcChangeNameReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcInheritAsk_descriptor_, &PetRpcInheritAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcInheritReply_descriptor_, &PetRpcInheritReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcSkillInheritAsk_descriptor_, &PetRpcSkillInheritAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcSkillInheritReply_descriptor_, &PetRpcSkillInheritReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcPassiveSkillsAsk_descriptor_, &PetRpcPassiveSkillsAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcPassiveSkillsReply_descriptor_, &PetRpcPassiveSkillsReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcStudySkillAsk_descriptor_, &PetRpcStudySkillAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcStudySkillReply_descriptor_, &PetRpcStudySkillReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcLockSkillAsk_descriptor_, &PetRpcLockSkillAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcLockSkillReply_descriptor_, &PetRpcLockSkillReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcUnLockSkillAsk_descriptor_, &PetRpcUnLockSkillAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetRpcUnLockSkillReply_descriptor_, &PetRpcUnLockSkillReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PetRpc_2eproto() {
  delete PetRpcPetSyncAsk::default_instance_;
  delete PetRpcPetSyncAsk_reflection_;
  delete PetRpcPetSyncReply::default_instance_;
  delete PetRpcPetSyncReply_reflection_;
  delete PetRpcUnSummonAsk::default_instance_;
  delete PetRpcUnSummonAsk_reflection_;
  delete PetRpcUnSummonReply::default_instance_;
  delete PetRpcUnSummonReply_reflection_;
  delete PetRpcLevelUpgradeAsk::default_instance_;
  delete PetRpcLevelUpgradeAsk_reflection_;
  delete PetRpcLevelUpgradeReply::default_instance_;
  delete PetRpcLevelUpgradeReply_reflection_;
  delete PetRpcStarUpgradeAsk::default_instance_;
  delete PetRpcStarUpgradeAsk_reflection_;
  delete PetRpcStarUpgradeReply::default_instance_;
  delete PetRpcStarUpgradeReply_reflection_;
  delete PetRpcChangeNameAsk::default_instance_;
  delete PetRpcChangeNameAsk_reflection_;
  delete PetRpcChangeNameReply::default_instance_;
  delete PetRpcChangeNameReply_reflection_;
  delete PetRpcInheritAsk::default_instance_;
  delete PetRpcInheritAsk_reflection_;
  delete PetRpcInheritReply::default_instance_;
  delete PetRpcInheritReply_reflection_;
  delete PetRpcSkillInheritAsk::default_instance_;
  delete PetRpcSkillInheritAsk_reflection_;
  delete PetRpcSkillInheritReply::default_instance_;
  delete PetRpcSkillInheritReply_reflection_;
  delete PetRpcPassiveSkillsAsk::default_instance_;
  delete PetRpcPassiveSkillsAsk_reflection_;
  delete PetRpcPassiveSkillsReply::default_instance_;
  delete PetRpcPassiveSkillsReply_reflection_;
  delete PetRpcStudySkillAsk::default_instance_;
  delete PetRpcStudySkillAsk_reflection_;
  delete PetRpcStudySkillReply::default_instance_;
  delete PetRpcStudySkillReply_reflection_;
  delete PetRpcLockSkillAsk::default_instance_;
  delete PetRpcLockSkillAsk_reflection_;
  delete PetRpcLockSkillReply::default_instance_;
  delete PetRpcLockSkillReply_reflection_;
  delete PetRpcUnLockSkillAsk::default_instance_;
  delete PetRpcUnLockSkillAsk_reflection_;
  delete PetRpcUnLockSkillReply::default_instance_;
  delete PetRpcUnLockSkillReply_reflection_;
}

void protobuf_AddDesc_PetRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014PetRpc.proto\032\022PublicStruct.proto\"\022\n\020Pe"
    "tRpcPetSyncAsk\"E\n\022PetRpcPetSyncReply\022\022\n\006"
    "Result\030\001 \001(\005:\002-1\022\033\n\010ItemData\030\002 \001(\0132\t.Ite"
    "mData\"\023\n\021PetRpcUnSummonAsk\"D\n\023PetRpcUnSu"
    "mmonReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\031\n\007ItemObj"
    "\030\002 \001(\0132\010.ItemObj\";\n\025PetRpcLevelUpgradeAs"
    "k\022\017\n\004Guid\030\002 \001(\004:\0010\022\021\n\tItemCount\030\003 \003(\005\"J\n"
    "\027PetRpcLevelUpgradeReply\022\022\n\006Result\030\001 \001(\005"
    ":\002-1\022\033\n\010ItemData\030\002 \001(\0132\t.ItemData\";\n\024Pet"
    "RpcStarUpgradeAsk\022\017\n\004Guid\030\001 \001(\004:\0010\022\022\n\007Us"
    "eGuid\030\002 \001(\004:\0010\"I\n\026PetRpcStarUpgradeReply"
    "\022\022\n\006Result\030\001 \001(\005:\002-1\022\033\n\010ItemData\030\002 \001(\0132\t"
    ".ItemData\"7\n\023PetRpcChangeNameAsk\022\017\n\004Guid"
    "\030\001 \001(\004:\0010\022\017\n\007NewName\030\002 \001(\t\"9\n\025PetRpcChan"
    "geNameReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\014\n\004Name\030"
    "\002 \001(\t\"7\n\020PetRpcInheritAsk\022\017\n\004Guid\030\001 \001(\004:"
    "\0010\022\022\n\007UseGuid\030\002 \001(\004:\0010\"E\n\022PetRpcInheritR"
    "eply\022\022\n\006Result\030\001 \001(\005:\002-1\022\033\n\010ItemData\030\002 \001"
    "(\0132\t.ItemData\"<\n\025PetRpcSkillInheritAsk\022\017"
    "\n\004Guid\030\001 \001(\004:\0010\022\022\n\007UseGuid\030\002 \001(\004:\0010\"J\n\027P"
    "etRpcSkillInheritReply\022\022\n\006Result\030\001 \001(\005:\002"
    "-1\022\033\n\010ItemData\030\002 \001(\0132\t.ItemData\")\n\026PetRp"
    "cPassiveSkillsAsk\022\017\n\004Guid\030\002 \001(\004:\0010\"I\n\030Pe"
    "tRpcPassiveSkillsReply\022\022\n\006Result\030\001 \001(\005:\002"
    "-1\022\031\n\006Skills\030\002 \003(\0132\t.PetSkill\":\n\023PetRpcS"
    "tudySkillAsk\022\017\n\004Guid\030\002 \001(\004:\0010\022\022\n\006ItemId\030"
    "\003 \001(\005:\002-1\"x\n\025PetRpcStudySkillReply\022\022\n\006Re"
    "sult\030\001 \001(\005:\002-1\022\033\n\010ItemData\030\002 \001(\0132\t.ItemD"
    "ata\022\033\n\017ReplacedSkillId\030\003 \001(\005:\002-1\022\021\n\005Inde"
    "x\030\004 \001(\005:\002-1\":\n\022PetRpcLockSkillAsk\022\017\n\004Gui"
    "d\030\002 \001(\004:\0010\022\023\n\007SkillId\030\003 \001(\005:\002-1\"G\n\024PetRp"
    "cLockSkillReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\033\n\010I"
    "temData\030\002 \001(\0132\t.ItemData\"<\n\024PetRpcUnLock"
    "SkillAsk\022\017\n\004Guid\030\002 \001(\004:\0010\022\023\n\007SkillId\030\003 \001"
    "(\005:\002-1\"I\n\026PetRpcUnLockSkillReply\022\022\n\006Resu"
    "lt\030\001 \001(\005:\002-1\022\033\n\010ItemData\030\002 \001(\0132\t.ItemDat"
    "a", 1441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PetRpc.proto", &protobuf_RegisterTypes);
  PetRpcPetSyncAsk::default_instance_ = new PetRpcPetSyncAsk();
  PetRpcPetSyncReply::default_instance_ = new PetRpcPetSyncReply();
  PetRpcUnSummonAsk::default_instance_ = new PetRpcUnSummonAsk();
  PetRpcUnSummonReply::default_instance_ = new PetRpcUnSummonReply();
  PetRpcLevelUpgradeAsk::default_instance_ = new PetRpcLevelUpgradeAsk();
  PetRpcLevelUpgradeReply::default_instance_ = new PetRpcLevelUpgradeReply();
  PetRpcStarUpgradeAsk::default_instance_ = new PetRpcStarUpgradeAsk();
  PetRpcStarUpgradeReply::default_instance_ = new PetRpcStarUpgradeReply();
  PetRpcChangeNameAsk::default_instance_ = new PetRpcChangeNameAsk();
  PetRpcChangeNameReply::default_instance_ = new PetRpcChangeNameReply();
  PetRpcInheritAsk::default_instance_ = new PetRpcInheritAsk();
  PetRpcInheritReply::default_instance_ = new PetRpcInheritReply();
  PetRpcSkillInheritAsk::default_instance_ = new PetRpcSkillInheritAsk();
  PetRpcSkillInheritReply::default_instance_ = new PetRpcSkillInheritReply();
  PetRpcPassiveSkillsAsk::default_instance_ = new PetRpcPassiveSkillsAsk();
  PetRpcPassiveSkillsReply::default_instance_ = new PetRpcPassiveSkillsReply();
  PetRpcStudySkillAsk::default_instance_ = new PetRpcStudySkillAsk();
  PetRpcStudySkillReply::default_instance_ = new PetRpcStudySkillReply();
  PetRpcLockSkillAsk::default_instance_ = new PetRpcLockSkillAsk();
  PetRpcLockSkillReply::default_instance_ = new PetRpcLockSkillReply();
  PetRpcUnLockSkillAsk::default_instance_ = new PetRpcUnLockSkillAsk();
  PetRpcUnLockSkillReply::default_instance_ = new PetRpcUnLockSkillReply();
  PetRpcPetSyncAsk::default_instance_->InitAsDefaultInstance();
  PetRpcPetSyncReply::default_instance_->InitAsDefaultInstance();
  PetRpcUnSummonAsk::default_instance_->InitAsDefaultInstance();
  PetRpcUnSummonReply::default_instance_->InitAsDefaultInstance();
  PetRpcLevelUpgradeAsk::default_instance_->InitAsDefaultInstance();
  PetRpcLevelUpgradeReply::default_instance_->InitAsDefaultInstance();
  PetRpcStarUpgradeAsk::default_instance_->InitAsDefaultInstance();
  PetRpcStarUpgradeReply::default_instance_->InitAsDefaultInstance();
  PetRpcChangeNameAsk::default_instance_->InitAsDefaultInstance();
  PetRpcChangeNameReply::default_instance_->InitAsDefaultInstance();
  PetRpcInheritAsk::default_instance_->InitAsDefaultInstance();
  PetRpcInheritReply::default_instance_->InitAsDefaultInstance();
  PetRpcSkillInheritAsk::default_instance_->InitAsDefaultInstance();
  PetRpcSkillInheritReply::default_instance_->InitAsDefaultInstance();
  PetRpcPassiveSkillsAsk::default_instance_->InitAsDefaultInstance();
  PetRpcPassiveSkillsReply::default_instance_->InitAsDefaultInstance();
  PetRpcStudySkillAsk::default_instance_->InitAsDefaultInstance();
  PetRpcStudySkillReply::default_instance_->InitAsDefaultInstance();
  PetRpcLockSkillAsk::default_instance_->InitAsDefaultInstance();
  PetRpcLockSkillReply::default_instance_->InitAsDefaultInstance();
  PetRpcUnLockSkillAsk::default_instance_->InitAsDefaultInstance();
  PetRpcUnLockSkillReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PetRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PetRpc_2eproto {
  StaticDescriptorInitializer_PetRpc_2eproto() {
    protobuf_AddDesc_PetRpc_2eproto();
  }
} static_descriptor_initializer_PetRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PetRpcPetSyncAsk::PetRpcPetSyncAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcPetSyncAsk::InitAsDefaultInstance() {
}

PetRpcPetSyncAsk::PetRpcPetSyncAsk(const PetRpcPetSyncAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcPetSyncAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcPetSyncAsk::~PetRpcPetSyncAsk() {
  SharedDtor();
}

void PetRpcPetSyncAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcPetSyncAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcPetSyncAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcPetSyncAsk_descriptor_;
}

const PetRpcPetSyncAsk& PetRpcPetSyncAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcPetSyncAsk* PetRpcPetSyncAsk::default_instance_ = NULL;

PetRpcPetSyncAsk* PetRpcPetSyncAsk::New() const {
  return new PetRpcPetSyncAsk;
}

void PetRpcPetSyncAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcPetSyncAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PetRpcPetSyncAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcPetSyncAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcPetSyncAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcPetSyncAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcPetSyncAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcPetSyncAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcPetSyncAsk::MergeFrom(const PetRpcPetSyncAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcPetSyncAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcPetSyncAsk::CopyFrom(const PetRpcPetSyncAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcPetSyncAsk::IsInitialized() const {

  return true;
}

void PetRpcPetSyncAsk::Swap(PetRpcPetSyncAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcPetSyncAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcPetSyncAsk_descriptor_;
  metadata.reflection = PetRpcPetSyncAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcPetSyncReply::kResultFieldNumber;
const int PetRpcPetSyncReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcPetSyncReply::PetRpcPetSyncReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcPetSyncReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcPetSyncReply::PetRpcPetSyncReply(const PetRpcPetSyncReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcPetSyncReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcPetSyncReply::~PetRpcPetSyncReply() {
  SharedDtor();
}

void PetRpcPetSyncReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcPetSyncReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcPetSyncReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcPetSyncReply_descriptor_;
}

const PetRpcPetSyncReply& PetRpcPetSyncReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcPetSyncReply* PetRpcPetSyncReply::default_instance_ = NULL;

PetRpcPetSyncReply* PetRpcPetSyncReply::New() const {
  return new PetRpcPetSyncReply;
}

void PetRpcPetSyncReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcPetSyncReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcPetSyncReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcPetSyncReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcPetSyncReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcPetSyncReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcPetSyncReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcPetSyncReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcPetSyncReply::MergeFrom(const PetRpcPetSyncReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcPetSyncReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcPetSyncReply::CopyFrom(const PetRpcPetSyncReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcPetSyncReply::IsInitialized() const {

  return true;
}

void PetRpcPetSyncReply::Swap(PetRpcPetSyncReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcPetSyncReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcPetSyncReply_descriptor_;
  metadata.reflection = PetRpcPetSyncReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PetRpcUnSummonAsk::PetRpcUnSummonAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcUnSummonAsk::InitAsDefaultInstance() {
}

PetRpcUnSummonAsk::PetRpcUnSummonAsk(const PetRpcUnSummonAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcUnSummonAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcUnSummonAsk::~PetRpcUnSummonAsk() {
  SharedDtor();
}

void PetRpcUnSummonAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcUnSummonAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcUnSummonAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcUnSummonAsk_descriptor_;
}

const PetRpcUnSummonAsk& PetRpcUnSummonAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcUnSummonAsk* PetRpcUnSummonAsk::default_instance_ = NULL;

PetRpcUnSummonAsk* PetRpcUnSummonAsk::New() const {
  return new PetRpcUnSummonAsk;
}

void PetRpcUnSummonAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcUnSummonAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PetRpcUnSummonAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcUnSummonAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcUnSummonAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcUnSummonAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcUnSummonAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcUnSummonAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcUnSummonAsk::MergeFrom(const PetRpcUnSummonAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcUnSummonAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcUnSummonAsk::CopyFrom(const PetRpcUnSummonAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcUnSummonAsk::IsInitialized() const {

  return true;
}

void PetRpcUnSummonAsk::Swap(PetRpcUnSummonAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcUnSummonAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcUnSummonAsk_descriptor_;
  metadata.reflection = PetRpcUnSummonAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcUnSummonReply::kResultFieldNumber;
const int PetRpcUnSummonReply::kItemObjFieldNumber;
#endif  // !_MSC_VER

PetRpcUnSummonReply::PetRpcUnSummonReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcUnSummonReply::InitAsDefaultInstance() {
  itemobj_ = const_cast< ::ItemObj*>(&::ItemObj::default_instance());
}

PetRpcUnSummonReply::PetRpcUnSummonReply(const PetRpcUnSummonReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcUnSummonReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemobj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcUnSummonReply::~PetRpcUnSummonReply() {
  SharedDtor();
}

void PetRpcUnSummonReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemobj_;
  }
}

void PetRpcUnSummonReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcUnSummonReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcUnSummonReply_descriptor_;
}

const PetRpcUnSummonReply& PetRpcUnSummonReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcUnSummonReply* PetRpcUnSummonReply::default_instance_ = NULL;

PetRpcUnSummonReply* PetRpcUnSummonReply::New() const {
  return new PetRpcUnSummonReply;
}

void PetRpcUnSummonReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemobj()) {
      if (itemobj_ != NULL) itemobj_->::ItemObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcUnSummonReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemObj;
        break;
      }

      // optional .ItemObj ItemObj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemObj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemobj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcUnSummonReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemObj ItemObj = 2;
  if (has_itemobj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemobj(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcUnSummonReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemObj ItemObj = 2;
  if (has_itemobj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemobj(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcUnSummonReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemObj ItemObj = 2;
    if (has_itemobj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemobj());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcUnSummonReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcUnSummonReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcUnSummonReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcUnSummonReply::MergeFrom(const PetRpcUnSummonReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemobj()) {
      mutable_itemobj()->::ItemObj::MergeFrom(from.itemobj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcUnSummonReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcUnSummonReply::CopyFrom(const PetRpcUnSummonReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcUnSummonReply::IsInitialized() const {

  return true;
}

void PetRpcUnSummonReply::Swap(PetRpcUnSummonReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemobj_, other->itemobj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcUnSummonReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcUnSummonReply_descriptor_;
  metadata.reflection = PetRpcUnSummonReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcLevelUpgradeAsk::kGuidFieldNumber;
const int PetRpcLevelUpgradeAsk::kItemCountFieldNumber;
#endif  // !_MSC_VER

PetRpcLevelUpgradeAsk::PetRpcLevelUpgradeAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcLevelUpgradeAsk::InitAsDefaultInstance() {
}

PetRpcLevelUpgradeAsk::PetRpcLevelUpgradeAsk(const PetRpcLevelUpgradeAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcLevelUpgradeAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcLevelUpgradeAsk::~PetRpcLevelUpgradeAsk() {
  SharedDtor();
}

void PetRpcLevelUpgradeAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcLevelUpgradeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcLevelUpgradeAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcLevelUpgradeAsk_descriptor_;
}

const PetRpcLevelUpgradeAsk& PetRpcLevelUpgradeAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcLevelUpgradeAsk* PetRpcLevelUpgradeAsk::default_instance_ = NULL;

PetRpcLevelUpgradeAsk* PetRpcLevelUpgradeAsk::New() const {
  return new PetRpcLevelUpgradeAsk;
}

void PetRpcLevelUpgradeAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
  }
  itemcount_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcLevelUpgradeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ItemCount;
        break;
      }

      // repeated int32 ItemCount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ItemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_itemcount())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_itemcount())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ItemCount;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcLevelUpgradeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // repeated int32 ItemCount = 3;
  for (int i = 0; i < this->itemcount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->itemcount(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcLevelUpgradeAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // repeated int32 ItemCount = 3;
  for (int i = 0; i < this->itemcount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->itemcount(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcLevelUpgradeAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 2 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

  }
  // repeated int32 ItemCount = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemcount_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->itemcount(i));
    }
    total_size += 1 * this->itemcount_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcLevelUpgradeAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcLevelUpgradeAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcLevelUpgradeAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcLevelUpgradeAsk::MergeFrom(const PetRpcLevelUpgradeAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemcount_.MergeFrom(from.itemcount_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcLevelUpgradeAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcLevelUpgradeAsk::CopyFrom(const PetRpcLevelUpgradeAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcLevelUpgradeAsk::IsInitialized() const {

  return true;
}

void PetRpcLevelUpgradeAsk::Swap(PetRpcLevelUpgradeAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    itemcount_.Swap(&other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcLevelUpgradeAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcLevelUpgradeAsk_descriptor_;
  metadata.reflection = PetRpcLevelUpgradeAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcLevelUpgradeReply::kResultFieldNumber;
const int PetRpcLevelUpgradeReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcLevelUpgradeReply::PetRpcLevelUpgradeReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcLevelUpgradeReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcLevelUpgradeReply::PetRpcLevelUpgradeReply(const PetRpcLevelUpgradeReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcLevelUpgradeReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcLevelUpgradeReply::~PetRpcLevelUpgradeReply() {
  SharedDtor();
}

void PetRpcLevelUpgradeReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcLevelUpgradeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcLevelUpgradeReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcLevelUpgradeReply_descriptor_;
}

const PetRpcLevelUpgradeReply& PetRpcLevelUpgradeReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcLevelUpgradeReply* PetRpcLevelUpgradeReply::default_instance_ = NULL;

PetRpcLevelUpgradeReply* PetRpcLevelUpgradeReply::New() const {
  return new PetRpcLevelUpgradeReply;
}

void PetRpcLevelUpgradeReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcLevelUpgradeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcLevelUpgradeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcLevelUpgradeReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcLevelUpgradeReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcLevelUpgradeReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcLevelUpgradeReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcLevelUpgradeReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcLevelUpgradeReply::MergeFrom(const PetRpcLevelUpgradeReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcLevelUpgradeReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcLevelUpgradeReply::CopyFrom(const PetRpcLevelUpgradeReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcLevelUpgradeReply::IsInitialized() const {

  return true;
}

void PetRpcLevelUpgradeReply::Swap(PetRpcLevelUpgradeReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcLevelUpgradeReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcLevelUpgradeReply_descriptor_;
  metadata.reflection = PetRpcLevelUpgradeReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcStarUpgradeAsk::kGuidFieldNumber;
const int PetRpcStarUpgradeAsk::kUseGuidFieldNumber;
#endif  // !_MSC_VER

PetRpcStarUpgradeAsk::PetRpcStarUpgradeAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcStarUpgradeAsk::InitAsDefaultInstance() {
}

PetRpcStarUpgradeAsk::PetRpcStarUpgradeAsk(const PetRpcStarUpgradeAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcStarUpgradeAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  useguid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcStarUpgradeAsk::~PetRpcStarUpgradeAsk() {
  SharedDtor();
}

void PetRpcStarUpgradeAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcStarUpgradeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcStarUpgradeAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcStarUpgradeAsk_descriptor_;
}

const PetRpcStarUpgradeAsk& PetRpcStarUpgradeAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcStarUpgradeAsk* PetRpcStarUpgradeAsk::default_instance_ = NULL;

PetRpcStarUpgradeAsk* PetRpcStarUpgradeAsk::New() const {
  return new PetRpcStarUpgradeAsk;
}

void PetRpcStarUpgradeAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    useguid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcStarUpgradeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_UseGuid;
        break;
      }

      // optional uint64 UseGuid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_UseGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &useguid_)));
          set_has_useguid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcStarUpgradeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->useguid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcStarUpgradeAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->useguid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcStarUpgradeAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 1 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint64 UseGuid = 2 [default = 0];
    if (has_useguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->useguid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcStarUpgradeAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcStarUpgradeAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcStarUpgradeAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcStarUpgradeAsk::MergeFrom(const PetRpcStarUpgradeAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_useguid()) {
      set_useguid(from.useguid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcStarUpgradeAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcStarUpgradeAsk::CopyFrom(const PetRpcStarUpgradeAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcStarUpgradeAsk::IsInitialized() const {

  return true;
}

void PetRpcStarUpgradeAsk::Swap(PetRpcStarUpgradeAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(useguid_, other->useguid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcStarUpgradeAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcStarUpgradeAsk_descriptor_;
  metadata.reflection = PetRpcStarUpgradeAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcStarUpgradeReply::kResultFieldNumber;
const int PetRpcStarUpgradeReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcStarUpgradeReply::PetRpcStarUpgradeReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcStarUpgradeReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcStarUpgradeReply::PetRpcStarUpgradeReply(const PetRpcStarUpgradeReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcStarUpgradeReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcStarUpgradeReply::~PetRpcStarUpgradeReply() {
  SharedDtor();
}

void PetRpcStarUpgradeReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcStarUpgradeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcStarUpgradeReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcStarUpgradeReply_descriptor_;
}

const PetRpcStarUpgradeReply& PetRpcStarUpgradeReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcStarUpgradeReply* PetRpcStarUpgradeReply::default_instance_ = NULL;

PetRpcStarUpgradeReply* PetRpcStarUpgradeReply::New() const {
  return new PetRpcStarUpgradeReply;
}

void PetRpcStarUpgradeReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcStarUpgradeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcStarUpgradeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcStarUpgradeReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcStarUpgradeReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcStarUpgradeReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcStarUpgradeReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcStarUpgradeReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcStarUpgradeReply::MergeFrom(const PetRpcStarUpgradeReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcStarUpgradeReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcStarUpgradeReply::CopyFrom(const PetRpcStarUpgradeReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcStarUpgradeReply::IsInitialized() const {

  return true;
}

void PetRpcStarUpgradeReply::Swap(PetRpcStarUpgradeReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcStarUpgradeReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcStarUpgradeReply_descriptor_;
  metadata.reflection = PetRpcStarUpgradeReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcChangeNameAsk::kGuidFieldNumber;
const int PetRpcChangeNameAsk::kNewNameFieldNumber;
#endif  // !_MSC_VER

PetRpcChangeNameAsk::PetRpcChangeNameAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcChangeNameAsk::InitAsDefaultInstance() {
}

PetRpcChangeNameAsk::PetRpcChangeNameAsk(const PetRpcChangeNameAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcChangeNameAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcChangeNameAsk::~PetRpcChangeNameAsk() {
  SharedDtor();
}

void PetRpcChangeNameAsk::SharedDtor() {
  if (newname_ != &::google::protobuf::internal::kEmptyString) {
    delete newname_;
  }
  if (this != default_instance_) {
  }
}

void PetRpcChangeNameAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcChangeNameAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcChangeNameAsk_descriptor_;
}

const PetRpcChangeNameAsk& PetRpcChangeNameAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcChangeNameAsk* PetRpcChangeNameAsk::default_instance_ = NULL;

PetRpcChangeNameAsk* PetRpcChangeNameAsk::New() const {
  return new PetRpcChangeNameAsk;
}

void PetRpcChangeNameAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    if (has_newname()) {
      if (newname_ != &::google::protobuf::internal::kEmptyString) {
        newname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcChangeNameAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_NewName;
        break;
      }

      // optional string NewName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_NewName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->newname().data(), this->newname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcChangeNameAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional string NewName = 2;
  if (has_newname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newname().data(), this->newname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->newname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcChangeNameAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional string NewName = 2;
  if (has_newname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newname().data(), this->newname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcChangeNameAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 1 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional string NewName = 2;
    if (has_newname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->newname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcChangeNameAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcChangeNameAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcChangeNameAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcChangeNameAsk::MergeFrom(const PetRpcChangeNameAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_newname()) {
      set_newname(from.newname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcChangeNameAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcChangeNameAsk::CopyFrom(const PetRpcChangeNameAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcChangeNameAsk::IsInitialized() const {

  return true;
}

void PetRpcChangeNameAsk::Swap(PetRpcChangeNameAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(newname_, other->newname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcChangeNameAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcChangeNameAsk_descriptor_;
  metadata.reflection = PetRpcChangeNameAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcChangeNameReply::kResultFieldNumber;
const int PetRpcChangeNameReply::kNameFieldNumber;
#endif  // !_MSC_VER

PetRpcChangeNameReply::PetRpcChangeNameReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcChangeNameReply::InitAsDefaultInstance() {
}

PetRpcChangeNameReply::PetRpcChangeNameReply(const PetRpcChangeNameReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcChangeNameReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcChangeNameReply::~PetRpcChangeNameReply() {
  SharedDtor();
}

void PetRpcChangeNameReply::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PetRpcChangeNameReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcChangeNameReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcChangeNameReply_descriptor_;
}

const PetRpcChangeNameReply& PetRpcChangeNameReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcChangeNameReply* PetRpcChangeNameReply::default_instance_ = NULL;

PetRpcChangeNameReply* PetRpcChangeNameReply::New() const {
  return new PetRpcChangeNameReply;
}

void PetRpcChangeNameReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcChangeNameReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcChangeNameReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcChangeNameReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcChangeNameReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcChangeNameReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcChangeNameReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcChangeNameReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcChangeNameReply::MergeFrom(const PetRpcChangeNameReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcChangeNameReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcChangeNameReply::CopyFrom(const PetRpcChangeNameReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcChangeNameReply::IsInitialized() const {

  return true;
}

void PetRpcChangeNameReply::Swap(PetRpcChangeNameReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcChangeNameReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcChangeNameReply_descriptor_;
  metadata.reflection = PetRpcChangeNameReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcInheritAsk::kGuidFieldNumber;
const int PetRpcInheritAsk::kUseGuidFieldNumber;
#endif  // !_MSC_VER

PetRpcInheritAsk::PetRpcInheritAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcInheritAsk::InitAsDefaultInstance() {
}

PetRpcInheritAsk::PetRpcInheritAsk(const PetRpcInheritAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcInheritAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  useguid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcInheritAsk::~PetRpcInheritAsk() {
  SharedDtor();
}

void PetRpcInheritAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcInheritAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcInheritAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcInheritAsk_descriptor_;
}

const PetRpcInheritAsk& PetRpcInheritAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcInheritAsk* PetRpcInheritAsk::default_instance_ = NULL;

PetRpcInheritAsk* PetRpcInheritAsk::New() const {
  return new PetRpcInheritAsk;
}

void PetRpcInheritAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    useguid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcInheritAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_UseGuid;
        break;
      }

      // optional uint64 UseGuid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_UseGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &useguid_)));
          set_has_useguid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcInheritAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->useguid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcInheritAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->useguid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcInheritAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 1 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint64 UseGuid = 2 [default = 0];
    if (has_useguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->useguid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcInheritAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcInheritAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcInheritAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcInheritAsk::MergeFrom(const PetRpcInheritAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_useguid()) {
      set_useguid(from.useguid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcInheritAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcInheritAsk::CopyFrom(const PetRpcInheritAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcInheritAsk::IsInitialized() const {

  return true;
}

void PetRpcInheritAsk::Swap(PetRpcInheritAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(useguid_, other->useguid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcInheritAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcInheritAsk_descriptor_;
  metadata.reflection = PetRpcInheritAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcInheritReply::kResultFieldNumber;
const int PetRpcInheritReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcInheritReply::PetRpcInheritReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcInheritReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcInheritReply::PetRpcInheritReply(const PetRpcInheritReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcInheritReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcInheritReply::~PetRpcInheritReply() {
  SharedDtor();
}

void PetRpcInheritReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcInheritReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcInheritReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcInheritReply_descriptor_;
}

const PetRpcInheritReply& PetRpcInheritReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcInheritReply* PetRpcInheritReply::default_instance_ = NULL;

PetRpcInheritReply* PetRpcInheritReply::New() const {
  return new PetRpcInheritReply;
}

void PetRpcInheritReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcInheritReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcInheritReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcInheritReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcInheritReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcInheritReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcInheritReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcInheritReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcInheritReply::MergeFrom(const PetRpcInheritReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcInheritReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcInheritReply::CopyFrom(const PetRpcInheritReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcInheritReply::IsInitialized() const {

  return true;
}

void PetRpcInheritReply::Swap(PetRpcInheritReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcInheritReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcInheritReply_descriptor_;
  metadata.reflection = PetRpcInheritReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcSkillInheritAsk::kGuidFieldNumber;
const int PetRpcSkillInheritAsk::kUseGuidFieldNumber;
#endif  // !_MSC_VER

PetRpcSkillInheritAsk::PetRpcSkillInheritAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcSkillInheritAsk::InitAsDefaultInstance() {
}

PetRpcSkillInheritAsk::PetRpcSkillInheritAsk(const PetRpcSkillInheritAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcSkillInheritAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  useguid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcSkillInheritAsk::~PetRpcSkillInheritAsk() {
  SharedDtor();
}

void PetRpcSkillInheritAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcSkillInheritAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcSkillInheritAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcSkillInheritAsk_descriptor_;
}

const PetRpcSkillInheritAsk& PetRpcSkillInheritAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcSkillInheritAsk* PetRpcSkillInheritAsk::default_instance_ = NULL;

PetRpcSkillInheritAsk* PetRpcSkillInheritAsk::New() const {
  return new PetRpcSkillInheritAsk;
}

void PetRpcSkillInheritAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    useguid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcSkillInheritAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_UseGuid;
        break;
      }

      // optional uint64 UseGuid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_UseGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &useguid_)));
          set_has_useguid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcSkillInheritAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->useguid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcSkillInheritAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 1 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint64 UseGuid = 2 [default = 0];
  if (has_useguid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->useguid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcSkillInheritAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 1 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint64 UseGuid = 2 [default = 0];
    if (has_useguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->useguid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcSkillInheritAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcSkillInheritAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcSkillInheritAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcSkillInheritAsk::MergeFrom(const PetRpcSkillInheritAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_useguid()) {
      set_useguid(from.useguid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcSkillInheritAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcSkillInheritAsk::CopyFrom(const PetRpcSkillInheritAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcSkillInheritAsk::IsInitialized() const {

  return true;
}

void PetRpcSkillInheritAsk::Swap(PetRpcSkillInheritAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(useguid_, other->useguid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcSkillInheritAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcSkillInheritAsk_descriptor_;
  metadata.reflection = PetRpcSkillInheritAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcSkillInheritReply::kResultFieldNumber;
const int PetRpcSkillInheritReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcSkillInheritReply::PetRpcSkillInheritReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcSkillInheritReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcSkillInheritReply::PetRpcSkillInheritReply(const PetRpcSkillInheritReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcSkillInheritReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcSkillInheritReply::~PetRpcSkillInheritReply() {
  SharedDtor();
}

void PetRpcSkillInheritReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcSkillInheritReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcSkillInheritReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcSkillInheritReply_descriptor_;
}

const PetRpcSkillInheritReply& PetRpcSkillInheritReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcSkillInheritReply* PetRpcSkillInheritReply::default_instance_ = NULL;

PetRpcSkillInheritReply* PetRpcSkillInheritReply::New() const {
  return new PetRpcSkillInheritReply;
}

void PetRpcSkillInheritReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcSkillInheritReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcSkillInheritReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcSkillInheritReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcSkillInheritReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcSkillInheritReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcSkillInheritReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcSkillInheritReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcSkillInheritReply::MergeFrom(const PetRpcSkillInheritReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcSkillInheritReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcSkillInheritReply::CopyFrom(const PetRpcSkillInheritReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcSkillInheritReply::IsInitialized() const {

  return true;
}

void PetRpcSkillInheritReply::Swap(PetRpcSkillInheritReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcSkillInheritReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcSkillInheritReply_descriptor_;
  metadata.reflection = PetRpcSkillInheritReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcPassiveSkillsAsk::kGuidFieldNumber;
#endif  // !_MSC_VER

PetRpcPassiveSkillsAsk::PetRpcPassiveSkillsAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcPassiveSkillsAsk::InitAsDefaultInstance() {
}

PetRpcPassiveSkillsAsk::PetRpcPassiveSkillsAsk(const PetRpcPassiveSkillsAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcPassiveSkillsAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcPassiveSkillsAsk::~PetRpcPassiveSkillsAsk() {
  SharedDtor();
}

void PetRpcPassiveSkillsAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcPassiveSkillsAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcPassiveSkillsAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcPassiveSkillsAsk_descriptor_;
}

const PetRpcPassiveSkillsAsk& PetRpcPassiveSkillsAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcPassiveSkillsAsk* PetRpcPassiveSkillsAsk::default_instance_ = NULL;

PetRpcPassiveSkillsAsk* PetRpcPassiveSkillsAsk::New() const {
  return new PetRpcPassiveSkillsAsk;
}

void PetRpcPassiveSkillsAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcPassiveSkillsAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcPassiveSkillsAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcPassiveSkillsAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcPassiveSkillsAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 2 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcPassiveSkillsAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcPassiveSkillsAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcPassiveSkillsAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcPassiveSkillsAsk::MergeFrom(const PetRpcPassiveSkillsAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcPassiveSkillsAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcPassiveSkillsAsk::CopyFrom(const PetRpcPassiveSkillsAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcPassiveSkillsAsk::IsInitialized() const {

  return true;
}

void PetRpcPassiveSkillsAsk::Swap(PetRpcPassiveSkillsAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcPassiveSkillsAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcPassiveSkillsAsk_descriptor_;
  metadata.reflection = PetRpcPassiveSkillsAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcPassiveSkillsReply::kResultFieldNumber;
const int PetRpcPassiveSkillsReply::kSkillsFieldNumber;
#endif  // !_MSC_VER

PetRpcPassiveSkillsReply::PetRpcPassiveSkillsReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcPassiveSkillsReply::InitAsDefaultInstance() {
}

PetRpcPassiveSkillsReply::PetRpcPassiveSkillsReply(const PetRpcPassiveSkillsReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcPassiveSkillsReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcPassiveSkillsReply::~PetRpcPassiveSkillsReply() {
  SharedDtor();
}

void PetRpcPassiveSkillsReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcPassiveSkillsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcPassiveSkillsReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcPassiveSkillsReply_descriptor_;
}

const PetRpcPassiveSkillsReply& PetRpcPassiveSkillsReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcPassiveSkillsReply* PetRpcPassiveSkillsReply::default_instance_ = NULL;

PetRpcPassiveSkillsReply* PetRpcPassiveSkillsReply::New() const {
  return new PetRpcPassiveSkillsReply;
}

void PetRpcPassiveSkillsReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcPassiveSkillsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Skills;
        break;
      }

      // repeated .PetSkill Skills = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Skills;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcPassiveSkillsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PetSkill Skills = 2;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skills(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcPassiveSkillsReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PetSkill Skills = 2;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skills(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcPassiveSkillsReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PetSkill Skills = 2;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcPassiveSkillsReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcPassiveSkillsReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcPassiveSkillsReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcPassiveSkillsReply::MergeFrom(const PetRpcPassiveSkillsReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcPassiveSkillsReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcPassiveSkillsReply::CopyFrom(const PetRpcPassiveSkillsReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcPassiveSkillsReply::IsInitialized() const {

  return true;
}

void PetRpcPassiveSkillsReply::Swap(PetRpcPassiveSkillsReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    skills_.Swap(&other->skills_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcPassiveSkillsReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcPassiveSkillsReply_descriptor_;
  metadata.reflection = PetRpcPassiveSkillsReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcStudySkillAsk::kGuidFieldNumber;
const int PetRpcStudySkillAsk::kItemIdFieldNumber;
#endif  // !_MSC_VER

PetRpcStudySkillAsk::PetRpcStudySkillAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcStudySkillAsk::InitAsDefaultInstance() {
}

PetRpcStudySkillAsk::PetRpcStudySkillAsk(const PetRpcStudySkillAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcStudySkillAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  itemid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcStudySkillAsk::~PetRpcStudySkillAsk() {
  SharedDtor();
}

void PetRpcStudySkillAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcStudySkillAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcStudySkillAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcStudySkillAsk_descriptor_;
}

const PetRpcStudySkillAsk& PetRpcStudySkillAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcStudySkillAsk* PetRpcStudySkillAsk::default_instance_ = NULL;

PetRpcStudySkillAsk* PetRpcStudySkillAsk::New() const {
  return new PetRpcStudySkillAsk;
}

void PetRpcStudySkillAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    itemid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcStudySkillAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ItemId;
        break;
      }

      // optional int32 ItemId = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcStudySkillAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 ItemId = 3 [default = -1];
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcStudySkillAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 ItemId = 3 [default = -1];
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcStudySkillAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 2 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 ItemId = 3 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcStudySkillAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcStudySkillAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcStudySkillAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcStudySkillAsk::MergeFrom(const PetRpcStudySkillAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcStudySkillAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcStudySkillAsk::CopyFrom(const PetRpcStudySkillAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcStudySkillAsk::IsInitialized() const {

  return true;
}

void PetRpcStudySkillAsk::Swap(PetRpcStudySkillAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcStudySkillAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcStudySkillAsk_descriptor_;
  metadata.reflection = PetRpcStudySkillAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcStudySkillReply::kResultFieldNumber;
const int PetRpcStudySkillReply::kItemDataFieldNumber;
const int PetRpcStudySkillReply::kReplacedSkillIdFieldNumber;
const int PetRpcStudySkillReply::kIndexFieldNumber;
#endif  // !_MSC_VER

PetRpcStudySkillReply::PetRpcStudySkillReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcStudySkillReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcStudySkillReply::PetRpcStudySkillReply(const PetRpcStudySkillReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcStudySkillReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  replacedskillid_ = -1;
  index_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcStudySkillReply::~PetRpcStudySkillReply() {
  SharedDtor();
}

void PetRpcStudySkillReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcStudySkillReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcStudySkillReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcStudySkillReply_descriptor_;
}

const PetRpcStudySkillReply& PetRpcStudySkillReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcStudySkillReply* PetRpcStudySkillReply::default_instance_ = NULL;

PetRpcStudySkillReply* PetRpcStudySkillReply::New() const {
  return new PetRpcStudySkillReply;
}

void PetRpcStudySkillReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
    replacedskillid_ = -1;
    index_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcStudySkillReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ReplacedSkillId;
        break;
      }

      // optional int32 ReplacedSkillId = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ReplacedSkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replacedskillid_)));
          set_has_replacedskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_Index;
        break;
      }

      // optional int32 Index = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcStudySkillReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  // optional int32 ReplacedSkillId = 3 [default = -1];
  if (has_replacedskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->replacedskillid(), output);
  }

  // optional int32 Index = 4 [default = -1];
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcStudySkillReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  // optional int32 ReplacedSkillId = 3 [default = -1];
  if (has_replacedskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->replacedskillid(), target);
  }

  // optional int32 Index = 4 [default = -1];
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcStudySkillReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

    // optional int32 ReplacedSkillId = 3 [default = -1];
    if (has_replacedskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->replacedskillid());
    }

    // optional int32 Index = 4 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcStudySkillReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcStudySkillReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcStudySkillReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcStudySkillReply::MergeFrom(const PetRpcStudySkillReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
    if (from.has_replacedskillid()) {
      set_replacedskillid(from.replacedskillid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcStudySkillReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcStudySkillReply::CopyFrom(const PetRpcStudySkillReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcStudySkillReply::IsInitialized() const {

  return true;
}

void PetRpcStudySkillReply::Swap(PetRpcStudySkillReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(replacedskillid_, other->replacedskillid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcStudySkillReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcStudySkillReply_descriptor_;
  metadata.reflection = PetRpcStudySkillReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcLockSkillAsk::kGuidFieldNumber;
const int PetRpcLockSkillAsk::kSkillIdFieldNumber;
#endif  // !_MSC_VER

PetRpcLockSkillAsk::PetRpcLockSkillAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcLockSkillAsk::InitAsDefaultInstance() {
}

PetRpcLockSkillAsk::PetRpcLockSkillAsk(const PetRpcLockSkillAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcLockSkillAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  skillid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcLockSkillAsk::~PetRpcLockSkillAsk() {
  SharedDtor();
}

void PetRpcLockSkillAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcLockSkillAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcLockSkillAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcLockSkillAsk_descriptor_;
}

const PetRpcLockSkillAsk& PetRpcLockSkillAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcLockSkillAsk* PetRpcLockSkillAsk::default_instance_ = NULL;

PetRpcLockSkillAsk* PetRpcLockSkillAsk::New() const {
  return new PetRpcLockSkillAsk;
}

void PetRpcLockSkillAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    skillid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcLockSkillAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcLockSkillAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 SkillId = 3 [default = -1];
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcLockSkillAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 SkillId = 3 [default = -1];
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcLockSkillAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 2 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 SkillId = 3 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcLockSkillAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcLockSkillAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcLockSkillAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcLockSkillAsk::MergeFrom(const PetRpcLockSkillAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcLockSkillAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcLockSkillAsk::CopyFrom(const PetRpcLockSkillAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcLockSkillAsk::IsInitialized() const {

  return true;
}

void PetRpcLockSkillAsk::Swap(PetRpcLockSkillAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcLockSkillAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcLockSkillAsk_descriptor_;
  metadata.reflection = PetRpcLockSkillAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcLockSkillReply::kResultFieldNumber;
const int PetRpcLockSkillReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcLockSkillReply::PetRpcLockSkillReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcLockSkillReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcLockSkillReply::PetRpcLockSkillReply(const PetRpcLockSkillReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcLockSkillReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcLockSkillReply::~PetRpcLockSkillReply() {
  SharedDtor();
}

void PetRpcLockSkillReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcLockSkillReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcLockSkillReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcLockSkillReply_descriptor_;
}

const PetRpcLockSkillReply& PetRpcLockSkillReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcLockSkillReply* PetRpcLockSkillReply::default_instance_ = NULL;

PetRpcLockSkillReply* PetRpcLockSkillReply::New() const {
  return new PetRpcLockSkillReply;
}

void PetRpcLockSkillReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcLockSkillReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcLockSkillReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcLockSkillReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcLockSkillReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcLockSkillReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcLockSkillReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcLockSkillReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcLockSkillReply::MergeFrom(const PetRpcLockSkillReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcLockSkillReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcLockSkillReply::CopyFrom(const PetRpcLockSkillReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcLockSkillReply::IsInitialized() const {

  return true;
}

void PetRpcLockSkillReply::Swap(PetRpcLockSkillReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcLockSkillReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcLockSkillReply_descriptor_;
  metadata.reflection = PetRpcLockSkillReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcUnLockSkillAsk::kGuidFieldNumber;
const int PetRpcUnLockSkillAsk::kSkillIdFieldNumber;
#endif  // !_MSC_VER

PetRpcUnLockSkillAsk::PetRpcUnLockSkillAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcUnLockSkillAsk::InitAsDefaultInstance() {
}

PetRpcUnLockSkillAsk::PetRpcUnLockSkillAsk(const PetRpcUnLockSkillAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcUnLockSkillAsk::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  skillid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcUnLockSkillAsk::~PetRpcUnLockSkillAsk() {
  SharedDtor();
}

void PetRpcUnLockSkillAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PetRpcUnLockSkillAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcUnLockSkillAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcUnLockSkillAsk_descriptor_;
}

const PetRpcUnLockSkillAsk& PetRpcUnLockSkillAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcUnLockSkillAsk* PetRpcUnLockSkillAsk::default_instance_ = NULL;

PetRpcUnLockSkillAsk* PetRpcUnLockSkillAsk::New() const {
  return new PetRpcUnLockSkillAsk;
}

void PetRpcUnLockSkillAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guid_ = GOOGLE_ULONGLONG(0);
    skillid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcUnLockSkillAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcUnLockSkillAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 SkillId = 3 [default = -1];
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcUnLockSkillAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Guid = 2 [default = 0];
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 SkillId = 3 [default = -1];
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcUnLockSkillAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Guid = 2 [default = 0];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 SkillId = 3 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcUnLockSkillAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcUnLockSkillAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcUnLockSkillAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcUnLockSkillAsk::MergeFrom(const PetRpcUnLockSkillAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcUnLockSkillAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcUnLockSkillAsk::CopyFrom(const PetRpcUnLockSkillAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcUnLockSkillAsk::IsInitialized() const {

  return true;
}

void PetRpcUnLockSkillAsk::Swap(PetRpcUnLockSkillAsk* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcUnLockSkillAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcUnLockSkillAsk_descriptor_;
  metadata.reflection = PetRpcUnLockSkillAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetRpcUnLockSkillReply::kResultFieldNumber;
const int PetRpcUnLockSkillReply::kItemDataFieldNumber;
#endif  // !_MSC_VER

PetRpcUnLockSkillReply::PetRpcUnLockSkillReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetRpcUnLockSkillReply::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::ItemData*>(&::ItemData::default_instance());
}

PetRpcUnLockSkillReply::PetRpcUnLockSkillReply(const PetRpcUnLockSkillReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetRpcUnLockSkillReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetRpcUnLockSkillReply::~PetRpcUnLockSkillReply() {
  SharedDtor();
}

void PetRpcUnLockSkillReply::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void PetRpcUnLockSkillReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetRpcUnLockSkillReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetRpcUnLockSkillReply_descriptor_;
}

const PetRpcUnLockSkillReply& PetRpcUnLockSkillReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PetRpc_2eproto();
  return *default_instance_;
}

PetRpcUnLockSkillReply* PetRpcUnLockSkillReply::default_instance_ = NULL;

PetRpcUnLockSkillReply* PetRpcUnLockSkillReply::New() const {
  return new PetRpcUnLockSkillReply;
}

void PetRpcUnLockSkillReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::ItemData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetRpcUnLockSkillReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ItemData;
        break;
      }

      // optional .ItemData ItemData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetRpcUnLockSkillReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetRpcUnLockSkillReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .ItemData ItemData = 2;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetRpcUnLockSkillReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .ItemData ItemData = 2;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetRpcUnLockSkillReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetRpcUnLockSkillReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetRpcUnLockSkillReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetRpcUnLockSkillReply::MergeFrom(const PetRpcUnLockSkillReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::ItemData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetRpcUnLockSkillReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetRpcUnLockSkillReply::CopyFrom(const PetRpcUnLockSkillReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetRpcUnLockSkillReply::IsInitialized() const {

  return true;
}

void PetRpcUnLockSkillReply::Swap(PetRpcUnLockSkillReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetRpcUnLockSkillReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetRpcUnLockSkillReply_descriptor_;
  metadata.reflection = PetRpcUnLockSkillReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
