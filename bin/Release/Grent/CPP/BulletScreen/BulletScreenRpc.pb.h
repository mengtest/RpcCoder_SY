// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BulletScreenRpc.proto

#ifndef PROTOBUF_BulletScreenRpc_2eproto__INCLUDED
#define PROTOBUF_BulletScreenRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BulletScreenRpc_2eproto();
void protobuf_AssignDesc_BulletScreenRpc_2eproto();
void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

class BulletScreenRpcBulletScreenOptAsk;
class BulletScreenRpcBulletScreenOptReply;
class BulletScreenRpcCGBulletScreenAsk;
class BulletScreenRpcCGBulletScreenReply;
class BulletScreenRpcSendBulletScreenCGAsk;
class BulletScreenRpcSendBulletScreenCGReply;

// ===================================================================

class BulletScreenRpcBulletScreenOptAsk : public ::google::protobuf::Message {
 public:
  BulletScreenRpcBulletScreenOptAsk();
  virtual ~BulletScreenRpcBulletScreenOptAsk();

  BulletScreenRpcBulletScreenOptAsk(const BulletScreenRpcBulletScreenOptAsk& from);

  inline BulletScreenRpcBulletScreenOptAsk& operator=(const BulletScreenRpcBulletScreenOptAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcBulletScreenOptAsk& default_instance();

  void Swap(BulletScreenRpcBulletScreenOptAsk* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcBulletScreenOptAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcBulletScreenOptAsk& from);
  void MergeFrom(const BulletScreenRpcBulletScreenOptAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 BulletScreenType = 1 [default = -1];
  inline bool has_bulletscreentype() const;
  inline void clear_bulletscreentype();
  static const int kBulletScreenTypeFieldNumber = 1;
  inline ::google::protobuf::int32 bulletscreentype() const;
  inline void set_bulletscreentype(::google::protobuf::int32 value);

  // optional int32 OptType = 2 [default = -1];
  inline bool has_opttype() const;
  inline void clear_opttype();
  static const int kOptTypeFieldNumber = 2;
  inline ::google::protobuf::int32 opttype() const;
  inline void set_opttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BulletScreenRpcBulletScreenOptAsk)
 private:
  inline void set_has_bulletscreentype();
  inline void clear_has_bulletscreentype();
  inline void set_has_opttype();
  inline void clear_has_opttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bulletscreentype_;
  ::google::protobuf::int32 opttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcBulletScreenOptAsk* default_instance_;
};
// -------------------------------------------------------------------

class BulletScreenRpcBulletScreenOptReply : public ::google::protobuf::Message {
 public:
  BulletScreenRpcBulletScreenOptReply();
  virtual ~BulletScreenRpcBulletScreenOptReply();

  BulletScreenRpcBulletScreenOptReply(const BulletScreenRpcBulletScreenOptReply& from);

  inline BulletScreenRpcBulletScreenOptReply& operator=(const BulletScreenRpcBulletScreenOptReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcBulletScreenOptReply& default_instance();

  void Swap(BulletScreenRpcBulletScreenOptReply* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcBulletScreenOptReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcBulletScreenOptReply& from);
  void MergeFrom(const BulletScreenRpcBulletScreenOptReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 BulletScreenType = 2 [default = -1];
  inline bool has_bulletscreentype() const;
  inline void clear_bulletscreentype();
  static const int kBulletScreenTypeFieldNumber = 2;
  inline ::google::protobuf::int32 bulletscreentype() const;
  inline void set_bulletscreentype(::google::protobuf::int32 value);

  // optional int32 OptType = 3 [default = -1];
  inline bool has_opttype() const;
  inline void clear_opttype();
  static const int kOptTypeFieldNumber = 3;
  inline ::google::protobuf::int32 opttype() const;
  inline void set_opttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BulletScreenRpcBulletScreenOptReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bulletscreentype();
  inline void clear_has_bulletscreentype();
  inline void set_has_opttype();
  inline void clear_has_opttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 bulletscreentype_;
  ::google::protobuf::int32 opttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcBulletScreenOptReply* default_instance_;
};
// -------------------------------------------------------------------

class BulletScreenRpcCGBulletScreenAsk : public ::google::protobuf::Message {
 public:
  BulletScreenRpcCGBulletScreenAsk();
  virtual ~BulletScreenRpcCGBulletScreenAsk();

  BulletScreenRpcCGBulletScreenAsk(const BulletScreenRpcCGBulletScreenAsk& from);

  inline BulletScreenRpcCGBulletScreenAsk& operator=(const BulletScreenRpcCGBulletScreenAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcCGBulletScreenAsk& default_instance();

  void Swap(BulletScreenRpcCGBulletScreenAsk* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcCGBulletScreenAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcCGBulletScreenAsk& from);
  void MergeFrom(const BulletScreenRpcCGBulletScreenAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 CGid = 1 [default = -1];
  inline bool has_cgid() const;
  inline void clear_cgid();
  static const int kCGidFieldNumber = 1;
  inline ::google::protobuf::int32 cgid() const;
  inline void set_cgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BulletScreenRpcCGBulletScreenAsk)
 private:
  inline void set_has_cgid();
  inline void clear_has_cgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcCGBulletScreenAsk* default_instance_;
};
// -------------------------------------------------------------------

class BulletScreenRpcCGBulletScreenReply : public ::google::protobuf::Message {
 public:
  BulletScreenRpcCGBulletScreenReply();
  virtual ~BulletScreenRpcCGBulletScreenReply();

  BulletScreenRpcCGBulletScreenReply(const BulletScreenRpcCGBulletScreenReply& from);

  inline BulletScreenRpcCGBulletScreenReply& operator=(const BulletScreenRpcCGBulletScreenReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcCGBulletScreenReply& default_instance();

  void Swap(BulletScreenRpcCGBulletScreenReply* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcCGBulletScreenReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcCGBulletScreenReply& from);
  void MergeFrom(const BulletScreenRpcCGBulletScreenReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated string BulletScreenContent = 2;
  inline int bulletscreencontent_size() const;
  inline void clear_bulletscreencontent();
  static const int kBulletScreenContentFieldNumber = 2;
  inline const ::std::string& bulletscreencontent(int index) const;
  inline ::std::string* mutable_bulletscreencontent(int index);
  inline void set_bulletscreencontent(int index, const ::std::string& value);
  inline void set_bulletscreencontent(int index, const char* value);
  inline void set_bulletscreencontent(int index, const char* value, size_t size);
  inline ::std::string* add_bulletscreencontent();
  inline void add_bulletscreencontent(const ::std::string& value);
  inline void add_bulletscreencontent(const char* value);
  inline void add_bulletscreencontent(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& bulletscreencontent() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_bulletscreencontent();

  // @@protoc_insertion_point(class_scope:BulletScreenRpcCGBulletScreenReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> bulletscreencontent_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcCGBulletScreenReply* default_instance_;
};
// -------------------------------------------------------------------

class BulletScreenRpcSendBulletScreenCGAsk : public ::google::protobuf::Message {
 public:
  BulletScreenRpcSendBulletScreenCGAsk();
  virtual ~BulletScreenRpcSendBulletScreenCGAsk();

  BulletScreenRpcSendBulletScreenCGAsk(const BulletScreenRpcSendBulletScreenCGAsk& from);

  inline BulletScreenRpcSendBulletScreenCGAsk& operator=(const BulletScreenRpcSendBulletScreenCGAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcSendBulletScreenCGAsk& default_instance();

  void Swap(BulletScreenRpcSendBulletScreenCGAsk* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcSendBulletScreenCGAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcSendBulletScreenCGAsk& from);
  void MergeFrom(const BulletScreenRpcSendBulletScreenCGAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 CGid = 1 [default = -1];
  inline bool has_cgid() const;
  inline void clear_cgid();
  static const int kCGidFieldNumber = 1;
  inline ::google::protobuf::int32 cgid() const;
  inline void set_cgid(::google::protobuf::int32 value);

  // optional string Content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:BulletScreenRpcSendBulletScreenCGAsk)
 private:
  inline void set_has_cgid();
  inline void clear_has_cgid();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;
  ::google::protobuf::int32 cgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcSendBulletScreenCGAsk* default_instance_;
};
// -------------------------------------------------------------------

class BulletScreenRpcSendBulletScreenCGReply : public ::google::protobuf::Message {
 public:
  BulletScreenRpcSendBulletScreenCGReply();
  virtual ~BulletScreenRpcSendBulletScreenCGReply();

  BulletScreenRpcSendBulletScreenCGReply(const BulletScreenRpcSendBulletScreenCGReply& from);

  inline BulletScreenRpcSendBulletScreenCGReply& operator=(const BulletScreenRpcSendBulletScreenCGReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletScreenRpcSendBulletScreenCGReply& default_instance();

  void Swap(BulletScreenRpcSendBulletScreenCGReply* other);

  // implements Message ----------------------------------------------

  BulletScreenRpcSendBulletScreenCGReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletScreenRpcSendBulletScreenCGReply& from);
  void MergeFrom(const BulletScreenRpcSendBulletScreenCGReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BulletScreenRpcSendBulletScreenCGReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BulletScreenRpc_2eproto();
  friend void protobuf_AssignDesc_BulletScreenRpc_2eproto();
  friend void protobuf_ShutdownFile_BulletScreenRpc_2eproto();

  void InitAsDefaultInstance();
  static BulletScreenRpcSendBulletScreenCGReply* default_instance_;
};
// ===================================================================


// ===================================================================

// BulletScreenRpcBulletScreenOptAsk

// optional int32 BulletScreenType = 1 [default = -1];
inline bool BulletScreenRpcBulletScreenOptAsk::has_bulletscreentype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcBulletScreenOptAsk::set_has_bulletscreentype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcBulletScreenOptAsk::clear_has_bulletscreentype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcBulletScreenOptAsk::clear_bulletscreentype() {
  bulletscreentype_ = -1;
  clear_has_bulletscreentype();
}
inline ::google::protobuf::int32 BulletScreenRpcBulletScreenOptAsk::bulletscreentype() const {
  return bulletscreentype_;
}
inline void BulletScreenRpcBulletScreenOptAsk::set_bulletscreentype(::google::protobuf::int32 value) {
  set_has_bulletscreentype();
  bulletscreentype_ = value;
}

// optional int32 OptType = 2 [default = -1];
inline bool BulletScreenRpcBulletScreenOptAsk::has_opttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletScreenRpcBulletScreenOptAsk::set_has_opttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletScreenRpcBulletScreenOptAsk::clear_has_opttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletScreenRpcBulletScreenOptAsk::clear_opttype() {
  opttype_ = -1;
  clear_has_opttype();
}
inline ::google::protobuf::int32 BulletScreenRpcBulletScreenOptAsk::opttype() const {
  return opttype_;
}
inline void BulletScreenRpcBulletScreenOptAsk::set_opttype(::google::protobuf::int32 value) {
  set_has_opttype();
  opttype_ = value;
}

// -------------------------------------------------------------------

// BulletScreenRpcBulletScreenOptReply

// optional int32 Result = 1 [default = -1];
inline bool BulletScreenRpcBulletScreenOptReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcBulletScreenOptReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BulletScreenRpcBulletScreenOptReply::result() const {
  return result_;
}
inline void BulletScreenRpcBulletScreenOptReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 BulletScreenType = 2 [default = -1];
inline bool BulletScreenRpcBulletScreenOptReply::has_bulletscreentype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletScreenRpcBulletScreenOptReply::set_has_bulletscreentype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_has_bulletscreentype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_bulletscreentype() {
  bulletscreentype_ = -1;
  clear_has_bulletscreentype();
}
inline ::google::protobuf::int32 BulletScreenRpcBulletScreenOptReply::bulletscreentype() const {
  return bulletscreentype_;
}
inline void BulletScreenRpcBulletScreenOptReply::set_bulletscreentype(::google::protobuf::int32 value) {
  set_has_bulletscreentype();
  bulletscreentype_ = value;
}

// optional int32 OptType = 3 [default = -1];
inline bool BulletScreenRpcBulletScreenOptReply::has_opttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulletScreenRpcBulletScreenOptReply::set_has_opttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_has_opttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulletScreenRpcBulletScreenOptReply::clear_opttype() {
  opttype_ = -1;
  clear_has_opttype();
}
inline ::google::protobuf::int32 BulletScreenRpcBulletScreenOptReply::opttype() const {
  return opttype_;
}
inline void BulletScreenRpcBulletScreenOptReply::set_opttype(::google::protobuf::int32 value) {
  set_has_opttype();
  opttype_ = value;
}

// -------------------------------------------------------------------

// BulletScreenRpcCGBulletScreenAsk

// optional int32 CGid = 1 [default = -1];
inline bool BulletScreenRpcCGBulletScreenAsk::has_cgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcCGBulletScreenAsk::set_has_cgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcCGBulletScreenAsk::clear_has_cgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcCGBulletScreenAsk::clear_cgid() {
  cgid_ = -1;
  clear_has_cgid();
}
inline ::google::protobuf::int32 BulletScreenRpcCGBulletScreenAsk::cgid() const {
  return cgid_;
}
inline void BulletScreenRpcCGBulletScreenAsk::set_cgid(::google::protobuf::int32 value) {
  set_has_cgid();
  cgid_ = value;
}

// -------------------------------------------------------------------

// BulletScreenRpcCGBulletScreenReply

// optional int32 Result = 1 [default = -1];
inline bool BulletScreenRpcCGBulletScreenReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcCGBulletScreenReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcCGBulletScreenReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcCGBulletScreenReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BulletScreenRpcCGBulletScreenReply::result() const {
  return result_;
}
inline void BulletScreenRpcCGBulletScreenReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated string BulletScreenContent = 2;
inline int BulletScreenRpcCGBulletScreenReply::bulletscreencontent_size() const {
  return bulletscreencontent_.size();
}
inline void BulletScreenRpcCGBulletScreenReply::clear_bulletscreencontent() {
  bulletscreencontent_.Clear();
}
inline const ::std::string& BulletScreenRpcCGBulletScreenReply::bulletscreencontent(int index) const {
  return bulletscreencontent_.Get(index);
}
inline ::std::string* BulletScreenRpcCGBulletScreenReply::mutable_bulletscreencontent(int index) {
  return bulletscreencontent_.Mutable(index);
}
inline void BulletScreenRpcCGBulletScreenReply::set_bulletscreencontent(int index, const ::std::string& value) {
  bulletscreencontent_.Mutable(index)->assign(value);
}
inline void BulletScreenRpcCGBulletScreenReply::set_bulletscreencontent(int index, const char* value) {
  bulletscreencontent_.Mutable(index)->assign(value);
}
inline void BulletScreenRpcCGBulletScreenReply::set_bulletscreencontent(int index, const char* value, size_t size) {
  bulletscreencontent_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletScreenRpcCGBulletScreenReply::add_bulletscreencontent() {
  return bulletscreencontent_.Add();
}
inline void BulletScreenRpcCGBulletScreenReply::add_bulletscreencontent(const ::std::string& value) {
  bulletscreencontent_.Add()->assign(value);
}
inline void BulletScreenRpcCGBulletScreenReply::add_bulletscreencontent(const char* value) {
  bulletscreencontent_.Add()->assign(value);
}
inline void BulletScreenRpcCGBulletScreenReply::add_bulletscreencontent(const char* value, size_t size) {
  bulletscreencontent_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BulletScreenRpcCGBulletScreenReply::bulletscreencontent() const {
  return bulletscreencontent_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BulletScreenRpcCGBulletScreenReply::mutable_bulletscreencontent() {
  return &bulletscreencontent_;
}

// -------------------------------------------------------------------

// BulletScreenRpcSendBulletScreenCGAsk

// optional int32 CGid = 1 [default = -1];
inline bool BulletScreenRpcSendBulletScreenCGAsk::has_cgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_has_cgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::clear_has_cgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::clear_cgid() {
  cgid_ = -1;
  clear_has_cgid();
}
inline ::google::protobuf::int32 BulletScreenRpcSendBulletScreenCGAsk::cgid() const {
  return cgid_;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_cgid(::google::protobuf::int32 value) {
  set_has_cgid();
  cgid_ = value;
}

// optional string Content = 2;
inline bool BulletScreenRpcSendBulletScreenCGAsk::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& BulletScreenRpcSendBulletScreenCGAsk::content() const {
  return *content_;
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletScreenRpcSendBulletScreenCGAsk::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* BulletScreenRpcSendBulletScreenCGAsk::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletScreenRpcSendBulletScreenCGAsk::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BulletScreenRpcSendBulletScreenCGReply

// optional int32 Result = 1 [default = -1];
inline bool BulletScreenRpcSendBulletScreenCGReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletScreenRpcSendBulletScreenCGReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletScreenRpcSendBulletScreenCGReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletScreenRpcSendBulletScreenCGReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BulletScreenRpcSendBulletScreenCGReply::result() const {
  return result_;
}
inline void BulletScreenRpcSendBulletScreenCGReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BulletScreenRpc_2eproto__INCLUDED
