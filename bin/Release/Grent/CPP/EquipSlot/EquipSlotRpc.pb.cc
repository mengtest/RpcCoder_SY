// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipSlotRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EquipSlotRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcSyncEquipSlotAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcSyncEquipSlotReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcEnhanceEquipSlotAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcEnhanceEquipSlotAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcEnhanceEquipSlotReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcEnhanceEquipSlotReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcUpStarEquipSlotAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcUpStarEquipSlotAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcUpStarEquipSlotReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcUpStarEquipSlotReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotStarAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcSyncEquipSlotStarAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotStarReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipSlotRpcSyncEquipSlotStarReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EquipSlotRpc_2eproto() {
  protobuf_AddDesc_EquipSlotRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EquipSlotRpc.proto");
  GOOGLE_CHECK(file != NULL);
  EquipSlotRpcSyncEquipSlotAsk_descriptor_ = file->message_type(0);
  static const int EquipSlotRpcSyncEquipSlotAsk_offsets_[1] = {
  };
  EquipSlotRpcSyncEquipSlotAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcSyncEquipSlotAsk_descriptor_,
      EquipSlotRpcSyncEquipSlotAsk::default_instance_,
      EquipSlotRpcSyncEquipSlotAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcSyncEquipSlotAsk));
  EquipSlotRpcSyncEquipSlotReply_descriptor_ = file->message_type(1);
  static const int EquipSlotRpcSyncEquipSlotReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotReply, equipslotdata_),
  };
  EquipSlotRpcSyncEquipSlotReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcSyncEquipSlotReply_descriptor_,
      EquipSlotRpcSyncEquipSlotReply::default_instance_,
      EquipSlotRpcSyncEquipSlotReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcSyncEquipSlotReply));
  EquipSlotRpcEnhanceEquipSlotAsk_descriptor_ = file->message_type(2);
  static const int EquipSlotRpcEnhanceEquipSlotAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotAsk, slot_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotAsk, costitemlist_),
  };
  EquipSlotRpcEnhanceEquipSlotAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcEnhanceEquipSlotAsk_descriptor_,
      EquipSlotRpcEnhanceEquipSlotAsk::default_instance_,
      EquipSlotRpcEnhanceEquipSlotAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcEnhanceEquipSlotAsk));
  EquipSlotRpcEnhanceEquipSlotReply_descriptor_ = file->message_type(3);
  static const int EquipSlotRpcEnhanceEquipSlotReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotReply, equipslotdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotReply, slot_type_),
  };
  EquipSlotRpcEnhanceEquipSlotReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcEnhanceEquipSlotReply_descriptor_,
      EquipSlotRpcEnhanceEquipSlotReply::default_instance_,
      EquipSlotRpcEnhanceEquipSlotReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcEnhanceEquipSlotReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcEnhanceEquipSlotReply));
  EquipSlotRpcUpStarEquipSlotAsk_descriptor_ = file->message_type(4);
  static const int EquipSlotRpcUpStarEquipSlotAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotAsk, slot_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotAsk, isprotection_),
  };
  EquipSlotRpcUpStarEquipSlotAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcUpStarEquipSlotAsk_descriptor_,
      EquipSlotRpcUpStarEquipSlotAsk::default_instance_,
      EquipSlotRpcUpStarEquipSlotAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcUpStarEquipSlotAsk));
  EquipSlotRpcUpStarEquipSlotReply_descriptor_ = file->message_type(5);
  static const int EquipSlotRpcUpStarEquipSlotReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, equipslotstarlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, slot_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, upstarresult_),
  };
  EquipSlotRpcUpStarEquipSlotReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcUpStarEquipSlotReply_descriptor_,
      EquipSlotRpcUpStarEquipSlotReply::default_instance_,
      EquipSlotRpcUpStarEquipSlotReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcUpStarEquipSlotReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcUpStarEquipSlotReply));
  EquipSlotRpcSyncEquipSlotStarAsk_descriptor_ = file->message_type(6);
  static const int EquipSlotRpcSyncEquipSlotStarAsk_offsets_[1] = {
  };
  EquipSlotRpcSyncEquipSlotStarAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcSyncEquipSlotStarAsk_descriptor_,
      EquipSlotRpcSyncEquipSlotStarAsk::default_instance_,
      EquipSlotRpcSyncEquipSlotStarAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcSyncEquipSlotStarAsk));
  EquipSlotRpcSyncEquipSlotStarReply_descriptor_ = file->message_type(7);
  static const int EquipSlotRpcSyncEquipSlotStarReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarReply, equipslotstarlist_),
  };
  EquipSlotRpcSyncEquipSlotStarReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipSlotRpcSyncEquipSlotStarReply_descriptor_,
      EquipSlotRpcSyncEquipSlotStarReply::default_instance_,
      EquipSlotRpcSyncEquipSlotStarReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSlotRpcSyncEquipSlotStarReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipSlotRpcSyncEquipSlotStarReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EquipSlotRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcSyncEquipSlotAsk_descriptor_, &EquipSlotRpcSyncEquipSlotAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcSyncEquipSlotReply_descriptor_, &EquipSlotRpcSyncEquipSlotReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcEnhanceEquipSlotAsk_descriptor_, &EquipSlotRpcEnhanceEquipSlotAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcEnhanceEquipSlotReply_descriptor_, &EquipSlotRpcEnhanceEquipSlotReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcUpStarEquipSlotAsk_descriptor_, &EquipSlotRpcUpStarEquipSlotAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcUpStarEquipSlotReply_descriptor_, &EquipSlotRpcUpStarEquipSlotReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcSyncEquipSlotStarAsk_descriptor_, &EquipSlotRpcSyncEquipSlotStarAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipSlotRpcSyncEquipSlotStarReply_descriptor_, &EquipSlotRpcSyncEquipSlotStarReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EquipSlotRpc_2eproto() {
  delete EquipSlotRpcSyncEquipSlotAsk::default_instance_;
  delete EquipSlotRpcSyncEquipSlotAsk_reflection_;
  delete EquipSlotRpcSyncEquipSlotReply::default_instance_;
  delete EquipSlotRpcSyncEquipSlotReply_reflection_;
  delete EquipSlotRpcEnhanceEquipSlotAsk::default_instance_;
  delete EquipSlotRpcEnhanceEquipSlotAsk_reflection_;
  delete EquipSlotRpcEnhanceEquipSlotReply::default_instance_;
  delete EquipSlotRpcEnhanceEquipSlotReply_reflection_;
  delete EquipSlotRpcUpStarEquipSlotAsk::default_instance_;
  delete EquipSlotRpcUpStarEquipSlotAsk_reflection_;
  delete EquipSlotRpcUpStarEquipSlotReply::default_instance_;
  delete EquipSlotRpcUpStarEquipSlotReply_reflection_;
  delete EquipSlotRpcSyncEquipSlotStarAsk::default_instance_;
  delete EquipSlotRpcSyncEquipSlotStarAsk_reflection_;
  delete EquipSlotRpcSyncEquipSlotStarReply::default_instance_;
  delete EquipSlotRpcSyncEquipSlotStarReply_reflection_;
}

void protobuf_AddDesc_EquipSlotRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022EquipSlotRpc.proto\032\022PublicStruct.proto"
    "\"\036\n\034EquipSlotRpcSyncEquipSlotAsk\"[\n\036Equi"
    "pSlotRpcSyncEquipSlotReply\022\022\n\006Result\030\001 \001"
    "(\005:\002-1\022%\n\rEquipSlotData\030\002 \003(\0132\016.EquipSlo"
    "tInfo\"_\n\037EquipSlotRpcEnhanceEquipSlotAsk"
    "\022\025\n\tSlot_Type\030\001 \001(\005:\002-1\022%\n\014CostItemList\030"
    "\002 \003(\0132\017.ItemSimpleData\"u\n!EquipSlotRpcEn"
    "hanceEquipSlotReply\022\022\n\006Result\030\001 \001(\005:\002-1\022"
    "%\n\rEquipSlotData\030\002 \003(\0132\016.EquipSlotInfo\022\025"
    "\n\tSlot_Type\030\003 \001(\005:\002-1\"T\n\036EquipSlotRpcUpS"
    "tarEquipSlotAsk\022\025\n\tSlot_Type\030\002 \001(\005:\002-1\022\033"
    "\n\014IsProtection\030\003 \001(\010:\005false\"\226\001\n EquipSlo"
    "tRpcUpStarEquipSlotReply\022\022\n\006Result\030\001 \001(\005"
    ":\002-1\022-\n\021EquipSlotStarList\030\002 \003(\0132\022.EquipS"
    "lotStarInfo\022\025\n\tSlot_Type\030\003 \001(\005:\002-1\022\030\n\014Up"
    "StarResult\030\004 \001(\005:\002-1\"\"\n EquipSlotRpcSync"
    "EquipSlotStarAsk\"g\n\"EquipSlotRpcSyncEqui"
    "pSlotStarReply\022\022\n\006Result\030\001 \001(\005:\002-1\022-\n\021Eq"
    "uipSlotStarList\030\002 \003(\0132\022.EquipSlotStarInf"
    "o", 761);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EquipSlotRpc.proto", &protobuf_RegisterTypes);
  EquipSlotRpcSyncEquipSlotAsk::default_instance_ = new EquipSlotRpcSyncEquipSlotAsk();
  EquipSlotRpcSyncEquipSlotReply::default_instance_ = new EquipSlotRpcSyncEquipSlotReply();
  EquipSlotRpcEnhanceEquipSlotAsk::default_instance_ = new EquipSlotRpcEnhanceEquipSlotAsk();
  EquipSlotRpcEnhanceEquipSlotReply::default_instance_ = new EquipSlotRpcEnhanceEquipSlotReply();
  EquipSlotRpcUpStarEquipSlotAsk::default_instance_ = new EquipSlotRpcUpStarEquipSlotAsk();
  EquipSlotRpcUpStarEquipSlotReply::default_instance_ = new EquipSlotRpcUpStarEquipSlotReply();
  EquipSlotRpcSyncEquipSlotStarAsk::default_instance_ = new EquipSlotRpcSyncEquipSlotStarAsk();
  EquipSlotRpcSyncEquipSlotStarReply::default_instance_ = new EquipSlotRpcSyncEquipSlotStarReply();
  EquipSlotRpcSyncEquipSlotAsk::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcSyncEquipSlotReply::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcEnhanceEquipSlotAsk::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcEnhanceEquipSlotReply::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcUpStarEquipSlotAsk::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcUpStarEquipSlotReply::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcSyncEquipSlotStarAsk::default_instance_->InitAsDefaultInstance();
  EquipSlotRpcSyncEquipSlotStarReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EquipSlotRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EquipSlotRpc_2eproto {
  StaticDescriptorInitializer_EquipSlotRpc_2eproto() {
    protobuf_AddDesc_EquipSlotRpc_2eproto();
  }
} static_descriptor_initializer_EquipSlotRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

EquipSlotRpcSyncEquipSlotAsk::EquipSlotRpcSyncEquipSlotAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcSyncEquipSlotAsk::InitAsDefaultInstance() {
}

EquipSlotRpcSyncEquipSlotAsk::EquipSlotRpcSyncEquipSlotAsk(const EquipSlotRpcSyncEquipSlotAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcSyncEquipSlotAsk::~EquipSlotRpcSyncEquipSlotAsk() {
  SharedDtor();
}

void EquipSlotRpcSyncEquipSlotAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcSyncEquipSlotAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcSyncEquipSlotAsk_descriptor_;
}

const EquipSlotRpcSyncEquipSlotAsk& EquipSlotRpcSyncEquipSlotAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcSyncEquipSlotAsk* EquipSlotRpcSyncEquipSlotAsk::default_instance_ = NULL;

EquipSlotRpcSyncEquipSlotAsk* EquipSlotRpcSyncEquipSlotAsk::New() const {
  return new EquipSlotRpcSyncEquipSlotAsk;
}

void EquipSlotRpcSyncEquipSlotAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcSyncEquipSlotAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void EquipSlotRpcSyncEquipSlotAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcSyncEquipSlotAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcSyncEquipSlotAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcSyncEquipSlotAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcSyncEquipSlotAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcSyncEquipSlotAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcSyncEquipSlotAsk::MergeFrom(const EquipSlotRpcSyncEquipSlotAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcSyncEquipSlotAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotAsk::CopyFrom(const EquipSlotRpcSyncEquipSlotAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcSyncEquipSlotAsk::IsInitialized() const {

  return true;
}

void EquipSlotRpcSyncEquipSlotAsk::Swap(EquipSlotRpcSyncEquipSlotAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcSyncEquipSlotAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcSyncEquipSlotAsk_descriptor_;
  metadata.reflection = EquipSlotRpcSyncEquipSlotAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcSyncEquipSlotReply::kResultFieldNumber;
const int EquipSlotRpcSyncEquipSlotReply::kEquipSlotDataFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcSyncEquipSlotReply::EquipSlotRpcSyncEquipSlotReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcSyncEquipSlotReply::InitAsDefaultInstance() {
}

EquipSlotRpcSyncEquipSlotReply::EquipSlotRpcSyncEquipSlotReply(const EquipSlotRpcSyncEquipSlotReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcSyncEquipSlotReply::~EquipSlotRpcSyncEquipSlotReply() {
  SharedDtor();
}

void EquipSlotRpcSyncEquipSlotReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcSyncEquipSlotReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcSyncEquipSlotReply_descriptor_;
}

const EquipSlotRpcSyncEquipSlotReply& EquipSlotRpcSyncEquipSlotReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcSyncEquipSlotReply* EquipSlotRpcSyncEquipSlotReply::default_instance_ = NULL;

EquipSlotRpcSyncEquipSlotReply* EquipSlotRpcSyncEquipSlotReply::New() const {
  return new EquipSlotRpcSyncEquipSlotReply;
}

void EquipSlotRpcSyncEquipSlotReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  equipslotdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcSyncEquipSlotReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotData;
        break;
      }

      // repeated .EquipSlotInfo EquipSlotData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EquipSlotData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipslotdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotData;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcSyncEquipSlotReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .EquipSlotInfo EquipSlotData = 2;
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipslotdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcSyncEquipSlotReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .EquipSlotInfo EquipSlotData = 2;
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipslotdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcSyncEquipSlotReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .EquipSlotInfo EquipSlotData = 2;
  total_size += 1 * this->equipslotdata_size();
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipslotdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcSyncEquipSlotReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcSyncEquipSlotReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcSyncEquipSlotReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcSyncEquipSlotReply::MergeFrom(const EquipSlotRpcSyncEquipSlotReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipslotdata_.MergeFrom(from.equipslotdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcSyncEquipSlotReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotReply::CopyFrom(const EquipSlotRpcSyncEquipSlotReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcSyncEquipSlotReply::IsInitialized() const {

  return true;
}

void EquipSlotRpcSyncEquipSlotReply::Swap(EquipSlotRpcSyncEquipSlotReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    equipslotdata_.Swap(&other->equipslotdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcSyncEquipSlotReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcSyncEquipSlotReply_descriptor_;
  metadata.reflection = EquipSlotRpcSyncEquipSlotReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcEnhanceEquipSlotAsk::kSlotTypeFieldNumber;
const int EquipSlotRpcEnhanceEquipSlotAsk::kCostItemListFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcEnhanceEquipSlotAsk::EquipSlotRpcEnhanceEquipSlotAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcEnhanceEquipSlotAsk::InitAsDefaultInstance() {
}

EquipSlotRpcEnhanceEquipSlotAsk::EquipSlotRpcEnhanceEquipSlotAsk(const EquipSlotRpcEnhanceEquipSlotAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcEnhanceEquipSlotAsk::SharedCtor() {
  _cached_size_ = 0;
  slot_type_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcEnhanceEquipSlotAsk::~EquipSlotRpcEnhanceEquipSlotAsk() {
  SharedDtor();
}

void EquipSlotRpcEnhanceEquipSlotAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcEnhanceEquipSlotAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcEnhanceEquipSlotAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcEnhanceEquipSlotAsk_descriptor_;
}

const EquipSlotRpcEnhanceEquipSlotAsk& EquipSlotRpcEnhanceEquipSlotAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcEnhanceEquipSlotAsk* EquipSlotRpcEnhanceEquipSlotAsk::default_instance_ = NULL;

EquipSlotRpcEnhanceEquipSlotAsk* EquipSlotRpcEnhanceEquipSlotAsk::New() const {
  return new EquipSlotRpcEnhanceEquipSlotAsk;
}

void EquipSlotRpcEnhanceEquipSlotAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_type_ = -1;
  }
  costitemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcEnhanceEquipSlotAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Slot_Type = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_type_)));
          set_has_slot_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_CostItemList;
        break;
      }

      // repeated .ItemSimpleData CostItemList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CostItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_costitemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_CostItemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcEnhanceEquipSlotAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Slot_Type = 1 [default = -1];
  if (has_slot_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_type(), output);
  }

  // repeated .ItemSimpleData CostItemList = 2;
  for (int i = 0; i < this->costitemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->costitemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcEnhanceEquipSlotAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Slot_Type = 1 [default = -1];
  if (has_slot_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_type(), target);
  }

  // repeated .ItemSimpleData CostItemList = 2;
  for (int i = 0; i < this->costitemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->costitemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcEnhanceEquipSlotAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Slot_Type = 1 [default = -1];
    if (has_slot_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_type());
    }

  }
  // repeated .ItemSimpleData CostItemList = 2;
  total_size += 1 * this->costitemlist_size();
  for (int i = 0; i < this->costitemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->costitemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcEnhanceEquipSlotAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcEnhanceEquipSlotAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcEnhanceEquipSlotAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcEnhanceEquipSlotAsk::MergeFrom(const EquipSlotRpcEnhanceEquipSlotAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  costitemlist_.MergeFrom(from.costitemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_type()) {
      set_slot_type(from.slot_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcEnhanceEquipSlotAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcEnhanceEquipSlotAsk::CopyFrom(const EquipSlotRpcEnhanceEquipSlotAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcEnhanceEquipSlotAsk::IsInitialized() const {

  return true;
}

void EquipSlotRpcEnhanceEquipSlotAsk::Swap(EquipSlotRpcEnhanceEquipSlotAsk* other) {
  if (other != this) {
    std::swap(slot_type_, other->slot_type_);
    costitemlist_.Swap(&other->costitemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcEnhanceEquipSlotAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcEnhanceEquipSlotAsk_descriptor_;
  metadata.reflection = EquipSlotRpcEnhanceEquipSlotAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcEnhanceEquipSlotReply::kResultFieldNumber;
const int EquipSlotRpcEnhanceEquipSlotReply::kEquipSlotDataFieldNumber;
const int EquipSlotRpcEnhanceEquipSlotReply::kSlotTypeFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcEnhanceEquipSlotReply::EquipSlotRpcEnhanceEquipSlotReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcEnhanceEquipSlotReply::InitAsDefaultInstance() {
}

EquipSlotRpcEnhanceEquipSlotReply::EquipSlotRpcEnhanceEquipSlotReply(const EquipSlotRpcEnhanceEquipSlotReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcEnhanceEquipSlotReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  slot_type_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcEnhanceEquipSlotReply::~EquipSlotRpcEnhanceEquipSlotReply() {
  SharedDtor();
}

void EquipSlotRpcEnhanceEquipSlotReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcEnhanceEquipSlotReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcEnhanceEquipSlotReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcEnhanceEquipSlotReply_descriptor_;
}

const EquipSlotRpcEnhanceEquipSlotReply& EquipSlotRpcEnhanceEquipSlotReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcEnhanceEquipSlotReply* EquipSlotRpcEnhanceEquipSlotReply::default_instance_ = NULL;

EquipSlotRpcEnhanceEquipSlotReply* EquipSlotRpcEnhanceEquipSlotReply::New() const {
  return new EquipSlotRpcEnhanceEquipSlotReply;
}

void EquipSlotRpcEnhanceEquipSlotReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    slot_type_ = -1;
  }
  equipslotdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcEnhanceEquipSlotReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotData;
        break;
      }

      // repeated .EquipSlotInfo EquipSlotData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EquipSlotData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipslotdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotData;
        if (input->ExpectTag(24)) goto parse_Slot_Type;
        break;
      }

      // optional int32 Slot_Type = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Slot_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_type_)));
          set_has_slot_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcEnhanceEquipSlotReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .EquipSlotInfo EquipSlotData = 2;
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipslotdata(i), output);
  }

  // optional int32 Slot_Type = 3 [default = -1];
  if (has_slot_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcEnhanceEquipSlotReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .EquipSlotInfo EquipSlotData = 2;
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipslotdata(i), target);
  }

  // optional int32 Slot_Type = 3 [default = -1];
  if (has_slot_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcEnhanceEquipSlotReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 Slot_Type = 3 [default = -1];
    if (has_slot_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_type());
    }

  }
  // repeated .EquipSlotInfo EquipSlotData = 2;
  total_size += 1 * this->equipslotdata_size();
  for (int i = 0; i < this->equipslotdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipslotdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcEnhanceEquipSlotReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcEnhanceEquipSlotReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcEnhanceEquipSlotReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcEnhanceEquipSlotReply::MergeFrom(const EquipSlotRpcEnhanceEquipSlotReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipslotdata_.MergeFrom(from.equipslotdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_slot_type()) {
      set_slot_type(from.slot_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcEnhanceEquipSlotReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcEnhanceEquipSlotReply::CopyFrom(const EquipSlotRpcEnhanceEquipSlotReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcEnhanceEquipSlotReply::IsInitialized() const {

  return true;
}

void EquipSlotRpcEnhanceEquipSlotReply::Swap(EquipSlotRpcEnhanceEquipSlotReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    equipslotdata_.Swap(&other->equipslotdata_);
    std::swap(slot_type_, other->slot_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcEnhanceEquipSlotReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcEnhanceEquipSlotReply_descriptor_;
  metadata.reflection = EquipSlotRpcEnhanceEquipSlotReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcUpStarEquipSlotAsk::kSlotTypeFieldNumber;
const int EquipSlotRpcUpStarEquipSlotAsk::kIsProtectionFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcUpStarEquipSlotAsk::EquipSlotRpcUpStarEquipSlotAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcUpStarEquipSlotAsk::InitAsDefaultInstance() {
}

EquipSlotRpcUpStarEquipSlotAsk::EquipSlotRpcUpStarEquipSlotAsk(const EquipSlotRpcUpStarEquipSlotAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcUpStarEquipSlotAsk::SharedCtor() {
  _cached_size_ = 0;
  slot_type_ = -1;
  isprotection_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcUpStarEquipSlotAsk::~EquipSlotRpcUpStarEquipSlotAsk() {
  SharedDtor();
}

void EquipSlotRpcUpStarEquipSlotAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcUpStarEquipSlotAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcUpStarEquipSlotAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcUpStarEquipSlotAsk_descriptor_;
}

const EquipSlotRpcUpStarEquipSlotAsk& EquipSlotRpcUpStarEquipSlotAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcUpStarEquipSlotAsk* EquipSlotRpcUpStarEquipSlotAsk::default_instance_ = NULL;

EquipSlotRpcUpStarEquipSlotAsk* EquipSlotRpcUpStarEquipSlotAsk::New() const {
  return new EquipSlotRpcUpStarEquipSlotAsk;
}

void EquipSlotRpcUpStarEquipSlotAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_type_ = -1;
    isprotection_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcUpStarEquipSlotAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Slot_Type = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_type_)));
          set_has_slot_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_IsProtection;
        break;
      }

      // optional bool IsProtection = 3 [default = false];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsProtection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isprotection_)));
          set_has_isprotection();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcUpStarEquipSlotAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Slot_Type = 2 [default = -1];
  if (has_slot_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_type(), output);
  }

  // optional bool IsProtection = 3 [default = false];
  if (has_isprotection()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isprotection(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcUpStarEquipSlotAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Slot_Type = 2 [default = -1];
  if (has_slot_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_type(), target);
  }

  // optional bool IsProtection = 3 [default = false];
  if (has_isprotection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isprotection(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcUpStarEquipSlotAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Slot_Type = 2 [default = -1];
    if (has_slot_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_type());
    }

    // optional bool IsProtection = 3 [default = false];
    if (has_isprotection()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcUpStarEquipSlotAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcUpStarEquipSlotAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcUpStarEquipSlotAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcUpStarEquipSlotAsk::MergeFrom(const EquipSlotRpcUpStarEquipSlotAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_type()) {
      set_slot_type(from.slot_type());
    }
    if (from.has_isprotection()) {
      set_isprotection(from.isprotection());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcUpStarEquipSlotAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcUpStarEquipSlotAsk::CopyFrom(const EquipSlotRpcUpStarEquipSlotAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcUpStarEquipSlotAsk::IsInitialized() const {

  return true;
}

void EquipSlotRpcUpStarEquipSlotAsk::Swap(EquipSlotRpcUpStarEquipSlotAsk* other) {
  if (other != this) {
    std::swap(slot_type_, other->slot_type_);
    std::swap(isprotection_, other->isprotection_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcUpStarEquipSlotAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcUpStarEquipSlotAsk_descriptor_;
  metadata.reflection = EquipSlotRpcUpStarEquipSlotAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcUpStarEquipSlotReply::kResultFieldNumber;
const int EquipSlotRpcUpStarEquipSlotReply::kEquipSlotStarListFieldNumber;
const int EquipSlotRpcUpStarEquipSlotReply::kSlotTypeFieldNumber;
const int EquipSlotRpcUpStarEquipSlotReply::kUpStarResultFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcUpStarEquipSlotReply::EquipSlotRpcUpStarEquipSlotReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcUpStarEquipSlotReply::InitAsDefaultInstance() {
}

EquipSlotRpcUpStarEquipSlotReply::EquipSlotRpcUpStarEquipSlotReply(const EquipSlotRpcUpStarEquipSlotReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcUpStarEquipSlotReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  slot_type_ = -1;
  upstarresult_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcUpStarEquipSlotReply::~EquipSlotRpcUpStarEquipSlotReply() {
  SharedDtor();
}

void EquipSlotRpcUpStarEquipSlotReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcUpStarEquipSlotReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcUpStarEquipSlotReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcUpStarEquipSlotReply_descriptor_;
}

const EquipSlotRpcUpStarEquipSlotReply& EquipSlotRpcUpStarEquipSlotReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcUpStarEquipSlotReply* EquipSlotRpcUpStarEquipSlotReply::default_instance_ = NULL;

EquipSlotRpcUpStarEquipSlotReply* EquipSlotRpcUpStarEquipSlotReply::New() const {
  return new EquipSlotRpcUpStarEquipSlotReply;
}

void EquipSlotRpcUpStarEquipSlotReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    slot_type_ = -1;
    upstarresult_ = -1;
  }
  equipslotstarlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcUpStarEquipSlotReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotStarList;
        break;
      }

      // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EquipSlotStarList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipslotstarlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotStarList;
        if (input->ExpectTag(24)) goto parse_Slot_Type;
        break;
      }

      // optional int32 Slot_Type = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Slot_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_type_)));
          set_has_slot_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_UpStarResult;
        break;
      }

      // optional int32 UpStarResult = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_UpStarResult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upstarresult_)));
          set_has_upstarresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcUpStarEquipSlotReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipslotstarlist(i), output);
  }

  // optional int32 Slot_Type = 3 [default = -1];
  if (has_slot_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slot_type(), output);
  }

  // optional int32 UpStarResult = 4 [default = -1];
  if (has_upstarresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->upstarresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcUpStarEquipSlotReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipslotstarlist(i), target);
  }

  // optional int32 Slot_Type = 3 [default = -1];
  if (has_slot_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slot_type(), target);
  }

  // optional int32 UpStarResult = 4 [default = -1];
  if (has_upstarresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->upstarresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcUpStarEquipSlotReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 Slot_Type = 3 [default = -1];
    if (has_slot_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_type());
    }

    // optional int32 UpStarResult = 4 [default = -1];
    if (has_upstarresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upstarresult());
    }

  }
  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  total_size += 1 * this->equipslotstarlist_size();
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipslotstarlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcUpStarEquipSlotReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcUpStarEquipSlotReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcUpStarEquipSlotReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcUpStarEquipSlotReply::MergeFrom(const EquipSlotRpcUpStarEquipSlotReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipslotstarlist_.MergeFrom(from.equipslotstarlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_slot_type()) {
      set_slot_type(from.slot_type());
    }
    if (from.has_upstarresult()) {
      set_upstarresult(from.upstarresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcUpStarEquipSlotReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcUpStarEquipSlotReply::CopyFrom(const EquipSlotRpcUpStarEquipSlotReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcUpStarEquipSlotReply::IsInitialized() const {

  return true;
}

void EquipSlotRpcUpStarEquipSlotReply::Swap(EquipSlotRpcUpStarEquipSlotReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    equipslotstarlist_.Swap(&other->equipslotstarlist_);
    std::swap(slot_type_, other->slot_type_);
    std::swap(upstarresult_, other->upstarresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcUpStarEquipSlotReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcUpStarEquipSlotReply_descriptor_;
  metadata.reflection = EquipSlotRpcUpStarEquipSlotReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

EquipSlotRpcSyncEquipSlotStarAsk::EquipSlotRpcSyncEquipSlotStarAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcSyncEquipSlotStarAsk::InitAsDefaultInstance() {
}

EquipSlotRpcSyncEquipSlotStarAsk::EquipSlotRpcSyncEquipSlotStarAsk(const EquipSlotRpcSyncEquipSlotStarAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotStarAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcSyncEquipSlotStarAsk::~EquipSlotRpcSyncEquipSlotStarAsk() {
  SharedDtor();
}

void EquipSlotRpcSyncEquipSlotStarAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcSyncEquipSlotStarAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotStarAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcSyncEquipSlotStarAsk_descriptor_;
}

const EquipSlotRpcSyncEquipSlotStarAsk& EquipSlotRpcSyncEquipSlotStarAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcSyncEquipSlotStarAsk* EquipSlotRpcSyncEquipSlotStarAsk::default_instance_ = NULL;

EquipSlotRpcSyncEquipSlotStarAsk* EquipSlotRpcSyncEquipSlotStarAsk::New() const {
  return new EquipSlotRpcSyncEquipSlotStarAsk;
}

void EquipSlotRpcSyncEquipSlotStarAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcSyncEquipSlotStarAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void EquipSlotRpcSyncEquipSlotStarAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcSyncEquipSlotStarAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcSyncEquipSlotStarAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcSyncEquipSlotStarAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcSyncEquipSlotStarAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcSyncEquipSlotStarAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcSyncEquipSlotStarAsk::MergeFrom(const EquipSlotRpcSyncEquipSlotStarAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcSyncEquipSlotStarAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotStarAsk::CopyFrom(const EquipSlotRpcSyncEquipSlotStarAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcSyncEquipSlotStarAsk::IsInitialized() const {

  return true;
}

void EquipSlotRpcSyncEquipSlotStarAsk::Swap(EquipSlotRpcSyncEquipSlotStarAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcSyncEquipSlotStarAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcSyncEquipSlotStarAsk_descriptor_;
  metadata.reflection = EquipSlotRpcSyncEquipSlotStarAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipSlotRpcSyncEquipSlotStarReply::kResultFieldNumber;
const int EquipSlotRpcSyncEquipSlotStarReply::kEquipSlotStarListFieldNumber;
#endif  // !_MSC_VER

EquipSlotRpcSyncEquipSlotStarReply::EquipSlotRpcSyncEquipSlotStarReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipSlotRpcSyncEquipSlotStarReply::InitAsDefaultInstance() {
}

EquipSlotRpcSyncEquipSlotStarReply::EquipSlotRpcSyncEquipSlotStarReply(const EquipSlotRpcSyncEquipSlotStarReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotStarReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipSlotRpcSyncEquipSlotStarReply::~EquipSlotRpcSyncEquipSlotStarReply() {
  SharedDtor();
}

void EquipSlotRpcSyncEquipSlotStarReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipSlotRpcSyncEquipSlotStarReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSlotRpcSyncEquipSlotStarReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipSlotRpcSyncEquipSlotStarReply_descriptor_;
}

const EquipSlotRpcSyncEquipSlotStarReply& EquipSlotRpcSyncEquipSlotStarReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EquipSlotRpc_2eproto();
  return *default_instance_;
}

EquipSlotRpcSyncEquipSlotStarReply* EquipSlotRpcSyncEquipSlotStarReply::default_instance_ = NULL;

EquipSlotRpcSyncEquipSlotStarReply* EquipSlotRpcSyncEquipSlotStarReply::New() const {
  return new EquipSlotRpcSyncEquipSlotStarReply;
}

void EquipSlotRpcSyncEquipSlotStarReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  equipslotstarlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipSlotRpcSyncEquipSlotStarReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotStarList;
        break;
      }

      // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EquipSlotStarList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipslotstarlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EquipSlotStarList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipSlotRpcSyncEquipSlotStarReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipslotstarlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipSlotRpcSyncEquipSlotStarReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipslotstarlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipSlotRpcSyncEquipSlotStarReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .EquipSlotStarInfo EquipSlotStarList = 2;
  total_size += 1 * this->equipslotstarlist_size();
  for (int i = 0; i < this->equipslotstarlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipslotstarlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSlotRpcSyncEquipSlotStarReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipSlotRpcSyncEquipSlotStarReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipSlotRpcSyncEquipSlotStarReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipSlotRpcSyncEquipSlotStarReply::MergeFrom(const EquipSlotRpcSyncEquipSlotStarReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipslotstarlist_.MergeFrom(from.equipslotstarlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipSlotRpcSyncEquipSlotStarReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSlotRpcSyncEquipSlotStarReply::CopyFrom(const EquipSlotRpcSyncEquipSlotStarReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSlotRpcSyncEquipSlotStarReply::IsInitialized() const {

  return true;
}

void EquipSlotRpcSyncEquipSlotStarReply::Swap(EquipSlotRpcSyncEquipSlotStarReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    equipslotstarlist_.Swap(&other->equipslotstarlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipSlotRpcSyncEquipSlotStarReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipSlotRpcSyncEquipSlotStarReply_descriptor_;
  metadata.reflection = EquipSlotRpcSyncEquipSlotStarReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
