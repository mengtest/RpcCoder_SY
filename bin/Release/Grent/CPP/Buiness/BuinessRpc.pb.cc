// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BuinessRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BuinessRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BuinessRpcBuinessSyncAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessSyncAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessSyncReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessSyncReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessUnlockAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessUnlockAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessUnlockReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessUnlockReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessStudyAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessStudyAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessStudyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessStudyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessMakeAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessMakeAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuinessRpcBuinessMakeReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuinessRpcBuinessMakeReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BuinessRpc_2eproto() {
  protobuf_AddDesc_BuinessRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BuinessRpc.proto");
  GOOGLE_CHECK(file != NULL);
  BuinessRpcBuinessSyncAsk_descriptor_ = file->message_type(0);
  static const int BuinessRpcBuinessSyncAsk_offsets_[1] = {
  };
  BuinessRpcBuinessSyncAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessSyncAsk_descriptor_,
      BuinessRpcBuinessSyncAsk::default_instance_,
      BuinessRpcBuinessSyncAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessSyncAsk));
  BuinessRpcBuinessSyncReply_descriptor_ = file->message_type(1);
  static const int BuinessRpcBuinessSyncReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncReply, skilldatas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncReply, unlockinfos_),
  };
  BuinessRpcBuinessSyncReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessSyncReply_descriptor_,
      BuinessRpcBuinessSyncReply::default_instance_,
      BuinessRpcBuinessSyncReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessSyncReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessSyncReply));
  BuinessRpcBuinessUnlockAsk_descriptor_ = file->message_type(2);
  static const int BuinessRpcBuinessUnlockAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockAsk, skillid_),
  };
  BuinessRpcBuinessUnlockAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessUnlockAsk_descriptor_,
      BuinessRpcBuinessUnlockAsk::default_instance_,
      BuinessRpcBuinessUnlockAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessUnlockAsk));
  BuinessRpcBuinessUnlockReply_descriptor_ = file->message_type(3);
  static const int BuinessRpcBuinessUnlockReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockReply, changeskilldatas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockReply, unlockinfo_),
  };
  BuinessRpcBuinessUnlockReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessUnlockReply_descriptor_,
      BuinessRpcBuinessUnlockReply::default_instance_,
      BuinessRpcBuinessUnlockReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessUnlockReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessUnlockReply));
  BuinessRpcBuinessStudyAsk_descriptor_ = file->message_type(4);
  static const int BuinessRpcBuinessStudyAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyAsk, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyAsk, studytype_),
  };
  BuinessRpcBuinessStudyAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessStudyAsk_descriptor_,
      BuinessRpcBuinessStudyAsk::default_instance_,
      BuinessRpcBuinessStudyAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessStudyAsk));
  BuinessRpcBuinessStudyReply_descriptor_ = file->message_type(5);
  static const int BuinessRpcBuinessStudyReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyReply, skilldata_),
  };
  BuinessRpcBuinessStudyReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessStudyReply_descriptor_,
      BuinessRpcBuinessStudyReply::default_instance_,
      BuinessRpcBuinessStudyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessStudyReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessStudyReply));
  BuinessRpcBuinessMakeAsk_descriptor_ = file->message_type(6);
  static const int BuinessRpcBuinessMakeAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeAsk, skillid_),
  };
  BuinessRpcBuinessMakeAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessMakeAsk_descriptor_,
      BuinessRpcBuinessMakeAsk::default_instance_,
      BuinessRpcBuinessMakeAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessMakeAsk));
  BuinessRpcBuinessMakeReply_descriptor_ = file->message_type(7);
  static const int BuinessRpcBuinessMakeReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeReply, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeReply, itemcount_),
  };
  BuinessRpcBuinessMakeReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuinessRpcBuinessMakeReply_descriptor_,
      BuinessRpcBuinessMakeReply::default_instance_,
      BuinessRpcBuinessMakeReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuinessRpcBuinessMakeReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuinessRpcBuinessMakeReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BuinessRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessSyncAsk_descriptor_, &BuinessRpcBuinessSyncAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessSyncReply_descriptor_, &BuinessRpcBuinessSyncReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessUnlockAsk_descriptor_, &BuinessRpcBuinessUnlockAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessUnlockReply_descriptor_, &BuinessRpcBuinessUnlockReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessStudyAsk_descriptor_, &BuinessRpcBuinessStudyAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessStudyReply_descriptor_, &BuinessRpcBuinessStudyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessMakeAsk_descriptor_, &BuinessRpcBuinessMakeAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuinessRpcBuinessMakeReply_descriptor_, &BuinessRpcBuinessMakeReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BuinessRpc_2eproto() {
  delete BuinessRpcBuinessSyncAsk::default_instance_;
  delete BuinessRpcBuinessSyncAsk_reflection_;
  delete BuinessRpcBuinessSyncReply::default_instance_;
  delete BuinessRpcBuinessSyncReply_reflection_;
  delete BuinessRpcBuinessUnlockAsk::default_instance_;
  delete BuinessRpcBuinessUnlockAsk_reflection_;
  delete BuinessRpcBuinessUnlockReply::default_instance_;
  delete BuinessRpcBuinessUnlockReply_reflection_;
  delete BuinessRpcBuinessStudyAsk::default_instance_;
  delete BuinessRpcBuinessStudyAsk_reflection_;
  delete BuinessRpcBuinessStudyReply::default_instance_;
  delete BuinessRpcBuinessStudyReply_reflection_;
  delete BuinessRpcBuinessMakeAsk::default_instance_;
  delete BuinessRpcBuinessMakeAsk_reflection_;
  delete BuinessRpcBuinessMakeReply::default_instance_;
  delete BuinessRpcBuinessMakeReply_reflection_;
}

void protobuf_AddDesc_BuinessRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020BuinessRpc.proto\032\022PublicStruct.proto\"\032"
    "\n\030BuinessRpcBuinessSyncAsk\"\200\001\n\032BuinessRp"
    "cBuinessSyncReply\022\022\n\006Result\030\001 \001(\005:\002-1\022%\n"
    "\nSkillDatas\030\002 \003(\0132\021.BuinessSkillData\022\'\n\013"
    "UnLockInfos\030\003 \003(\0132\022.BuinessUnlockInfo\"1\n"
    "\032BuinessRpcBuinessUnlockAsk\022\023\n\007SkillID\030\001"
    " \001(\005:\002-1\"\207\001\n\034BuinessRpcBuinessUnlockRepl"
    "y\022\022\n\006Result\030\001 \001(\005:\002-1\022+\n\020ChangeSkillData"
    "s\030\002 \003(\0132\021.BuinessSkillData\022&\n\nUnLockInfo"
    "\030\004 \001(\0132\022.BuinessUnlockInfo\"G\n\031BuinessRpc"
    "BuinessStudyAsk\022\023\n\007SkillID\030\001 \001(\005:\002-1\022\025\n\t"
    "StudyType\030\002 \001(\005:\002-1\"W\n\033BuinessRpcBuiness"
    "StudyReply\022\022\n\006Result\030\001 \001(\005:\002-1\022$\n\tSkillD"
    "ata\030\002 \001(\0132\021.BuinessSkillData\"/\n\030BuinessR"
    "pcBuinessMakeAsk\022\023\n\007SkillID\030\001 \001(\005:\002-1\"[\n"
    "\032BuinessRpcBuinessMakeReply\022\022\n\006Result\030\001 "
    "\001(\005:\002-1\022\022\n\006ItemID\030\004 \001(\005:\002-1\022\025\n\tItemCount"
    "\030\005 \001(\005:\002-1", 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BuinessRpc.proto", &protobuf_RegisterTypes);
  BuinessRpcBuinessSyncAsk::default_instance_ = new BuinessRpcBuinessSyncAsk();
  BuinessRpcBuinessSyncReply::default_instance_ = new BuinessRpcBuinessSyncReply();
  BuinessRpcBuinessUnlockAsk::default_instance_ = new BuinessRpcBuinessUnlockAsk();
  BuinessRpcBuinessUnlockReply::default_instance_ = new BuinessRpcBuinessUnlockReply();
  BuinessRpcBuinessStudyAsk::default_instance_ = new BuinessRpcBuinessStudyAsk();
  BuinessRpcBuinessStudyReply::default_instance_ = new BuinessRpcBuinessStudyReply();
  BuinessRpcBuinessMakeAsk::default_instance_ = new BuinessRpcBuinessMakeAsk();
  BuinessRpcBuinessMakeReply::default_instance_ = new BuinessRpcBuinessMakeReply();
  BuinessRpcBuinessSyncAsk::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessSyncReply::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessUnlockAsk::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessUnlockReply::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessStudyAsk::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessStudyReply::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessMakeAsk::default_instance_->InitAsDefaultInstance();
  BuinessRpcBuinessMakeReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BuinessRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BuinessRpc_2eproto {
  StaticDescriptorInitializer_BuinessRpc_2eproto() {
    protobuf_AddDesc_BuinessRpc_2eproto();
  }
} static_descriptor_initializer_BuinessRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuinessRpcBuinessSyncAsk::BuinessRpcBuinessSyncAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessSyncAsk::InitAsDefaultInstance() {
}

BuinessRpcBuinessSyncAsk::BuinessRpcBuinessSyncAsk(const BuinessRpcBuinessSyncAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessSyncAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessSyncAsk::~BuinessRpcBuinessSyncAsk() {
  SharedDtor();
}

void BuinessRpcBuinessSyncAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessSyncAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessSyncAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessSyncAsk_descriptor_;
}

const BuinessRpcBuinessSyncAsk& BuinessRpcBuinessSyncAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessSyncAsk* BuinessRpcBuinessSyncAsk::default_instance_ = NULL;

BuinessRpcBuinessSyncAsk* BuinessRpcBuinessSyncAsk::New() const {
  return new BuinessRpcBuinessSyncAsk;
}

void BuinessRpcBuinessSyncAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessSyncAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessSyncAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessSyncAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessSyncAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessSyncAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessSyncAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessSyncAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessSyncAsk::MergeFrom(const BuinessRpcBuinessSyncAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessSyncAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessSyncAsk::CopyFrom(const BuinessRpcBuinessSyncAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessSyncAsk::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessSyncAsk::Swap(BuinessRpcBuinessSyncAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessSyncAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessSyncAsk_descriptor_;
  metadata.reflection = BuinessRpcBuinessSyncAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessSyncReply::kResultFieldNumber;
const int BuinessRpcBuinessSyncReply::kSkillDatasFieldNumber;
const int BuinessRpcBuinessSyncReply::kUnLockInfosFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessSyncReply::BuinessRpcBuinessSyncReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessSyncReply::InitAsDefaultInstance() {
}

BuinessRpcBuinessSyncReply::BuinessRpcBuinessSyncReply(const BuinessRpcBuinessSyncReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessSyncReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessSyncReply::~BuinessRpcBuinessSyncReply() {
  SharedDtor();
}

void BuinessRpcBuinessSyncReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessSyncReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessSyncReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessSyncReply_descriptor_;
}

const BuinessRpcBuinessSyncReply& BuinessRpcBuinessSyncReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessSyncReply* BuinessRpcBuinessSyncReply::default_instance_ = NULL;

BuinessRpcBuinessSyncReply* BuinessRpcBuinessSyncReply::New() const {
  return new BuinessRpcBuinessSyncReply;
}

void BuinessRpcBuinessSyncReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  skilldatas_.Clear();
  unlockinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessSyncReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SkillDatas;
        break;
      }

      // repeated .BuinessSkillData SkillDatas = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SkillDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skilldatas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SkillDatas;
        if (input->ExpectTag(26)) goto parse_UnLockInfos;
        break;
      }

      // repeated .BuinessUnlockInfo UnLockInfos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_UnLockInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unlockinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_UnLockInfos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessSyncReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .BuinessSkillData SkillDatas = 2;
  for (int i = 0; i < this->skilldatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skilldatas(i), output);
  }

  // repeated .BuinessUnlockInfo UnLockInfos = 3;
  for (int i = 0; i < this->unlockinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unlockinfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessSyncReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .BuinessSkillData SkillDatas = 2;
  for (int i = 0; i < this->skilldatas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skilldatas(i), target);
  }

  // repeated .BuinessUnlockInfo UnLockInfos = 3;
  for (int i = 0; i < this->unlockinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->unlockinfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessSyncReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .BuinessSkillData SkillDatas = 2;
  total_size += 1 * this->skilldatas_size();
  for (int i = 0; i < this->skilldatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skilldatas(i));
  }

  // repeated .BuinessUnlockInfo UnLockInfos = 3;
  total_size += 1 * this->unlockinfos_size();
  for (int i = 0; i < this->unlockinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unlockinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessSyncReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessSyncReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessSyncReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessSyncReply::MergeFrom(const BuinessRpcBuinessSyncReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  skilldatas_.MergeFrom(from.skilldatas_);
  unlockinfos_.MergeFrom(from.unlockinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessSyncReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessSyncReply::CopyFrom(const BuinessRpcBuinessSyncReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessSyncReply::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessSyncReply::Swap(BuinessRpcBuinessSyncReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    skilldatas_.Swap(&other->skilldatas_);
    unlockinfos_.Swap(&other->unlockinfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessSyncReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessSyncReply_descriptor_;
  metadata.reflection = BuinessRpcBuinessSyncReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessUnlockAsk::kSkillIDFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessUnlockAsk::BuinessRpcBuinessUnlockAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessUnlockAsk::InitAsDefaultInstance() {
}

BuinessRpcBuinessUnlockAsk::BuinessRpcBuinessUnlockAsk(const BuinessRpcBuinessUnlockAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessUnlockAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessUnlockAsk::~BuinessRpcBuinessUnlockAsk() {
  SharedDtor();
}

void BuinessRpcBuinessUnlockAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessUnlockAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessUnlockAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessUnlockAsk_descriptor_;
}

const BuinessRpcBuinessUnlockAsk& BuinessRpcBuinessUnlockAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessUnlockAsk* BuinessRpcBuinessUnlockAsk::default_instance_ = NULL;

BuinessRpcBuinessUnlockAsk* BuinessRpcBuinessUnlockAsk::New() const {
  return new BuinessRpcBuinessUnlockAsk;
}

void BuinessRpcBuinessUnlockAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessUnlockAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SkillID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessUnlockAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessUnlockAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessUnlockAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SkillID = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessUnlockAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessUnlockAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessUnlockAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessUnlockAsk::MergeFrom(const BuinessRpcBuinessUnlockAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessUnlockAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessUnlockAsk::CopyFrom(const BuinessRpcBuinessUnlockAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessUnlockAsk::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessUnlockAsk::Swap(BuinessRpcBuinessUnlockAsk* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessUnlockAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessUnlockAsk_descriptor_;
  metadata.reflection = BuinessRpcBuinessUnlockAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessUnlockReply::kResultFieldNumber;
const int BuinessRpcBuinessUnlockReply::kChangeSkillDatasFieldNumber;
const int BuinessRpcBuinessUnlockReply::kUnLockInfoFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessUnlockReply::BuinessRpcBuinessUnlockReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessUnlockReply::InitAsDefaultInstance() {
  unlockinfo_ = const_cast< ::BuinessUnlockInfo*>(&::BuinessUnlockInfo::default_instance());
}

BuinessRpcBuinessUnlockReply::BuinessRpcBuinessUnlockReply(const BuinessRpcBuinessUnlockReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessUnlockReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  unlockinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessUnlockReply::~BuinessRpcBuinessUnlockReply() {
  SharedDtor();
}

void BuinessRpcBuinessUnlockReply::SharedDtor() {
  if (this != default_instance_) {
    delete unlockinfo_;
  }
}

void BuinessRpcBuinessUnlockReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessUnlockReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessUnlockReply_descriptor_;
}

const BuinessRpcBuinessUnlockReply& BuinessRpcBuinessUnlockReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessUnlockReply* BuinessRpcBuinessUnlockReply::default_instance_ = NULL;

BuinessRpcBuinessUnlockReply* BuinessRpcBuinessUnlockReply::New() const {
  return new BuinessRpcBuinessUnlockReply;
}

void BuinessRpcBuinessUnlockReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_unlockinfo()) {
      if (unlockinfo_ != NULL) unlockinfo_->::BuinessUnlockInfo::Clear();
    }
  }
  changeskilldatas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessUnlockReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ChangeSkillDatas;
        break;
      }

      // repeated .BuinessSkillData ChangeSkillDatas = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ChangeSkillDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_changeskilldatas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ChangeSkillDatas;
        if (input->ExpectTag(34)) goto parse_UnLockInfo;
        break;
      }

      // optional .BuinessUnlockInfo UnLockInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_UnLockInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unlockinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessUnlockReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .BuinessSkillData ChangeSkillDatas = 2;
  for (int i = 0; i < this->changeskilldatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->changeskilldatas(i), output);
  }

  // optional .BuinessUnlockInfo UnLockInfo = 4;
  if (has_unlockinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->unlockinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessUnlockReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .BuinessSkillData ChangeSkillDatas = 2;
  for (int i = 0; i < this->changeskilldatas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->changeskilldatas(i), target);
  }

  // optional .BuinessUnlockInfo UnLockInfo = 4;
  if (has_unlockinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->unlockinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessUnlockReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .BuinessUnlockInfo UnLockInfo = 4;
    if (has_unlockinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unlockinfo());
    }

  }
  // repeated .BuinessSkillData ChangeSkillDatas = 2;
  total_size += 1 * this->changeskilldatas_size();
  for (int i = 0; i < this->changeskilldatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->changeskilldatas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessUnlockReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessUnlockReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessUnlockReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessUnlockReply::MergeFrom(const BuinessRpcBuinessUnlockReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  changeskilldatas_.MergeFrom(from.changeskilldatas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_unlockinfo()) {
      mutable_unlockinfo()->::BuinessUnlockInfo::MergeFrom(from.unlockinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessUnlockReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessUnlockReply::CopyFrom(const BuinessRpcBuinessUnlockReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessUnlockReply::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessUnlockReply::Swap(BuinessRpcBuinessUnlockReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    changeskilldatas_.Swap(&other->changeskilldatas_);
    std::swap(unlockinfo_, other->unlockinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessUnlockReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessUnlockReply_descriptor_;
  metadata.reflection = BuinessRpcBuinessUnlockReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessStudyAsk::kSkillIDFieldNumber;
const int BuinessRpcBuinessStudyAsk::kStudyTypeFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessStudyAsk::BuinessRpcBuinessStudyAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessStudyAsk::InitAsDefaultInstance() {
}

BuinessRpcBuinessStudyAsk::BuinessRpcBuinessStudyAsk(const BuinessRpcBuinessStudyAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessStudyAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
  studytype_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessStudyAsk::~BuinessRpcBuinessStudyAsk() {
  SharedDtor();
}

void BuinessRpcBuinessStudyAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessStudyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessStudyAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessStudyAsk_descriptor_;
}

const BuinessRpcBuinessStudyAsk& BuinessRpcBuinessStudyAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessStudyAsk* BuinessRpcBuinessStudyAsk::default_instance_ = NULL;

BuinessRpcBuinessStudyAsk* BuinessRpcBuinessStudyAsk::New() const {
  return new BuinessRpcBuinessStudyAsk;
}

void BuinessRpcBuinessStudyAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = -1;
    studytype_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessStudyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SkillID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_StudyType;
        break;
      }

      // optional int32 StudyType = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_StudyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &studytype_)));
          set_has_studytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessStudyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillid(), output);
  }

  // optional int32 StudyType = 2 [default = -1];
  if (has_studytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->studytype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessStudyAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillid(), target);
  }

  // optional int32 StudyType = 2 [default = -1];
  if (has_studytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->studytype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessStudyAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SkillID = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 StudyType = 2 [default = -1];
    if (has_studytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->studytype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessStudyAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessStudyAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessStudyAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessStudyAsk::MergeFrom(const BuinessRpcBuinessStudyAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_studytype()) {
      set_studytype(from.studytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessStudyAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessStudyAsk::CopyFrom(const BuinessRpcBuinessStudyAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessStudyAsk::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessStudyAsk::Swap(BuinessRpcBuinessStudyAsk* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(studytype_, other->studytype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessStudyAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessStudyAsk_descriptor_;
  metadata.reflection = BuinessRpcBuinessStudyAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessStudyReply::kResultFieldNumber;
const int BuinessRpcBuinessStudyReply::kSkillDataFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessStudyReply::BuinessRpcBuinessStudyReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessStudyReply::InitAsDefaultInstance() {
  skilldata_ = const_cast< ::BuinessSkillData*>(&::BuinessSkillData::default_instance());
}

BuinessRpcBuinessStudyReply::BuinessRpcBuinessStudyReply(const BuinessRpcBuinessStudyReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessStudyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  skilldata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessStudyReply::~BuinessRpcBuinessStudyReply() {
  SharedDtor();
}

void BuinessRpcBuinessStudyReply::SharedDtor() {
  if (this != default_instance_) {
    delete skilldata_;
  }
}

void BuinessRpcBuinessStudyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessStudyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessStudyReply_descriptor_;
}

const BuinessRpcBuinessStudyReply& BuinessRpcBuinessStudyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessStudyReply* BuinessRpcBuinessStudyReply::default_instance_ = NULL;

BuinessRpcBuinessStudyReply* BuinessRpcBuinessStudyReply::New() const {
  return new BuinessRpcBuinessStudyReply;
}

void BuinessRpcBuinessStudyReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_skilldata()) {
      if (skilldata_ != NULL) skilldata_->::BuinessSkillData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessStudyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SkillData;
        break;
      }

      // optional .BuinessSkillData SkillData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SkillData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skilldata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessStudyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .BuinessSkillData SkillData = 2;
  if (has_skilldata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skilldata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessStudyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .BuinessSkillData SkillData = 2;
  if (has_skilldata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skilldata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessStudyReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .BuinessSkillData SkillData = 2;
    if (has_skilldata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skilldata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessStudyReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessStudyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessStudyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessStudyReply::MergeFrom(const BuinessRpcBuinessStudyReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_skilldata()) {
      mutable_skilldata()->::BuinessSkillData::MergeFrom(from.skilldata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessStudyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessStudyReply::CopyFrom(const BuinessRpcBuinessStudyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessStudyReply::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessStudyReply::Swap(BuinessRpcBuinessStudyReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(skilldata_, other->skilldata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessStudyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessStudyReply_descriptor_;
  metadata.reflection = BuinessRpcBuinessStudyReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessMakeAsk::kSkillIDFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessMakeAsk::BuinessRpcBuinessMakeAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessMakeAsk::InitAsDefaultInstance() {
}

BuinessRpcBuinessMakeAsk::BuinessRpcBuinessMakeAsk(const BuinessRpcBuinessMakeAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessMakeAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessMakeAsk::~BuinessRpcBuinessMakeAsk() {
  SharedDtor();
}

void BuinessRpcBuinessMakeAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessMakeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessMakeAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessMakeAsk_descriptor_;
}

const BuinessRpcBuinessMakeAsk& BuinessRpcBuinessMakeAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessMakeAsk* BuinessRpcBuinessMakeAsk::default_instance_ = NULL;

BuinessRpcBuinessMakeAsk* BuinessRpcBuinessMakeAsk::New() const {
  return new BuinessRpcBuinessMakeAsk;
}

void BuinessRpcBuinessMakeAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessMakeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SkillID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessMakeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessMakeAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 SkillID = 1 [default = -1];
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessMakeAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SkillID = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessMakeAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessMakeAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessMakeAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessMakeAsk::MergeFrom(const BuinessRpcBuinessMakeAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessMakeAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessMakeAsk::CopyFrom(const BuinessRpcBuinessMakeAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessMakeAsk::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessMakeAsk::Swap(BuinessRpcBuinessMakeAsk* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessMakeAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessMakeAsk_descriptor_;
  metadata.reflection = BuinessRpcBuinessMakeAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuinessRpcBuinessMakeReply::kResultFieldNumber;
const int BuinessRpcBuinessMakeReply::kItemIDFieldNumber;
const int BuinessRpcBuinessMakeReply::kItemCountFieldNumber;
#endif  // !_MSC_VER

BuinessRpcBuinessMakeReply::BuinessRpcBuinessMakeReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuinessRpcBuinessMakeReply::InitAsDefaultInstance() {
}

BuinessRpcBuinessMakeReply::BuinessRpcBuinessMakeReply(const BuinessRpcBuinessMakeReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuinessRpcBuinessMakeReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  itemid_ = -1;
  itemcount_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuinessRpcBuinessMakeReply::~BuinessRpcBuinessMakeReply() {
  SharedDtor();
}

void BuinessRpcBuinessMakeReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuinessRpcBuinessMakeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuinessRpcBuinessMakeReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuinessRpcBuinessMakeReply_descriptor_;
}

const BuinessRpcBuinessMakeReply& BuinessRpcBuinessMakeReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BuinessRpc_2eproto();
  return *default_instance_;
}

BuinessRpcBuinessMakeReply* BuinessRpcBuinessMakeReply::default_instance_ = NULL;

BuinessRpcBuinessMakeReply* BuinessRpcBuinessMakeReply::New() const {
  return new BuinessRpcBuinessMakeReply;
}

void BuinessRpcBuinessMakeReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    itemid_ = -1;
    itemcount_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuinessRpcBuinessMakeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ItemID;
        break;
      }

      // optional int32 ItemID = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ItemCount;
        break;
      }

      // optional int32 ItemCount = 5 [default = -1];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ItemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuinessRpcBuinessMakeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 ItemID = 4 [default = -1];
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemid(), output);
  }

  // optional int32 ItemCount = 5 [default = -1];
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->itemcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuinessRpcBuinessMakeReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 ItemID = 4 [default = -1];
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemid(), target);
  }

  // optional int32 ItemCount = 5 [default = -1];
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->itemcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuinessRpcBuinessMakeReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 ItemID = 4 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 ItemCount = 5 [default = -1];
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuinessRpcBuinessMakeReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuinessRpcBuinessMakeReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuinessRpcBuinessMakeReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuinessRpcBuinessMakeReply::MergeFrom(const BuinessRpcBuinessMakeReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuinessRpcBuinessMakeReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuinessRpcBuinessMakeReply::CopyFrom(const BuinessRpcBuinessMakeReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuinessRpcBuinessMakeReply::IsInitialized() const {

  return true;
}

void BuinessRpcBuinessMakeReply::Swap(BuinessRpcBuinessMakeReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuinessRpcBuinessMakeReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuinessRpcBuinessMakeReply_descriptor_;
  metadata.reflection = BuinessRpcBuinessMakeReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
