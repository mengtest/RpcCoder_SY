// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BuinessRpc.proto

#ifndef PROTOBUF_BuinessRpc_2eproto__INCLUDED
#define PROTOBUF_BuinessRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BuinessRpc_2eproto();
void protobuf_AssignDesc_BuinessRpc_2eproto();
void protobuf_ShutdownFile_BuinessRpc_2eproto();

class BuinessRpcBuinessSyncAsk;
class BuinessRpcBuinessSyncReply;
class BuinessRpcBuinessUnlockAsk;
class BuinessRpcBuinessUnlockReply;
class BuinessRpcBuinessStudyAsk;
class BuinessRpcBuinessStudyReply;
class BuinessRpcBuinessMakeAsk;
class BuinessRpcBuinessMakeReply;

// ===================================================================

class BuinessRpcBuinessSyncAsk : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessSyncAsk();
  virtual ~BuinessRpcBuinessSyncAsk();

  BuinessRpcBuinessSyncAsk(const BuinessRpcBuinessSyncAsk& from);

  inline BuinessRpcBuinessSyncAsk& operator=(const BuinessRpcBuinessSyncAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessSyncAsk& default_instance();

  void Swap(BuinessRpcBuinessSyncAsk* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessSyncAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessSyncAsk& from);
  void MergeFrom(const BuinessRpcBuinessSyncAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessSyncAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessSyncAsk* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessSyncReply : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessSyncReply();
  virtual ~BuinessRpcBuinessSyncReply();

  BuinessRpcBuinessSyncReply(const BuinessRpcBuinessSyncReply& from);

  inline BuinessRpcBuinessSyncReply& operator=(const BuinessRpcBuinessSyncReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessSyncReply& default_instance();

  void Swap(BuinessRpcBuinessSyncReply* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessSyncReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessSyncReply& from);
  void MergeFrom(const BuinessRpcBuinessSyncReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .BuinessSkillData SkillDatas = 2;
  inline int skilldatas_size() const;
  inline void clear_skilldatas();
  static const int kSkillDatasFieldNumber = 2;
  inline const ::BuinessSkillData& skilldatas(int index) const;
  inline ::BuinessSkillData* mutable_skilldatas(int index);
  inline ::BuinessSkillData* add_skilldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >&
      skilldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >*
      mutable_skilldatas();

  // repeated .BuinessUnlockInfo UnLockInfos = 3;
  inline int unlockinfos_size() const;
  inline void clear_unlockinfos();
  static const int kUnLockInfosFieldNumber = 3;
  inline const ::BuinessUnlockInfo& unlockinfos(int index) const;
  inline ::BuinessUnlockInfo* mutable_unlockinfos(int index);
  inline ::BuinessUnlockInfo* add_unlockinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::BuinessUnlockInfo >&
      unlockinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuinessUnlockInfo >*
      mutable_unlockinfos();

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessSyncReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BuinessSkillData > skilldatas_;
  ::google::protobuf::RepeatedPtrField< ::BuinessUnlockInfo > unlockinfos_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessSyncReply* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessUnlockAsk : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessUnlockAsk();
  virtual ~BuinessRpcBuinessUnlockAsk();

  BuinessRpcBuinessUnlockAsk(const BuinessRpcBuinessUnlockAsk& from);

  inline BuinessRpcBuinessUnlockAsk& operator=(const BuinessRpcBuinessUnlockAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessUnlockAsk& default_instance();

  void Swap(BuinessRpcBuinessUnlockAsk* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessUnlockAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessUnlockAsk& from);
  void MergeFrom(const BuinessRpcBuinessUnlockAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SkillID = 1 [default = -1];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessUnlockAsk)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessUnlockAsk* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessUnlockReply : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessUnlockReply();
  virtual ~BuinessRpcBuinessUnlockReply();

  BuinessRpcBuinessUnlockReply(const BuinessRpcBuinessUnlockReply& from);

  inline BuinessRpcBuinessUnlockReply& operator=(const BuinessRpcBuinessUnlockReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessUnlockReply& default_instance();

  void Swap(BuinessRpcBuinessUnlockReply* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessUnlockReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessUnlockReply& from);
  void MergeFrom(const BuinessRpcBuinessUnlockReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .BuinessSkillData ChangeSkillDatas = 2;
  inline int changeskilldatas_size() const;
  inline void clear_changeskilldatas();
  static const int kChangeSkillDatasFieldNumber = 2;
  inline const ::BuinessSkillData& changeskilldatas(int index) const;
  inline ::BuinessSkillData* mutable_changeskilldatas(int index);
  inline ::BuinessSkillData* add_changeskilldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >&
      changeskilldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >*
      mutable_changeskilldatas();

  // optional .BuinessUnlockInfo UnLockInfo = 4;
  inline bool has_unlockinfo() const;
  inline void clear_unlockinfo();
  static const int kUnLockInfoFieldNumber = 4;
  inline const ::BuinessUnlockInfo& unlockinfo() const;
  inline ::BuinessUnlockInfo* mutable_unlockinfo();
  inline ::BuinessUnlockInfo* release_unlockinfo();
  inline void set_allocated_unlockinfo(::BuinessUnlockInfo* unlockinfo);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessUnlockReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_unlockinfo();
  inline void clear_has_unlockinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BuinessSkillData > changeskilldatas_;
  ::BuinessUnlockInfo* unlockinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessUnlockReply* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessStudyAsk : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessStudyAsk();
  virtual ~BuinessRpcBuinessStudyAsk();

  BuinessRpcBuinessStudyAsk(const BuinessRpcBuinessStudyAsk& from);

  inline BuinessRpcBuinessStudyAsk& operator=(const BuinessRpcBuinessStudyAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessStudyAsk& default_instance();

  void Swap(BuinessRpcBuinessStudyAsk* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessStudyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessStudyAsk& from);
  void MergeFrom(const BuinessRpcBuinessStudyAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SkillID = 1 [default = -1];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 StudyType = 2 [default = -1];
  inline bool has_studytype() const;
  inline void clear_studytype();
  static const int kStudyTypeFieldNumber = 2;
  inline ::google::protobuf::int32 studytype() const;
  inline void set_studytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessStudyAsk)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_studytype();
  inline void clear_has_studytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 studytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessStudyAsk* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessStudyReply : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessStudyReply();
  virtual ~BuinessRpcBuinessStudyReply();

  BuinessRpcBuinessStudyReply(const BuinessRpcBuinessStudyReply& from);

  inline BuinessRpcBuinessStudyReply& operator=(const BuinessRpcBuinessStudyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessStudyReply& default_instance();

  void Swap(BuinessRpcBuinessStudyReply* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessStudyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessStudyReply& from);
  void MergeFrom(const BuinessRpcBuinessStudyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .BuinessSkillData SkillData = 2;
  inline bool has_skilldata() const;
  inline void clear_skilldata();
  static const int kSkillDataFieldNumber = 2;
  inline const ::BuinessSkillData& skilldata() const;
  inline ::BuinessSkillData* mutable_skilldata();
  inline ::BuinessSkillData* release_skilldata();
  inline void set_allocated_skilldata(::BuinessSkillData* skilldata);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessStudyReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_skilldata();
  inline void clear_has_skilldata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BuinessSkillData* skilldata_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessStudyReply* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessMakeAsk : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessMakeAsk();
  virtual ~BuinessRpcBuinessMakeAsk();

  BuinessRpcBuinessMakeAsk(const BuinessRpcBuinessMakeAsk& from);

  inline BuinessRpcBuinessMakeAsk& operator=(const BuinessRpcBuinessMakeAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessMakeAsk& default_instance();

  void Swap(BuinessRpcBuinessMakeAsk* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessMakeAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessMakeAsk& from);
  void MergeFrom(const BuinessRpcBuinessMakeAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SkillID = 1 [default = -1];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessMakeAsk)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessMakeAsk* default_instance_;
};
// -------------------------------------------------------------------

class BuinessRpcBuinessMakeReply : public ::google::protobuf::Message {
 public:
  BuinessRpcBuinessMakeReply();
  virtual ~BuinessRpcBuinessMakeReply();

  BuinessRpcBuinessMakeReply(const BuinessRpcBuinessMakeReply& from);

  inline BuinessRpcBuinessMakeReply& operator=(const BuinessRpcBuinessMakeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuinessRpcBuinessMakeReply& default_instance();

  void Swap(BuinessRpcBuinessMakeReply* other);

  // implements Message ----------------------------------------------

  BuinessRpcBuinessMakeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuinessRpcBuinessMakeReply& from);
  void MergeFrom(const BuinessRpcBuinessMakeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 ItemID = 4 [default = -1];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 ItemCount = 5 [default = -1];
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 5;
  inline ::google::protobuf::int32 itemcount() const;
  inline void set_itemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BuinessRpcBuinessMakeReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BuinessRpc_2eproto();
  friend void protobuf_AssignDesc_BuinessRpc_2eproto();
  friend void protobuf_ShutdownFile_BuinessRpc_2eproto();

  void InitAsDefaultInstance();
  static BuinessRpcBuinessMakeReply* default_instance_;
};
// ===================================================================


// ===================================================================

// BuinessRpcBuinessSyncAsk

// -------------------------------------------------------------------

// BuinessRpcBuinessSyncReply

// optional int32 Result = 1 [default = -1];
inline bool BuinessRpcBuinessSyncReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessSyncReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessSyncReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessSyncReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BuinessRpcBuinessSyncReply::result() const {
  return result_;
}
inline void BuinessRpcBuinessSyncReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .BuinessSkillData SkillDatas = 2;
inline int BuinessRpcBuinessSyncReply::skilldatas_size() const {
  return skilldatas_.size();
}
inline void BuinessRpcBuinessSyncReply::clear_skilldatas() {
  skilldatas_.Clear();
}
inline const ::BuinessSkillData& BuinessRpcBuinessSyncReply::skilldatas(int index) const {
  return skilldatas_.Get(index);
}
inline ::BuinessSkillData* BuinessRpcBuinessSyncReply::mutable_skilldatas(int index) {
  return skilldatas_.Mutable(index);
}
inline ::BuinessSkillData* BuinessRpcBuinessSyncReply::add_skilldatas() {
  return skilldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >&
BuinessRpcBuinessSyncReply::skilldatas() const {
  return skilldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >*
BuinessRpcBuinessSyncReply::mutable_skilldatas() {
  return &skilldatas_;
}

// repeated .BuinessUnlockInfo UnLockInfos = 3;
inline int BuinessRpcBuinessSyncReply::unlockinfos_size() const {
  return unlockinfos_.size();
}
inline void BuinessRpcBuinessSyncReply::clear_unlockinfos() {
  unlockinfos_.Clear();
}
inline const ::BuinessUnlockInfo& BuinessRpcBuinessSyncReply::unlockinfos(int index) const {
  return unlockinfos_.Get(index);
}
inline ::BuinessUnlockInfo* BuinessRpcBuinessSyncReply::mutable_unlockinfos(int index) {
  return unlockinfos_.Mutable(index);
}
inline ::BuinessUnlockInfo* BuinessRpcBuinessSyncReply::add_unlockinfos() {
  return unlockinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuinessUnlockInfo >&
BuinessRpcBuinessSyncReply::unlockinfos() const {
  return unlockinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuinessUnlockInfo >*
BuinessRpcBuinessSyncReply::mutable_unlockinfos() {
  return &unlockinfos_;
}

// -------------------------------------------------------------------

// BuinessRpcBuinessUnlockAsk

// optional int32 SkillID = 1 [default = -1];
inline bool BuinessRpcBuinessUnlockAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessUnlockAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessUnlockAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessUnlockAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
inline ::google::protobuf::int32 BuinessRpcBuinessUnlockAsk::skillid() const {
  return skillid_;
}
inline void BuinessRpcBuinessUnlockAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// BuinessRpcBuinessUnlockReply

// optional int32 Result = 1 [default = -1];
inline bool BuinessRpcBuinessUnlockReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessUnlockReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessUnlockReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessUnlockReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BuinessRpcBuinessUnlockReply::result() const {
  return result_;
}
inline void BuinessRpcBuinessUnlockReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .BuinessSkillData ChangeSkillDatas = 2;
inline int BuinessRpcBuinessUnlockReply::changeskilldatas_size() const {
  return changeskilldatas_.size();
}
inline void BuinessRpcBuinessUnlockReply::clear_changeskilldatas() {
  changeskilldatas_.Clear();
}
inline const ::BuinessSkillData& BuinessRpcBuinessUnlockReply::changeskilldatas(int index) const {
  return changeskilldatas_.Get(index);
}
inline ::BuinessSkillData* BuinessRpcBuinessUnlockReply::mutable_changeskilldatas(int index) {
  return changeskilldatas_.Mutable(index);
}
inline ::BuinessSkillData* BuinessRpcBuinessUnlockReply::add_changeskilldatas() {
  return changeskilldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >&
BuinessRpcBuinessUnlockReply::changeskilldatas() const {
  return changeskilldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuinessSkillData >*
BuinessRpcBuinessUnlockReply::mutable_changeskilldatas() {
  return &changeskilldatas_;
}

// optional .BuinessUnlockInfo UnLockInfo = 4;
inline bool BuinessRpcBuinessUnlockReply::has_unlockinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuinessRpcBuinessUnlockReply::set_has_unlockinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuinessRpcBuinessUnlockReply::clear_has_unlockinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuinessRpcBuinessUnlockReply::clear_unlockinfo() {
  if (unlockinfo_ != NULL) unlockinfo_->::BuinessUnlockInfo::Clear();
  clear_has_unlockinfo();
}
inline const ::BuinessUnlockInfo& BuinessRpcBuinessUnlockReply::unlockinfo() const {
  return unlockinfo_ != NULL ? *unlockinfo_ : *default_instance_->unlockinfo_;
}
inline ::BuinessUnlockInfo* BuinessRpcBuinessUnlockReply::mutable_unlockinfo() {
  set_has_unlockinfo();
  if (unlockinfo_ == NULL) unlockinfo_ = new ::BuinessUnlockInfo;
  return unlockinfo_;
}
inline ::BuinessUnlockInfo* BuinessRpcBuinessUnlockReply::release_unlockinfo() {
  clear_has_unlockinfo();
  ::BuinessUnlockInfo* temp = unlockinfo_;
  unlockinfo_ = NULL;
  return temp;
}
inline void BuinessRpcBuinessUnlockReply::set_allocated_unlockinfo(::BuinessUnlockInfo* unlockinfo) {
  delete unlockinfo_;
  unlockinfo_ = unlockinfo;
  if (unlockinfo) {
    set_has_unlockinfo();
  } else {
    clear_has_unlockinfo();
  }
}

// -------------------------------------------------------------------

// BuinessRpcBuinessStudyAsk

// optional int32 SkillID = 1 [default = -1];
inline bool BuinessRpcBuinessStudyAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessStudyAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessStudyAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessStudyAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
inline ::google::protobuf::int32 BuinessRpcBuinessStudyAsk::skillid() const {
  return skillid_;
}
inline void BuinessRpcBuinessStudyAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 StudyType = 2 [default = -1];
inline bool BuinessRpcBuinessStudyAsk::has_studytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuinessRpcBuinessStudyAsk::set_has_studytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuinessRpcBuinessStudyAsk::clear_has_studytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuinessRpcBuinessStudyAsk::clear_studytype() {
  studytype_ = -1;
  clear_has_studytype();
}
inline ::google::protobuf::int32 BuinessRpcBuinessStudyAsk::studytype() const {
  return studytype_;
}
inline void BuinessRpcBuinessStudyAsk::set_studytype(::google::protobuf::int32 value) {
  set_has_studytype();
  studytype_ = value;
}

// -------------------------------------------------------------------

// BuinessRpcBuinessStudyReply

// optional int32 Result = 1 [default = -1];
inline bool BuinessRpcBuinessStudyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessStudyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessStudyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessStudyReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BuinessRpcBuinessStudyReply::result() const {
  return result_;
}
inline void BuinessRpcBuinessStudyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .BuinessSkillData SkillData = 2;
inline bool BuinessRpcBuinessStudyReply::has_skilldata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuinessRpcBuinessStudyReply::set_has_skilldata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuinessRpcBuinessStudyReply::clear_has_skilldata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuinessRpcBuinessStudyReply::clear_skilldata() {
  if (skilldata_ != NULL) skilldata_->::BuinessSkillData::Clear();
  clear_has_skilldata();
}
inline const ::BuinessSkillData& BuinessRpcBuinessStudyReply::skilldata() const {
  return skilldata_ != NULL ? *skilldata_ : *default_instance_->skilldata_;
}
inline ::BuinessSkillData* BuinessRpcBuinessStudyReply::mutable_skilldata() {
  set_has_skilldata();
  if (skilldata_ == NULL) skilldata_ = new ::BuinessSkillData;
  return skilldata_;
}
inline ::BuinessSkillData* BuinessRpcBuinessStudyReply::release_skilldata() {
  clear_has_skilldata();
  ::BuinessSkillData* temp = skilldata_;
  skilldata_ = NULL;
  return temp;
}
inline void BuinessRpcBuinessStudyReply::set_allocated_skilldata(::BuinessSkillData* skilldata) {
  delete skilldata_;
  skilldata_ = skilldata;
  if (skilldata) {
    set_has_skilldata();
  } else {
    clear_has_skilldata();
  }
}

// -------------------------------------------------------------------

// BuinessRpcBuinessMakeAsk

// optional int32 SkillID = 1 [default = -1];
inline bool BuinessRpcBuinessMakeAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessMakeAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessMakeAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessMakeAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
inline ::google::protobuf::int32 BuinessRpcBuinessMakeAsk::skillid() const {
  return skillid_;
}
inline void BuinessRpcBuinessMakeAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// BuinessRpcBuinessMakeReply

// optional int32 Result = 1 [default = -1];
inline bool BuinessRpcBuinessMakeReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuinessRpcBuinessMakeReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuinessRpcBuinessMakeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuinessRpcBuinessMakeReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 BuinessRpcBuinessMakeReply::result() const {
  return result_;
}
inline void BuinessRpcBuinessMakeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 ItemID = 4 [default = -1];
inline bool BuinessRpcBuinessMakeReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuinessRpcBuinessMakeReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuinessRpcBuinessMakeReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuinessRpcBuinessMakeReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
inline ::google::protobuf::int32 BuinessRpcBuinessMakeReply::itemid() const {
  return itemid_;
}
inline void BuinessRpcBuinessMakeReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 ItemCount = 5 [default = -1];
inline bool BuinessRpcBuinessMakeReply::has_itemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuinessRpcBuinessMakeReply::set_has_itemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuinessRpcBuinessMakeReply::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuinessRpcBuinessMakeReply::clear_itemcount() {
  itemcount_ = -1;
  clear_has_itemcount();
}
inline ::google::protobuf::int32 BuinessRpcBuinessMakeReply::itemcount() const {
  return itemcount_;
}
inline void BuinessRpcBuinessMakeReply::set_itemcount(::google::protobuf::int32 value) {
  set_has_itemcount();
  itemcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BuinessRpc_2eproto__INCLUDED
