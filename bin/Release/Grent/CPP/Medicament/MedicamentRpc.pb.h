// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MedicamentRpc.proto

#ifndef PROTOBUF_MedicamentRpc_2eproto__INCLUDED
#define PROTOBUF_MedicamentRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MedicamentRpc_2eproto();
void protobuf_AssignDesc_MedicamentRpc_2eproto();
void protobuf_ShutdownFile_MedicamentRpc_2eproto();

class MedicamentRpcFillHpAsk;
class MedicamentRpcFillHpReply;
class MedicamentRpcOneStepFillHpAsk;
class MedicamentRpcOneStepFillHpReply;
class MedicamentRpcClientRefreshMedicamentAsk;
class MedicamentRpcClientRefreshMedicamentReply;
class MedicamentRpcServerRefreshMedicamentNotify;
class MedicamentRpcSyncMedicamentDataAsk;
class MedicamentRpcSyncMedicamentDataReply;
class MedicamentRpcMedicamentCDAsk;
class MedicamentRpcMedicamentCDReply;
class MedicamentRpcMedicamentCDNotifyNotify;

// ===================================================================

class MedicamentRpcFillHpAsk : public ::google::protobuf::Message {
 public:
  MedicamentRpcFillHpAsk();
  virtual ~MedicamentRpcFillHpAsk();

  MedicamentRpcFillHpAsk(const MedicamentRpcFillHpAsk& from);

  inline MedicamentRpcFillHpAsk& operator=(const MedicamentRpcFillHpAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcFillHpAsk& default_instance();

  void Swap(MedicamentRpcFillHpAsk* other);

  // implements Message ----------------------------------------------

  MedicamentRpcFillHpAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcFillHpAsk& from);
  void MergeFrom(const MedicamentRpcFillHpAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ItemSimpleData ItemData = 1;
  inline bool has_itemdata() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 1;
  inline const ::ItemSimpleData& itemdata() const;
  inline ::ItemSimpleData* mutable_itemdata();
  inline ::ItemSimpleData* release_itemdata();
  inline void set_allocated_itemdata(::ItemSimpleData* itemdata);

  // @@protoc_insertion_point(class_scope:MedicamentRpcFillHpAsk)
 private:
  inline void set_has_itemdata();
  inline void clear_has_itemdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ItemSimpleData* itemdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcFillHpAsk* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcFillHpReply : public ::google::protobuf::Message {
 public:
  MedicamentRpcFillHpReply();
  virtual ~MedicamentRpcFillHpReply();

  MedicamentRpcFillHpReply(const MedicamentRpcFillHpReply& from);

  inline MedicamentRpcFillHpReply& operator=(const MedicamentRpcFillHpReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcFillHpReply& default_instance();

  void Swap(MedicamentRpcFillHpReply* other);

  // implements Message ----------------------------------------------

  MedicamentRpcFillHpReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcFillHpReply& from);
  void MergeFrom(const MedicamentRpcFillHpReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MedicamentRpcFillHpReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcFillHpReply* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcOneStepFillHpAsk : public ::google::protobuf::Message {
 public:
  MedicamentRpcOneStepFillHpAsk();
  virtual ~MedicamentRpcOneStepFillHpAsk();

  MedicamentRpcOneStepFillHpAsk(const MedicamentRpcOneStepFillHpAsk& from);

  inline MedicamentRpcOneStepFillHpAsk& operator=(const MedicamentRpcOneStepFillHpAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcOneStepFillHpAsk& default_instance();

  void Swap(MedicamentRpcOneStepFillHpAsk* other);

  // implements Message ----------------------------------------------

  MedicamentRpcOneStepFillHpAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcOneStepFillHpAsk& from);
  void MergeFrom(const MedicamentRpcOneStepFillHpAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ItemSimpleData ItemData = 3;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 3;
  inline const ::ItemSimpleData& itemdata(int index) const;
  inline ::ItemSimpleData* mutable_itemdata(int index);
  inline ::ItemSimpleData* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
      mutable_itemdata();

  // @@protoc_insertion_point(class_scope:MedicamentRpcOneStepFillHpAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ItemSimpleData > itemdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcOneStepFillHpAsk* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcOneStepFillHpReply : public ::google::protobuf::Message {
 public:
  MedicamentRpcOneStepFillHpReply();
  virtual ~MedicamentRpcOneStepFillHpReply();

  MedicamentRpcOneStepFillHpReply(const MedicamentRpcOneStepFillHpReply& from);

  inline MedicamentRpcOneStepFillHpReply& operator=(const MedicamentRpcOneStepFillHpReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcOneStepFillHpReply& default_instance();

  void Swap(MedicamentRpcOneStepFillHpReply* other);

  // implements Message ----------------------------------------------

  MedicamentRpcOneStepFillHpReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcOneStepFillHpReply& from);
  void MergeFrom(const MedicamentRpcOneStepFillHpReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MedicamentRpcOneStepFillHpReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcOneStepFillHpReply* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcClientRefreshMedicamentAsk : public ::google::protobuf::Message {
 public:
  MedicamentRpcClientRefreshMedicamentAsk();
  virtual ~MedicamentRpcClientRefreshMedicamentAsk();

  MedicamentRpcClientRefreshMedicamentAsk(const MedicamentRpcClientRefreshMedicamentAsk& from);

  inline MedicamentRpcClientRefreshMedicamentAsk& operator=(const MedicamentRpcClientRefreshMedicamentAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcClientRefreshMedicamentAsk& default_instance();

  void Swap(MedicamentRpcClientRefreshMedicamentAsk* other);

  // implements Message ----------------------------------------------

  MedicamentRpcClientRefreshMedicamentAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcClientRefreshMedicamentAsk& from);
  void MergeFrom(const MedicamentRpcClientRefreshMedicamentAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RecoverMedicament Medicament = 1;
  inline bool has_medicament() const;
  inline void clear_medicament();
  static const int kMedicamentFieldNumber = 1;
  inline const ::RecoverMedicament& medicament() const;
  inline ::RecoverMedicament* mutable_medicament();
  inline ::RecoverMedicament* release_medicament();
  inline void set_allocated_medicament(::RecoverMedicament* medicament);

  // @@protoc_insertion_point(class_scope:MedicamentRpcClientRefreshMedicamentAsk)
 private:
  inline void set_has_medicament();
  inline void clear_has_medicament();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RecoverMedicament* medicament_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcClientRefreshMedicamentAsk* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcClientRefreshMedicamentReply : public ::google::protobuf::Message {
 public:
  MedicamentRpcClientRefreshMedicamentReply();
  virtual ~MedicamentRpcClientRefreshMedicamentReply();

  MedicamentRpcClientRefreshMedicamentReply(const MedicamentRpcClientRefreshMedicamentReply& from);

  inline MedicamentRpcClientRefreshMedicamentReply& operator=(const MedicamentRpcClientRefreshMedicamentReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcClientRefreshMedicamentReply& default_instance();

  void Swap(MedicamentRpcClientRefreshMedicamentReply* other);

  // implements Message ----------------------------------------------

  MedicamentRpcClientRefreshMedicamentReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcClientRefreshMedicamentReply& from);
  void MergeFrom(const MedicamentRpcClientRefreshMedicamentReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .RecoverMedicament Medicament = 2;
  inline bool has_medicament() const;
  inline void clear_medicament();
  static const int kMedicamentFieldNumber = 2;
  inline const ::RecoverMedicament& medicament() const;
  inline ::RecoverMedicament* mutable_medicament();
  inline ::RecoverMedicament* release_medicament();
  inline void set_allocated_medicament(::RecoverMedicament* medicament);

  // @@protoc_insertion_point(class_scope:MedicamentRpcClientRefreshMedicamentReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_medicament();
  inline void clear_has_medicament();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RecoverMedicament* medicament_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcClientRefreshMedicamentReply* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcServerRefreshMedicamentNotify : public ::google::protobuf::Message {
 public:
  MedicamentRpcServerRefreshMedicamentNotify();
  virtual ~MedicamentRpcServerRefreshMedicamentNotify();

  MedicamentRpcServerRefreshMedicamentNotify(const MedicamentRpcServerRefreshMedicamentNotify& from);

  inline MedicamentRpcServerRefreshMedicamentNotify& operator=(const MedicamentRpcServerRefreshMedicamentNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcServerRefreshMedicamentNotify& default_instance();

  void Swap(MedicamentRpcServerRefreshMedicamentNotify* other);

  // implements Message ----------------------------------------------

  MedicamentRpcServerRefreshMedicamentNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcServerRefreshMedicamentNotify& from);
  void MergeFrom(const MedicamentRpcServerRefreshMedicamentNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RecoverMedicament Medicament = 1;
  inline bool has_medicament() const;
  inline void clear_medicament();
  static const int kMedicamentFieldNumber = 1;
  inline const ::RecoverMedicament& medicament() const;
  inline ::RecoverMedicament* mutable_medicament();
  inline ::RecoverMedicament* release_medicament();
  inline void set_allocated_medicament(::RecoverMedicament* medicament);

  // @@protoc_insertion_point(class_scope:MedicamentRpcServerRefreshMedicamentNotify)
 private:
  inline void set_has_medicament();
  inline void clear_has_medicament();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RecoverMedicament* medicament_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcServerRefreshMedicamentNotify* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcSyncMedicamentDataAsk : public ::google::protobuf::Message {
 public:
  MedicamentRpcSyncMedicamentDataAsk();
  virtual ~MedicamentRpcSyncMedicamentDataAsk();

  MedicamentRpcSyncMedicamentDataAsk(const MedicamentRpcSyncMedicamentDataAsk& from);

  inline MedicamentRpcSyncMedicamentDataAsk& operator=(const MedicamentRpcSyncMedicamentDataAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcSyncMedicamentDataAsk& default_instance();

  void Swap(MedicamentRpcSyncMedicamentDataAsk* other);

  // implements Message ----------------------------------------------

  MedicamentRpcSyncMedicamentDataAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcSyncMedicamentDataAsk& from);
  void MergeFrom(const MedicamentRpcSyncMedicamentDataAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MedicamentRpcSyncMedicamentDataAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcSyncMedicamentDataAsk* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcSyncMedicamentDataReply : public ::google::protobuf::Message {
 public:
  MedicamentRpcSyncMedicamentDataReply();
  virtual ~MedicamentRpcSyncMedicamentDataReply();

  MedicamentRpcSyncMedicamentDataReply(const MedicamentRpcSyncMedicamentDataReply& from);

  inline MedicamentRpcSyncMedicamentDataReply& operator=(const MedicamentRpcSyncMedicamentDataReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcSyncMedicamentDataReply& default_instance();

  void Swap(MedicamentRpcSyncMedicamentDataReply* other);

  // implements Message ----------------------------------------------

  MedicamentRpcSyncMedicamentDataReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcSyncMedicamentDataReply& from);
  void MergeFrom(const MedicamentRpcSyncMedicamentDataReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .RecoverMedicament Medicament = 2;
  inline bool has_medicament() const;
  inline void clear_medicament();
  static const int kMedicamentFieldNumber = 2;
  inline const ::RecoverMedicament& medicament() const;
  inline ::RecoverMedicament* mutable_medicament();
  inline ::RecoverMedicament* release_medicament();
  inline void set_allocated_medicament(::RecoverMedicament* medicament);

  // @@protoc_insertion_point(class_scope:MedicamentRpcSyncMedicamentDataReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_medicament();
  inline void clear_has_medicament();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RecoverMedicament* medicament_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcSyncMedicamentDataReply* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcMedicamentCDAsk : public ::google::protobuf::Message {
 public:
  MedicamentRpcMedicamentCDAsk();
  virtual ~MedicamentRpcMedicamentCDAsk();

  MedicamentRpcMedicamentCDAsk(const MedicamentRpcMedicamentCDAsk& from);

  inline MedicamentRpcMedicamentCDAsk& operator=(const MedicamentRpcMedicamentCDAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcMedicamentCDAsk& default_instance();

  void Swap(MedicamentRpcMedicamentCDAsk* other);

  // implements Message ----------------------------------------------

  MedicamentRpcMedicamentCDAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcMedicamentCDAsk& from);
  void MergeFrom(const MedicamentRpcMedicamentCDAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MedicamentRpcMedicamentCDAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcMedicamentCDAsk* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcMedicamentCDReply : public ::google::protobuf::Message {
 public:
  MedicamentRpcMedicamentCDReply();
  virtual ~MedicamentRpcMedicamentCDReply();

  MedicamentRpcMedicamentCDReply(const MedicamentRpcMedicamentCDReply& from);

  inline MedicamentRpcMedicamentCDReply& operator=(const MedicamentRpcMedicamentCDReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcMedicamentCDReply& default_instance();

  void Swap(MedicamentRpcMedicamentCDReply* other);

  // implements Message ----------------------------------------------

  MedicamentRpcMedicamentCDReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcMedicamentCDReply& from);
  void MergeFrom(const MedicamentRpcMedicamentCDReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 LeftTime = 2 [default = -1];
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 2;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MedicamentRpcMedicamentCDReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 lefttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcMedicamentCDReply* default_instance_;
};
// -------------------------------------------------------------------

class MedicamentRpcMedicamentCDNotifyNotify : public ::google::protobuf::Message {
 public:
  MedicamentRpcMedicamentCDNotifyNotify();
  virtual ~MedicamentRpcMedicamentCDNotifyNotify();

  MedicamentRpcMedicamentCDNotifyNotify(const MedicamentRpcMedicamentCDNotifyNotify& from);

  inline MedicamentRpcMedicamentCDNotifyNotify& operator=(const MedicamentRpcMedicamentCDNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicamentRpcMedicamentCDNotifyNotify& default_instance();

  void Swap(MedicamentRpcMedicamentCDNotifyNotify* other);

  // implements Message ----------------------------------------------

  MedicamentRpcMedicamentCDNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MedicamentRpcMedicamentCDNotifyNotify& from);
  void MergeFrom(const MedicamentRpcMedicamentCDNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 LeftTime = 1 [default = -1];
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 1;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MedicamentRpcMedicamentCDNotifyNotify)
 private:
  inline void set_has_lefttime();
  inline void clear_has_lefttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lefttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MedicamentRpc_2eproto();
  friend void protobuf_AssignDesc_MedicamentRpc_2eproto();
  friend void protobuf_ShutdownFile_MedicamentRpc_2eproto();

  void InitAsDefaultInstance();
  static MedicamentRpcMedicamentCDNotifyNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// MedicamentRpcFillHpAsk

// optional .ItemSimpleData ItemData = 1;
inline bool MedicamentRpcFillHpAsk::has_itemdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcFillHpAsk::set_has_itemdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcFillHpAsk::clear_has_itemdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcFillHpAsk::clear_itemdata() {
  if (itemdata_ != NULL) itemdata_->::ItemSimpleData::Clear();
  clear_has_itemdata();
}
inline const ::ItemSimpleData& MedicamentRpcFillHpAsk::itemdata() const {
  return itemdata_ != NULL ? *itemdata_ : *default_instance_->itemdata_;
}
inline ::ItemSimpleData* MedicamentRpcFillHpAsk::mutable_itemdata() {
  set_has_itemdata();
  if (itemdata_ == NULL) itemdata_ = new ::ItemSimpleData;
  return itemdata_;
}
inline ::ItemSimpleData* MedicamentRpcFillHpAsk::release_itemdata() {
  clear_has_itemdata();
  ::ItemSimpleData* temp = itemdata_;
  itemdata_ = NULL;
  return temp;
}
inline void MedicamentRpcFillHpAsk::set_allocated_itemdata(::ItemSimpleData* itemdata) {
  delete itemdata_;
  itemdata_ = itemdata;
  if (itemdata) {
    set_has_itemdata();
  } else {
    clear_has_itemdata();
  }
}

// -------------------------------------------------------------------

// MedicamentRpcFillHpReply

// optional int32 Result = 1 [default = -1];
inline bool MedicamentRpcFillHpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcFillHpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcFillHpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcFillHpReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MedicamentRpcFillHpReply::result() const {
  return result_;
}
inline void MedicamentRpcFillHpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MedicamentRpcOneStepFillHpAsk

// repeated .ItemSimpleData ItemData = 3;
inline int MedicamentRpcOneStepFillHpAsk::itemdata_size() const {
  return itemdata_.size();
}
inline void MedicamentRpcOneStepFillHpAsk::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::ItemSimpleData& MedicamentRpcOneStepFillHpAsk::itemdata(int index) const {
  return itemdata_.Get(index);
}
inline ::ItemSimpleData* MedicamentRpcOneStepFillHpAsk::mutable_itemdata(int index) {
  return itemdata_.Mutable(index);
}
inline ::ItemSimpleData* MedicamentRpcOneStepFillHpAsk::add_itemdata() {
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
MedicamentRpcOneStepFillHpAsk::itemdata() const {
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
MedicamentRpcOneStepFillHpAsk::mutable_itemdata() {
  return &itemdata_;
}

// -------------------------------------------------------------------

// MedicamentRpcOneStepFillHpReply

// optional int32 Result = 1 [default = -1];
inline bool MedicamentRpcOneStepFillHpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcOneStepFillHpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcOneStepFillHpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcOneStepFillHpReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MedicamentRpcOneStepFillHpReply::result() const {
  return result_;
}
inline void MedicamentRpcOneStepFillHpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MedicamentRpcClientRefreshMedicamentAsk

// optional .RecoverMedicament Medicament = 1;
inline bool MedicamentRpcClientRefreshMedicamentAsk::has_medicament() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcClientRefreshMedicamentAsk::set_has_medicament() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcClientRefreshMedicamentAsk::clear_has_medicament() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcClientRefreshMedicamentAsk::clear_medicament() {
  if (medicament_ != NULL) medicament_->::RecoverMedicament::Clear();
  clear_has_medicament();
}
inline const ::RecoverMedicament& MedicamentRpcClientRefreshMedicamentAsk::medicament() const {
  return medicament_ != NULL ? *medicament_ : *default_instance_->medicament_;
}
inline ::RecoverMedicament* MedicamentRpcClientRefreshMedicamentAsk::mutable_medicament() {
  set_has_medicament();
  if (medicament_ == NULL) medicament_ = new ::RecoverMedicament;
  return medicament_;
}
inline ::RecoverMedicament* MedicamentRpcClientRefreshMedicamentAsk::release_medicament() {
  clear_has_medicament();
  ::RecoverMedicament* temp = medicament_;
  medicament_ = NULL;
  return temp;
}
inline void MedicamentRpcClientRefreshMedicamentAsk::set_allocated_medicament(::RecoverMedicament* medicament) {
  delete medicament_;
  medicament_ = medicament;
  if (medicament) {
    set_has_medicament();
  } else {
    clear_has_medicament();
  }
}

// -------------------------------------------------------------------

// MedicamentRpcClientRefreshMedicamentReply

// optional int32 Result = 1 [default = -1];
inline bool MedicamentRpcClientRefreshMedicamentReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcClientRefreshMedicamentReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcClientRefreshMedicamentReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcClientRefreshMedicamentReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MedicamentRpcClientRefreshMedicamentReply::result() const {
  return result_;
}
inline void MedicamentRpcClientRefreshMedicamentReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .RecoverMedicament Medicament = 2;
inline bool MedicamentRpcClientRefreshMedicamentReply::has_medicament() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MedicamentRpcClientRefreshMedicamentReply::set_has_medicament() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MedicamentRpcClientRefreshMedicamentReply::clear_has_medicament() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MedicamentRpcClientRefreshMedicamentReply::clear_medicament() {
  if (medicament_ != NULL) medicament_->::RecoverMedicament::Clear();
  clear_has_medicament();
}
inline const ::RecoverMedicament& MedicamentRpcClientRefreshMedicamentReply::medicament() const {
  return medicament_ != NULL ? *medicament_ : *default_instance_->medicament_;
}
inline ::RecoverMedicament* MedicamentRpcClientRefreshMedicamentReply::mutable_medicament() {
  set_has_medicament();
  if (medicament_ == NULL) medicament_ = new ::RecoverMedicament;
  return medicament_;
}
inline ::RecoverMedicament* MedicamentRpcClientRefreshMedicamentReply::release_medicament() {
  clear_has_medicament();
  ::RecoverMedicament* temp = medicament_;
  medicament_ = NULL;
  return temp;
}
inline void MedicamentRpcClientRefreshMedicamentReply::set_allocated_medicament(::RecoverMedicament* medicament) {
  delete medicament_;
  medicament_ = medicament;
  if (medicament) {
    set_has_medicament();
  } else {
    clear_has_medicament();
  }
}

// -------------------------------------------------------------------

// MedicamentRpcServerRefreshMedicamentNotify

// optional .RecoverMedicament Medicament = 1;
inline bool MedicamentRpcServerRefreshMedicamentNotify::has_medicament() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcServerRefreshMedicamentNotify::set_has_medicament() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcServerRefreshMedicamentNotify::clear_has_medicament() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcServerRefreshMedicamentNotify::clear_medicament() {
  if (medicament_ != NULL) medicament_->::RecoverMedicament::Clear();
  clear_has_medicament();
}
inline const ::RecoverMedicament& MedicamentRpcServerRefreshMedicamentNotify::medicament() const {
  return medicament_ != NULL ? *medicament_ : *default_instance_->medicament_;
}
inline ::RecoverMedicament* MedicamentRpcServerRefreshMedicamentNotify::mutable_medicament() {
  set_has_medicament();
  if (medicament_ == NULL) medicament_ = new ::RecoverMedicament;
  return medicament_;
}
inline ::RecoverMedicament* MedicamentRpcServerRefreshMedicamentNotify::release_medicament() {
  clear_has_medicament();
  ::RecoverMedicament* temp = medicament_;
  medicament_ = NULL;
  return temp;
}
inline void MedicamentRpcServerRefreshMedicamentNotify::set_allocated_medicament(::RecoverMedicament* medicament) {
  delete medicament_;
  medicament_ = medicament;
  if (medicament) {
    set_has_medicament();
  } else {
    clear_has_medicament();
  }
}

// -------------------------------------------------------------------

// MedicamentRpcSyncMedicamentDataAsk

// -------------------------------------------------------------------

// MedicamentRpcSyncMedicamentDataReply

// optional int32 Result = 1 [default = -1];
inline bool MedicamentRpcSyncMedicamentDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcSyncMedicamentDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcSyncMedicamentDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcSyncMedicamentDataReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MedicamentRpcSyncMedicamentDataReply::result() const {
  return result_;
}
inline void MedicamentRpcSyncMedicamentDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .RecoverMedicament Medicament = 2;
inline bool MedicamentRpcSyncMedicamentDataReply::has_medicament() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MedicamentRpcSyncMedicamentDataReply::set_has_medicament() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MedicamentRpcSyncMedicamentDataReply::clear_has_medicament() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MedicamentRpcSyncMedicamentDataReply::clear_medicament() {
  if (medicament_ != NULL) medicament_->::RecoverMedicament::Clear();
  clear_has_medicament();
}
inline const ::RecoverMedicament& MedicamentRpcSyncMedicamentDataReply::medicament() const {
  return medicament_ != NULL ? *medicament_ : *default_instance_->medicament_;
}
inline ::RecoverMedicament* MedicamentRpcSyncMedicamentDataReply::mutable_medicament() {
  set_has_medicament();
  if (medicament_ == NULL) medicament_ = new ::RecoverMedicament;
  return medicament_;
}
inline ::RecoverMedicament* MedicamentRpcSyncMedicamentDataReply::release_medicament() {
  clear_has_medicament();
  ::RecoverMedicament* temp = medicament_;
  medicament_ = NULL;
  return temp;
}
inline void MedicamentRpcSyncMedicamentDataReply::set_allocated_medicament(::RecoverMedicament* medicament) {
  delete medicament_;
  medicament_ = medicament;
  if (medicament) {
    set_has_medicament();
  } else {
    clear_has_medicament();
  }
}

// -------------------------------------------------------------------

// MedicamentRpcMedicamentCDAsk

// -------------------------------------------------------------------

// MedicamentRpcMedicamentCDReply

// optional int32 Result = 1 [default = -1];
inline bool MedicamentRpcMedicamentCDReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcMedicamentCDReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcMedicamentCDReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcMedicamentCDReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MedicamentRpcMedicamentCDReply::result() const {
  return result_;
}
inline void MedicamentRpcMedicamentCDReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 LeftTime = 2 [default = -1];
inline bool MedicamentRpcMedicamentCDReply::has_lefttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MedicamentRpcMedicamentCDReply::set_has_lefttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MedicamentRpcMedicamentCDReply::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MedicamentRpcMedicamentCDReply::clear_lefttime() {
  lefttime_ = -1;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 MedicamentRpcMedicamentCDReply::lefttime() const {
  return lefttime_;
}
inline void MedicamentRpcMedicamentCDReply::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// -------------------------------------------------------------------

// MedicamentRpcMedicamentCDNotifyNotify

// optional int32 LeftTime = 1 [default = -1];
inline bool MedicamentRpcMedicamentCDNotifyNotify::has_lefttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MedicamentRpcMedicamentCDNotifyNotify::set_has_lefttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MedicamentRpcMedicamentCDNotifyNotify::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MedicamentRpcMedicamentCDNotifyNotify::clear_lefttime() {
  lefttime_ = -1;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 MedicamentRpcMedicamentCDNotifyNotify::lefttime() const {
  return lefttime_;
}
inline void MedicamentRpcMedicamentCDNotifyNotify::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MedicamentRpc_2eproto__INCLUDED
