// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContactRpc.proto

#ifndef PROTOBUF_ContactRpc_2eproto__INCLUDED
#define PROTOBUF_ContactRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ContactRpc_2eproto();
void protobuf_AssignDesc_ContactRpc_2eproto();
void protobuf_ShutdownFile_ContactRpc_2eproto();

class ContactRpcAddFriendAsk;
class ContactRpcAddFriendReply;
class ContactRpcCancelRelationShipAsk;
class ContactRpcCancelRelationShipReply;
class ContactRpcAddBlackListAsk;
class ContactRpcAddBlackListReply;
class ContactRpcSyncAddressBookAsk;
class ContactRpcSyncAddressBookReply;
class ContactRpcContactSettingAsk;
class ContactRpcContactSettingReply;
class ContactRpcCreateFriendGroupAsk;
class ContactRpcCreateFriendGroupReply;
class ContactRpcMoveToFriendGroupAsk;
class ContactRpcMoveToFriendGroupReply;
class ContactRpcRemoveFriendGroupAsk;
class ContactRpcRemoveFriendGroupReply;
class ContactRpcRenameGroupAsk;
class ContactRpcRenameGroupReply;
class ContactRpcAgreeApplicationAsk;
class ContactRpcAgreeApplicationReply;
class ContactRpcAgreeApplicationNotifyNotify;
class ContactRpcSetFriendGroupAsk;
class ContactRpcSetFriendGroupReply;
class ContactRpcNewFriendNotify;
class ContactRpcApplyListNotify;
class ContactRpcRejectApplyAsk;
class ContactRpcRejectApplyReply;
class ContactRpcBeRejectApplyNotify;
class ContactRpcBeCancelRelationShipNotify;
class ContactRpcBeAddBlackListNotify;
class ContactRpcRecommendContactAsk;
class ContactRpcRecommendContactReply;
class ContactRpcRejectAllAsk;
class ContactRpcRejectAllReply;
class ContactRpcAddFriendShipPointAsk;
class ContactRpcAddFriendShipPointReply;
class ContactRpcRoleDataUpdateNotify;
class ContactRpcContactLoginNotify;
class ContactRpcContactLogoutNotify;
class ContactRpcDeleteRoleDataNotify;
class ContactRpcSortGroupAsk;
class ContactRpcSortGroupReply;
class ContactRpcSetFriendAliasAsk;
class ContactRpcSetFriendAliasReply;
class ContactRpcSendFriendGiftPointAsk;
class ContactRpcSendFriendGiftPointReply;
class ContactRpcAcquireGiftPointAsk;
class ContactRpcAcquireGiftPointReply;
class ContactRpcUnAcquireGiftPointNotify;
class ContactRpcSendAllFriendGiftPointAsk;
class ContactRpcSendAllFriendGiftPointReply;
class ContactRpcAcquireAllGiftPointAsk;
class ContactRpcAcquireAllGiftPointReply;
class ContactRpcDeleteGroupRoleAsk;
class ContactRpcDeleteGroupRoleReply;
class ContactRpcAddRoleDataNotify;
class ContactRpcSetGiftPointNotify;
class ContactRpcContactsGroupsNotify;
class ContactRpcAgreeAllApplicationAsk;
class ContactRpcAgreeAllApplicationReply;
class ContactRpcChatToAsk;
class ContactRpcChatToReply;
class ContactRpcNewChatMsgNotify;
class ContactRpcReadMsgAsk;
class ContactRpcReadMsgReply;

// ===================================================================

class ContactRpcAddFriendAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAddFriendAsk();
  virtual ~ContactRpcAddFriendAsk();

  ContactRpcAddFriendAsk(const ContactRpcAddFriendAsk& from);

  inline ContactRpcAddFriendAsk& operator=(const ContactRpcAddFriendAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddFriendAsk& default_instance();

  void Swap(ContactRpcAddFriendAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAddFriendAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddFriendAsk& from);
  void MergeFrom(const ContactRpcAddFriendAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcAddFriendAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddFriendAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddFriendReply : public ::google::protobuf::Message {
 public:
  ContactRpcAddFriendReply();
  virtual ~ContactRpcAddFriendReply();

  ContactRpcAddFriendReply(const ContactRpcAddFriendReply& from);

  inline ContactRpcAddFriendReply& operator=(const ContactRpcAddFriendReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddFriendReply& default_instance();

  void Swap(ContactRpcAddFriendReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAddFriendReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddFriendReply& from);
  void MergeFrom(const ContactRpcAddFriendReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactData NewFriendData = 3;
  inline bool has_newfrienddata() const;
  inline void clear_newfrienddata();
  static const int kNewFriendDataFieldNumber = 3;
  inline const ::ContactData& newfrienddata() const;
  inline ::ContactData* mutable_newfrienddata();
  inline ::ContactData* release_newfrienddata();
  inline void set_allocated_newfrienddata(::ContactData* newfrienddata);

  // optional .ContactGroup MyFriendGroup = 4;
  inline bool has_myfriendgroup() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 4;
  inline const ::ContactGroup& myfriendgroup() const;
  inline ::ContactGroup* mutable_myfriendgroup();
  inline ::ContactGroup* release_myfriendgroup();
  inline void set_allocated_myfriendgroup(::ContactGroup* myfriendgroup);

  // @@protoc_insertion_point(class_scope:ContactRpcAddFriendReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newfrienddata();
  inline void clear_has_newfrienddata();
  inline void set_has_myfriendgroup();
  inline void clear_has_myfriendgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* newfrienddata_;
  ::ContactGroup* myfriendgroup_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddFriendReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcCancelRelationShipAsk : public ::google::protobuf::Message {
 public:
  ContactRpcCancelRelationShipAsk();
  virtual ~ContactRpcCancelRelationShipAsk();

  ContactRpcCancelRelationShipAsk(const ContactRpcCancelRelationShipAsk& from);

  inline ContactRpcCancelRelationShipAsk& operator=(const ContactRpcCancelRelationShipAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcCancelRelationShipAsk& default_instance();

  void Swap(ContactRpcCancelRelationShipAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcCancelRelationShipAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcCancelRelationShipAsk& from);
  void MergeFrom(const ContactRpcCancelRelationShipAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcCancelRelationShipAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcCancelRelationShipAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcCancelRelationShipReply : public ::google::protobuf::Message {
 public:
  ContactRpcCancelRelationShipReply();
  virtual ~ContactRpcCancelRelationShipReply();

  ContactRpcCancelRelationShipReply(const ContactRpcCancelRelationShipReply& from);

  inline ContactRpcCancelRelationShipReply& operator=(const ContactRpcCancelRelationShipReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcCancelRelationShipReply& default_instance();

  void Swap(ContactRpcCancelRelationShipReply* other);

  // implements Message ----------------------------------------------

  ContactRpcCancelRelationShipReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcCancelRelationShipReply& from);
  void MergeFrom(const ContactRpcCancelRelationShipReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 DeleteRoleId = 2 [default = 0];
  inline bool has_deleteroleid() const;
  inline void clear_deleteroleid();
  static const int kDeleteRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 deleteroleid() const;
  inline void set_deleteroleid(::google::protobuf::uint64 value);

  // repeated .ContactGroup ContactGroups = 3;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 3;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // @@protoc_insertion_point(class_scope:ContactRpcCancelRelationShipReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_deleteroleid();
  inline void clear_has_deleteroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 deleteroleid_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcCancelRelationShipReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddBlackListAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAddBlackListAsk();
  virtual ~ContactRpcAddBlackListAsk();

  ContactRpcAddBlackListAsk(const ContactRpcAddBlackListAsk& from);

  inline ContactRpcAddBlackListAsk& operator=(const ContactRpcAddBlackListAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddBlackListAsk& default_instance();

  void Swap(ContactRpcAddBlackListAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAddBlackListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddBlackListAsk& from);
  void MergeFrom(const ContactRpcAddBlackListAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcAddBlackListAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddBlackListAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddBlackListReply : public ::google::protobuf::Message {
 public:
  ContactRpcAddBlackListReply();
  virtual ~ContactRpcAddBlackListReply();

  ContactRpcAddBlackListReply(const ContactRpcAddBlackListReply& from);

  inline ContactRpcAddBlackListReply& operator=(const ContactRpcAddBlackListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddBlackListReply& default_instance();

  void Swap(ContactRpcAddBlackListReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAddBlackListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddBlackListReply& from);
  void MergeFrom(const ContactRpcAddBlackListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ContactGroups = 2;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 2;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // optional uint64 RoleId = 3 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcAddBlackListReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddBlackListReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSyncAddressBookAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSyncAddressBookAsk();
  virtual ~ContactRpcSyncAddressBookAsk();

  ContactRpcSyncAddressBookAsk(const ContactRpcSyncAddressBookAsk& from);

  inline ContactRpcSyncAddressBookAsk& operator=(const ContactRpcSyncAddressBookAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSyncAddressBookAsk& default_instance();

  void Swap(ContactRpcSyncAddressBookAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSyncAddressBookAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSyncAddressBookAsk& from);
  void MergeFrom(const ContactRpcSyncAddressBookAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcSyncAddressBookAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSyncAddressBookAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSyncAddressBookReply : public ::google::protobuf::Message {
 public:
  ContactRpcSyncAddressBookReply();
  virtual ~ContactRpcSyncAddressBookReply();

  ContactRpcSyncAddressBookReply(const ContactRpcSyncAddressBookReply& from);

  inline ContactRpcSyncAddressBookReply& operator=(const ContactRpcSyncAddressBookReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSyncAddressBookReply& default_instance();

  void Swap(ContactRpcSyncAddressBookReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSyncAddressBookReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSyncAddressBookReply& from);
  void MergeFrom(const ContactRpcSyncAddressBookReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .AddressBook AddressBock = 2;
  inline bool has_addressbock() const;
  inline void clear_addressbock();
  static const int kAddressBockFieldNumber = 2;
  inline const ::AddressBook& addressbock() const;
  inline ::AddressBook* mutable_addressbock();
  inline ::AddressBook* release_addressbock();
  inline void set_allocated_addressbock(::AddressBook* addressbock);

  // @@protoc_insertion_point(class_scope:ContactRpcSyncAddressBookReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_addressbock();
  inline void clear_has_addressbock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::AddressBook* addressbock_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSyncAddressBookReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcContactSettingAsk : public ::google::protobuf::Message {
 public:
  ContactRpcContactSettingAsk();
  virtual ~ContactRpcContactSettingAsk();

  ContactRpcContactSettingAsk(const ContactRpcContactSettingAsk& from);

  inline ContactRpcContactSettingAsk& operator=(const ContactRpcContactSettingAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcContactSettingAsk& default_instance();

  void Swap(ContactRpcContactSettingAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcContactSettingAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcContactSettingAsk& from);
  void MergeFrom(const ContactRpcContactSettingAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactSetting NewSetting = 1;
  inline bool has_newsetting() const;
  inline void clear_newsetting();
  static const int kNewSettingFieldNumber = 1;
  inline const ::ContactSetting& newsetting() const;
  inline ::ContactSetting* mutable_newsetting();
  inline ::ContactSetting* release_newsetting();
  inline void set_allocated_newsetting(::ContactSetting* newsetting);

  // @@protoc_insertion_point(class_scope:ContactRpcContactSettingAsk)
 private:
  inline void set_has_newsetting();
  inline void clear_has_newsetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactSetting* newsetting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcContactSettingAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcContactSettingReply : public ::google::protobuf::Message {
 public:
  ContactRpcContactSettingReply();
  virtual ~ContactRpcContactSettingReply();

  ContactRpcContactSettingReply(const ContactRpcContactSettingReply& from);

  inline ContactRpcContactSettingReply& operator=(const ContactRpcContactSettingReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcContactSettingReply& default_instance();

  void Swap(ContactRpcContactSettingReply* other);

  // implements Message ----------------------------------------------

  ContactRpcContactSettingReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcContactSettingReply& from);
  void MergeFrom(const ContactRpcContactSettingReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactSetting NewSetting = 2;
  inline bool has_newsetting() const;
  inline void clear_newsetting();
  static const int kNewSettingFieldNumber = 2;
  inline const ::ContactSetting& newsetting() const;
  inline ::ContactSetting* mutable_newsetting();
  inline ::ContactSetting* release_newsetting();
  inline void set_allocated_newsetting(::ContactSetting* newsetting);

  // @@protoc_insertion_point(class_scope:ContactRpcContactSettingReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newsetting();
  inline void clear_has_newsetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactSetting* newsetting_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcContactSettingReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcCreateFriendGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcCreateFriendGroupAsk();
  virtual ~ContactRpcCreateFriendGroupAsk();

  ContactRpcCreateFriendGroupAsk(const ContactRpcCreateFriendGroupAsk& from);

  inline ContactRpcCreateFriendGroupAsk& operator=(const ContactRpcCreateFriendGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcCreateFriendGroupAsk& default_instance();

  void Swap(ContactRpcCreateFriendGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcCreateFriendGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcCreateFriendGroupAsk& from);
  void MergeFrom(const ContactRpcCreateFriendGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GroupName = 1;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 1;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // repeated uint64 RoleIds = 2;
  inline int roleids_size() const;
  inline void clear_roleids();
  static const int kRoleIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 roleids(int index) const;
  inline void set_roleids(int index, ::google::protobuf::uint64 value);
  inline void add_roleids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleids();

  // @@protoc_insertion_point(class_scope:ContactRpcCreateFriendGroupAsk)
 private:
  inline void set_has_groupname();
  inline void clear_has_groupname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* groupname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcCreateFriendGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcCreateFriendGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcCreateFriendGroupReply();
  virtual ~ContactRpcCreateFriendGroupReply();

  ContactRpcCreateFriendGroupReply(const ContactRpcCreateFriendGroupReply& from);

  inline ContactRpcCreateFriendGroupReply& operator=(const ContactRpcCreateFriendGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcCreateFriendGroupReply& default_instance();

  void Swap(ContactRpcCreateFriendGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcCreateFriendGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcCreateFriendGroupReply& from);
  void MergeFrom(const ContactRpcCreateFriendGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ContactGroups = 2;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 2;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // repeated int32 GroupIds = 3;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 3;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcCreateFriendGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcCreateFriendGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcMoveToFriendGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcMoveToFriendGroupAsk();
  virtual ~ContactRpcMoveToFriendGroupAsk();

  ContactRpcMoveToFriendGroupAsk(const ContactRpcMoveToFriendGroupAsk& from);

  inline ContactRpcMoveToFriendGroupAsk& operator=(const ContactRpcMoveToFriendGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcMoveToFriendGroupAsk& default_instance();

  void Swap(ContactRpcMoveToFriendGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcMoveToFriendGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcMoveToFriendGroupAsk& from);
  void MergeFrom(const ContactRpcMoveToFriendGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 RoleIds = 1;
  inline int roleids_size() const;
  inline void clear_roleids();
  static const int kRoleIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 roleids(int index) const;
  inline void set_roleids(int index, ::google::protobuf::uint64 value);
  inline void add_roleids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleids();

  // optional int32 FromGroupId = 2 [default = -1];
  inline bool has_fromgroupid() const;
  inline void clear_fromgroupid();
  static const int kFromGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 fromgroupid() const;
  inline void set_fromgroupid(::google::protobuf::int32 value);

  // optional int32 ToGroupId = 3 [default = -1];
  inline bool has_togroupid() const;
  inline void clear_togroupid();
  static const int kToGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 togroupid() const;
  inline void set_togroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ContactRpcMoveToFriendGroupAsk)
 private:
  inline void set_has_fromgroupid();
  inline void clear_has_fromgroupid();
  inline void set_has_togroupid();
  inline void clear_has_togroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleids_;
  ::google::protobuf::int32 fromgroupid_;
  ::google::protobuf::int32 togroupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcMoveToFriendGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcMoveToFriendGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcMoveToFriendGroupReply();
  virtual ~ContactRpcMoveToFriendGroupReply();

  ContactRpcMoveToFriendGroupReply(const ContactRpcMoveToFriendGroupReply& from);

  inline ContactRpcMoveToFriendGroupReply& operator=(const ContactRpcMoveToFriendGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcMoveToFriendGroupReply& default_instance();

  void Swap(ContactRpcMoveToFriendGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcMoveToFriendGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcMoveToFriendGroupReply& from);
  void MergeFrom(const ContactRpcMoveToFriendGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ChangeGroup = 2;
  inline int changegroup_size() const;
  inline void clear_changegroup();
  static const int kChangeGroupFieldNumber = 2;
  inline const ::ContactGroup& changegroup(int index) const;
  inline ::ContactGroup* mutable_changegroup(int index);
  inline ::ContactGroup* add_changegroup();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      changegroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_changegroup();

  // @@protoc_insertion_point(class_scope:ContactRpcMoveToFriendGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > changegroup_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcMoveToFriendGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRemoveFriendGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcRemoveFriendGroupAsk();
  virtual ~ContactRpcRemoveFriendGroupAsk();

  ContactRpcRemoveFriendGroupAsk(const ContactRpcRemoveFriendGroupAsk& from);

  inline ContactRpcRemoveFriendGroupAsk& operator=(const ContactRpcRemoveFriendGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRemoveFriendGroupAsk& default_instance();

  void Swap(ContactRpcRemoveFriendGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcRemoveFriendGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRemoveFriendGroupAsk& from);
  void MergeFrom(const ContactRpcRemoveFriendGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RemoveGroupId = 1 [default = -1];
  inline bool has_removegroupid() const;
  inline void clear_removegroupid();
  static const int kRemoveGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 removegroupid() const;
  inline void set_removegroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ContactRpcRemoveFriendGroupAsk)
 private:
  inline void set_has_removegroupid();
  inline void clear_has_removegroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 removegroupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRemoveFriendGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRemoveFriendGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcRemoveFriendGroupReply();
  virtual ~ContactRpcRemoveFriendGroupReply();

  ContactRpcRemoveFriendGroupReply(const ContactRpcRemoveFriendGroupReply& from);

  inline ContactRpcRemoveFriendGroupReply& operator=(const ContactRpcRemoveFriendGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRemoveFriendGroupReply& default_instance();

  void Swap(ContactRpcRemoveFriendGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcRemoveFriendGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRemoveFriendGroupReply& from);
  void MergeFrom(const ContactRpcRemoveFriendGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactGroup MyFriendGroup = 3;
  inline bool has_myfriendgroup() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 3;
  inline const ::ContactGroup& myfriendgroup() const;
  inline ::ContactGroup* mutable_myfriendgroup();
  inline ::ContactGroup* release_myfriendgroup();
  inline void set_allocated_myfriendgroup(::ContactGroup* myfriendgroup);

  // optional int32 RemoveGroupId = 4 [default = -1];
  inline bool has_removegroupid() const;
  inline void clear_removegroupid();
  static const int kRemoveGroupIdFieldNumber = 4;
  inline ::google::protobuf::int32 removegroupid() const;
  inline void set_removegroupid(::google::protobuf::int32 value);

  // repeated int32 GroupIds = 5;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 5;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcRemoveFriendGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_myfriendgroup();
  inline void clear_has_myfriendgroup();
  inline void set_has_removegroupid();
  inline void clear_has_removegroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactGroup* myfriendgroup_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 removegroupid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRemoveFriendGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRenameGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcRenameGroupAsk();
  virtual ~ContactRpcRenameGroupAsk();

  ContactRpcRenameGroupAsk(const ContactRpcRenameGroupAsk& from);

  inline ContactRpcRenameGroupAsk& operator=(const ContactRpcRenameGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRenameGroupAsk& default_instance();

  void Swap(ContactRpcRenameGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcRenameGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRenameGroupAsk& from);
  void MergeFrom(const ContactRpcRenameGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 GroupId = 2 [default = -1];
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ContactRpcRenameGroupAsk)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRenameGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRenameGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcRenameGroupReply();
  virtual ~ContactRpcRenameGroupReply();

  ContactRpcRenameGroupReply(const ContactRpcRenameGroupReply& from);

  inline ContactRpcRenameGroupReply& operator=(const ContactRpcRenameGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRenameGroupReply& default_instance();

  void Swap(ContactRpcRenameGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcRenameGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRenameGroupReply& from);
  void MergeFrom(const ContactRpcRenameGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactGroup DefineGroup = 2;
  inline bool has_definegroup() const;
  inline void clear_definegroup();
  static const int kDefineGroupFieldNumber = 2;
  inline const ::ContactGroup& definegroup() const;
  inline ::ContactGroup* mutable_definegroup();
  inline ::ContactGroup* release_definegroup();
  inline void set_allocated_definegroup(::ContactGroup* definegroup);

  // @@protoc_insertion_point(class_scope:ContactRpcRenameGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_definegroup();
  inline void clear_has_definegroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactGroup* definegroup_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRenameGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAgreeApplicationAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAgreeApplicationAsk();
  virtual ~ContactRpcAgreeApplicationAsk();

  ContactRpcAgreeApplicationAsk(const ContactRpcAgreeApplicationAsk& from);

  inline ContactRpcAgreeApplicationAsk& operator=(const ContactRpcAgreeApplicationAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAgreeApplicationAsk& default_instance();

  void Swap(ContactRpcAgreeApplicationAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAgreeApplicationAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAgreeApplicationAsk& from);
  void MergeFrom(const ContactRpcAgreeApplicationAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcAgreeApplicationAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAgreeApplicationAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAgreeApplicationReply : public ::google::protobuf::Message {
 public:
  ContactRpcAgreeApplicationReply();
  virtual ~ContactRpcAgreeApplicationReply();

  ContactRpcAgreeApplicationReply(const ContactRpcAgreeApplicationReply& from);

  inline ContactRpcAgreeApplicationReply& operator=(const ContactRpcAgreeApplicationReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAgreeApplicationReply& default_instance();

  void Swap(ContactRpcAgreeApplicationReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAgreeApplicationReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAgreeApplicationReply& from);
  void MergeFrom(const ContactRpcAgreeApplicationReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactData NewFriendData = 2;
  inline bool has_newfrienddata() const;
  inline void clear_newfrienddata();
  static const int kNewFriendDataFieldNumber = 2;
  inline const ::ContactData& newfrienddata() const;
  inline ::ContactData* mutable_newfrienddata();
  inline ::ContactData* release_newfrienddata();
  inline void set_allocated_newfrienddata(::ContactData* newfrienddata);

  // repeated .ContactGroup MyFriendGroup = 3;
  inline int myfriendgroup_size() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 3;
  inline const ::ContactGroup& myfriendgroup(int index) const;
  inline ::ContactGroup* mutable_myfriendgroup(int index);
  inline ::ContactGroup* add_myfriendgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      myfriendgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_myfriendgroup();

  // @@protoc_insertion_point(class_scope:ContactRpcAgreeApplicationReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newfrienddata();
  inline void clear_has_newfrienddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* newfrienddata_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > myfriendgroup_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAgreeApplicationReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAgreeApplicationNotifyNotify : public ::google::protobuf::Message {
 public:
  ContactRpcAgreeApplicationNotifyNotify();
  virtual ~ContactRpcAgreeApplicationNotifyNotify();

  ContactRpcAgreeApplicationNotifyNotify(const ContactRpcAgreeApplicationNotifyNotify& from);

  inline ContactRpcAgreeApplicationNotifyNotify& operator=(const ContactRpcAgreeApplicationNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAgreeApplicationNotifyNotify& default_instance();

  void Swap(ContactRpcAgreeApplicationNotifyNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcAgreeApplicationNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAgreeApplicationNotifyNotify& from);
  void MergeFrom(const ContactRpcAgreeApplicationNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ContactGroup MyFriendGroup = 1;
  inline int myfriendgroup_size() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 1;
  inline const ::ContactGroup& myfriendgroup(int index) const;
  inline ::ContactGroup* mutable_myfriendgroup(int index);
  inline ::ContactGroup* add_myfriendgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      myfriendgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_myfriendgroup();

  // optional .ContactData NewFriendData = 2;
  inline bool has_newfrienddata() const;
  inline void clear_newfrienddata();
  static const int kNewFriendDataFieldNumber = 2;
  inline const ::ContactData& newfrienddata() const;
  inline ::ContactData* mutable_newfrienddata();
  inline ::ContactData* release_newfrienddata();
  inline void set_allocated_newfrienddata(::ContactData* newfrienddata);

  // @@protoc_insertion_point(class_scope:ContactRpcAgreeApplicationNotifyNotify)
 private:
  inline void set_has_newfrienddata();
  inline void clear_has_newfrienddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > myfriendgroup_;
  ::ContactData* newfrienddata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAgreeApplicationNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSetFriendGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSetFriendGroupAsk();
  virtual ~ContactRpcSetFriendGroupAsk();

  ContactRpcSetFriendGroupAsk(const ContactRpcSetFriendGroupAsk& from);

  inline ContactRpcSetFriendGroupAsk& operator=(const ContactRpcSetFriendGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSetFriendGroupAsk& default_instance();

  void Swap(ContactRpcSetFriendGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSetFriendGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSetFriendGroupAsk& from);
  void MergeFrom(const ContactRpcSetFriendGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1 [default = -1];
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // optional int32 RoleIds = 2 [default = -1];
  inline bool has_roleids() const;
  inline void clear_roleids();
  static const int kRoleIdsFieldNumber = 2;
  inline ::google::protobuf::int32 roleids() const;
  inline void set_roleids(::google::protobuf::int32 value);

  // optional bytes GroupName = 3;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const void* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // @@protoc_insertion_point(class_scope:ContactRpcSetFriendGroupAsk)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_roleids();
  inline void clear_has_roleids();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 roleids_;
  ::std::string* groupname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSetFriendGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSetFriendGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcSetFriendGroupReply();
  virtual ~ContactRpcSetFriendGroupReply();

  ContactRpcSetFriendGroupReply(const ContactRpcSetFriendGroupReply& from);

  inline ContactRpcSetFriendGroupReply& operator=(const ContactRpcSetFriendGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSetFriendGroupReply& default_instance();

  void Swap(ContactRpcSetFriendGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSetFriendGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSetFriendGroupReply& from);
  void MergeFrom(const ContactRpcSetFriendGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup FriendGroups = 2;
  inline int friendgroups_size() const;
  inline void clear_friendgroups();
  static const int kFriendGroupsFieldNumber = 2;
  inline const ::ContactGroup& friendgroups(int index) const;
  inline ::ContactGroup* mutable_friendgroups(int index);
  inline ::ContactGroup* add_friendgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      friendgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_friendgroups();

  // @@protoc_insertion_point(class_scope:ContactRpcSetFriendGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > friendgroups_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSetFriendGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcNewFriendNotify : public ::google::protobuf::Message {
 public:
  ContactRpcNewFriendNotify();
  virtual ~ContactRpcNewFriendNotify();

  ContactRpcNewFriendNotify(const ContactRpcNewFriendNotify& from);

  inline ContactRpcNewFriendNotify& operator=(const ContactRpcNewFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcNewFriendNotify& default_instance();

  void Swap(ContactRpcNewFriendNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcNewFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcNewFriendNotify& from);
  void MergeFrom(const ContactRpcNewFriendNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData NewFriendData = 1;
  inline bool has_newfrienddata() const;
  inline void clear_newfrienddata();
  static const int kNewFriendDataFieldNumber = 1;
  inline const ::ContactData& newfrienddata() const;
  inline ::ContactData* mutable_newfrienddata();
  inline ::ContactData* release_newfrienddata();
  inline void set_allocated_newfrienddata(::ContactData* newfrienddata);

  // optional .ContactGroup MyFriendGroup = 2;
  inline bool has_myfriendgroup() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 2;
  inline const ::ContactGroup& myfriendgroup() const;
  inline ::ContactGroup* mutable_myfriendgroup();
  inline ::ContactGroup* release_myfriendgroup();
  inline void set_allocated_myfriendgroup(::ContactGroup* myfriendgroup);

  // @@protoc_insertion_point(class_scope:ContactRpcNewFriendNotify)
 private:
  inline void set_has_newfrienddata();
  inline void clear_has_newfrienddata();
  inline void set_has_myfriendgroup();
  inline void clear_has_myfriendgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* newfrienddata_;
  ::ContactGroup* myfriendgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcNewFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcApplyListNotify : public ::google::protobuf::Message {
 public:
  ContactRpcApplyListNotify();
  virtual ~ContactRpcApplyListNotify();

  ContactRpcApplyListNotify(const ContactRpcApplyListNotify& from);

  inline ContactRpcApplyListNotify& operator=(const ContactRpcApplyListNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcApplyListNotify& default_instance();

  void Swap(ContactRpcApplyListNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcApplyListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcApplyListNotify& from);
  void MergeFrom(const ContactRpcApplyListNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData ApplyFriendData = 1;
  inline bool has_applyfrienddata() const;
  inline void clear_applyfrienddata();
  static const int kApplyFriendDataFieldNumber = 1;
  inline const ::ContactData& applyfrienddata() const;
  inline ::ContactData* mutable_applyfrienddata();
  inline ::ContactData* release_applyfrienddata();
  inline void set_allocated_applyfrienddata(::ContactData* applyfrienddata);

  // repeated .ContactGroup ApplyGroups = 5;
  inline int applygroups_size() const;
  inline void clear_applygroups();
  static const int kApplyGroupsFieldNumber = 5;
  inline const ::ContactGroup& applygroups(int index) const;
  inline ::ContactGroup* mutable_applygroups(int index);
  inline ::ContactGroup* add_applygroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      applygroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_applygroups();

  // @@protoc_insertion_point(class_scope:ContactRpcApplyListNotify)
 private:
  inline void set_has_applyfrienddata();
  inline void clear_has_applyfrienddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* applyfrienddata_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > applygroups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcApplyListNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRejectApplyAsk : public ::google::protobuf::Message {
 public:
  ContactRpcRejectApplyAsk();
  virtual ~ContactRpcRejectApplyAsk();

  ContactRpcRejectApplyAsk(const ContactRpcRejectApplyAsk& from);

  inline ContactRpcRejectApplyAsk& operator=(const ContactRpcRejectApplyAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRejectApplyAsk& default_instance();

  void Swap(ContactRpcRejectApplyAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcRejectApplyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRejectApplyAsk& from);
  void MergeFrom(const ContactRpcRejectApplyAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcRejectApplyAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRejectApplyAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRejectApplyReply : public ::google::protobuf::Message {
 public:
  ContactRpcRejectApplyReply();
  virtual ~ContactRpcRejectApplyReply();

  ContactRpcRejectApplyReply(const ContactRpcRejectApplyReply& from);

  inline ContactRpcRejectApplyReply& operator=(const ContactRpcRejectApplyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRejectApplyReply& default_instance();

  void Swap(ContactRpcRejectApplyReply* other);

  // implements Message ----------------------------------------------

  ContactRpcRejectApplyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRejectApplyReply& from);
  void MergeFrom(const ContactRpcRejectApplyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ContactGroups = 8;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 8;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // optional uint64 DeleteRoleId = 9 [default = 0];
  inline bool has_deleteroleid() const;
  inline void clear_deleteroleid();
  static const int kDeleteRoleIdFieldNumber = 9;
  inline ::google::protobuf::uint64 deleteroleid() const;
  inline void set_deleteroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcRejectApplyReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_deleteroleid();
  inline void clear_has_deleteroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::uint64 deleteroleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRejectApplyReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcBeRejectApplyNotify : public ::google::protobuf::Message {
 public:
  ContactRpcBeRejectApplyNotify();
  virtual ~ContactRpcBeRejectApplyNotify();

  ContactRpcBeRejectApplyNotify(const ContactRpcBeRejectApplyNotify& from);

  inline ContactRpcBeRejectApplyNotify& operator=(const ContactRpcBeRejectApplyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcBeRejectApplyNotify& default_instance();

  void Swap(ContactRpcBeRejectApplyNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcBeRejectApplyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcBeRejectApplyNotify& from);
  void MergeFrom(const ContactRpcBeRejectApplyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData DeleteFriendData = 1;
  inline bool has_deletefrienddata() const;
  inline void clear_deletefrienddata();
  static const int kDeleteFriendDataFieldNumber = 1;
  inline const ::ContactData& deletefrienddata() const;
  inline ::ContactData* mutable_deletefrienddata();
  inline ::ContactData* release_deletefrienddata();
  inline void set_allocated_deletefrienddata(::ContactData* deletefrienddata);

  // @@protoc_insertion_point(class_scope:ContactRpcBeRejectApplyNotify)
 private:
  inline void set_has_deletefrienddata();
  inline void clear_has_deletefrienddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* deletefrienddata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcBeRejectApplyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcBeCancelRelationShipNotify : public ::google::protobuf::Message {
 public:
  ContactRpcBeCancelRelationShipNotify();
  virtual ~ContactRpcBeCancelRelationShipNotify();

  ContactRpcBeCancelRelationShipNotify(const ContactRpcBeCancelRelationShipNotify& from);

  inline ContactRpcBeCancelRelationShipNotify& operator=(const ContactRpcBeCancelRelationShipNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcBeCancelRelationShipNotify& default_instance();

  void Swap(ContactRpcBeCancelRelationShipNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcBeCancelRelationShipNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcBeCancelRelationShipNotify& from);
  void MergeFrom(const ContactRpcBeCancelRelationShipNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 DeleteRoleId = 1 [default = 0];
  inline bool has_deleteroleid() const;
  inline void clear_deleteroleid();
  static const int kDeleteRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 deleteroleid() const;
  inline void set_deleteroleid(::google::protobuf::uint64 value);

  // repeated .ContactGroup ContactGroups = 2;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 2;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // @@protoc_insertion_point(class_scope:ContactRpcBeCancelRelationShipNotify)
 private:
  inline void set_has_deleteroleid();
  inline void clear_has_deleteroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 deleteroleid_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcBeCancelRelationShipNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcBeAddBlackListNotify : public ::google::protobuf::Message {
 public:
  ContactRpcBeAddBlackListNotify();
  virtual ~ContactRpcBeAddBlackListNotify();

  ContactRpcBeAddBlackListNotify(const ContactRpcBeAddBlackListNotify& from);

  inline ContactRpcBeAddBlackListNotify& operator=(const ContactRpcBeAddBlackListNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcBeAddBlackListNotify& default_instance();

  void Swap(ContactRpcBeAddBlackListNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcBeAddBlackListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcBeAddBlackListNotify& from);
  void MergeFrom(const ContactRpcBeAddBlackListNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // repeated .ContactGroup ContactGroups = 2;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 2;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // @@protoc_insertion_point(class_scope:ContactRpcBeAddBlackListNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcBeAddBlackListNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRecommendContactAsk : public ::google::protobuf::Message {
 public:
  ContactRpcRecommendContactAsk();
  virtual ~ContactRpcRecommendContactAsk();

  ContactRpcRecommendContactAsk(const ContactRpcRecommendContactAsk& from);

  inline ContactRpcRecommendContactAsk& operator=(const ContactRpcRecommendContactAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRecommendContactAsk& default_instance();

  void Swap(ContactRpcRecommendContactAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcRecommendContactAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRecommendContactAsk& from);
  void MergeFrom(const ContactRpcRecommendContactAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcRecommendContactAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRecommendContactAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRecommendContactReply : public ::google::protobuf::Message {
 public:
  ContactRpcRecommendContactReply();
  virtual ~ContactRpcRecommendContactReply();

  ContactRpcRecommendContactReply(const ContactRpcRecommendContactReply& from);

  inline ContactRpcRecommendContactReply& operator=(const ContactRpcRecommendContactReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRecommendContactReply& default_instance();

  void Swap(ContactRpcRecommendContactReply* other);

  // implements Message ----------------------------------------------

  ContactRpcRecommendContactReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRecommendContactReply& from);
  void MergeFrom(const ContactRpcRecommendContactReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactData Contact = 2;
  inline int contact_size() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 2;
  inline const ::ContactData& contact(int index) const;
  inline ::ContactData* mutable_contact(int index);
  inline ::ContactData* add_contact();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactData >&
      contact() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactData >*
      mutable_contact();

  // repeated uint64 ApplyedListId = 3;
  inline int applyedlistid_size() const;
  inline void clear_applyedlistid();
  static const int kApplyedListIdFieldNumber = 3;
  inline ::google::protobuf::uint64 applyedlistid(int index) const;
  inline void set_applyedlistid(int index, ::google::protobuf::uint64 value);
  inline void add_applyedlistid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      applyedlistid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_applyedlistid();

  // @@protoc_insertion_point(class_scope:ContactRpcRecommendContactReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactData > contact_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > applyedlistid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRecommendContactReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRejectAllAsk : public ::google::protobuf::Message {
 public:
  ContactRpcRejectAllAsk();
  virtual ~ContactRpcRejectAllAsk();

  ContactRpcRejectAllAsk(const ContactRpcRejectAllAsk& from);

  inline ContactRpcRejectAllAsk& operator=(const ContactRpcRejectAllAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRejectAllAsk& default_instance();

  void Swap(ContactRpcRejectAllAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcRejectAllAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRejectAllAsk& from);
  void MergeFrom(const ContactRpcRejectAllAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcRejectAllAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRejectAllAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRejectAllReply : public ::google::protobuf::Message {
 public:
  ContactRpcRejectAllReply();
  virtual ~ContactRpcRejectAllReply();

  ContactRpcRejectAllReply(const ContactRpcRejectAllReply& from);

  inline ContactRpcRejectAllReply& operator=(const ContactRpcRejectAllReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRejectAllReply& default_instance();

  void Swap(ContactRpcRejectAllReply* other);

  // implements Message ----------------------------------------------

  ContactRpcRejectAllReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRejectAllReply& from);
  void MergeFrom(const ContactRpcRejectAllReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ContactGroups = 2;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 2;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // repeated uint64 DeleteRoleIds = 3;
  inline int deleteroleids_size() const;
  inline void clear_deleteroleids();
  static const int kDeleteRoleIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 deleteroleids(int index) const;
  inline void set_deleteroleids(int index, ::google::protobuf::uint64 value);
  inline void add_deleteroleids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      deleteroleids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_deleteroleids();

  // @@protoc_insertion_point(class_scope:ContactRpcRejectAllReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > deleteroleids_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRejectAllReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddFriendShipPointAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAddFriendShipPointAsk();
  virtual ~ContactRpcAddFriendShipPointAsk();

  ContactRpcAddFriendShipPointAsk(const ContactRpcAddFriendShipPointAsk& from);

  inline ContactRpcAddFriendShipPointAsk& operator=(const ContactRpcAddFriendShipPointAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddFriendShipPointAsk& default_instance();

  void Swap(ContactRpcAddFriendShipPointAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAddFriendShipPointAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddFriendShipPointAsk& from);
  void MergeFrom(const ContactRpcAddFriendShipPointAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 FriendRoleId = 1 [default = 0];
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::uint64 value);

  // repeated .ItemSimpleData ItemData = 2;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 2;
  inline const ::ItemSimpleData& itemdata(int index) const;
  inline ::ItemSimpleData* mutable_itemdata(int index);
  inline ::ItemSimpleData* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
      mutable_itemdata();

  // @@protoc_insertion_point(class_scope:ContactRpcAddFriendShipPointAsk)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friendroleid_;
  ::google::protobuf::RepeatedPtrField< ::ItemSimpleData > itemdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddFriendShipPointAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddFriendShipPointReply : public ::google::protobuf::Message {
 public:
  ContactRpcAddFriendShipPointReply();
  virtual ~ContactRpcAddFriendShipPointReply();

  ContactRpcAddFriendShipPointReply(const ContactRpcAddFriendShipPointReply& from);

  inline ContactRpcAddFriendShipPointReply& operator=(const ContactRpcAddFriendShipPointReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddFriendShipPointReply& default_instance();

  void Swap(ContactRpcAddFriendShipPointReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAddFriendShipPointReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddFriendShipPointReply& from);
  void MergeFrom(const ContactRpcAddFriendShipPointReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactData Contact = 2;
  inline bool has_contact() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 2;
  inline const ::ContactData& contact() const;
  inline ::ContactData* mutable_contact();
  inline ::ContactData* release_contact();
  inline void set_allocated_contact(::ContactData* contact);

  // @@protoc_insertion_point(class_scope:ContactRpcAddFriendShipPointReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_contact();
  inline void clear_has_contact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* contact_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddFriendShipPointReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcRoleDataUpdateNotify : public ::google::protobuf::Message {
 public:
  ContactRpcRoleDataUpdateNotify();
  virtual ~ContactRpcRoleDataUpdateNotify();

  ContactRpcRoleDataUpdateNotify(const ContactRpcRoleDataUpdateNotify& from);

  inline ContactRpcRoleDataUpdateNotify& operator=(const ContactRpcRoleDataUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcRoleDataUpdateNotify& default_instance();

  void Swap(ContactRpcRoleDataUpdateNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcRoleDataUpdateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcRoleDataUpdateNotify& from);
  void MergeFrom(const ContactRpcRoleDataUpdateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData Contact = 1;
  inline bool has_contact() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 1;
  inline const ::ContactData& contact() const;
  inline ::ContactData* mutable_contact();
  inline ::ContactData* release_contact();
  inline void set_allocated_contact(::ContactData* contact);

  // @@protoc_insertion_point(class_scope:ContactRpcRoleDataUpdateNotify)
 private:
  inline void set_has_contact();
  inline void clear_has_contact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* contact_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcRoleDataUpdateNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcContactLoginNotify : public ::google::protobuf::Message {
 public:
  ContactRpcContactLoginNotify();
  virtual ~ContactRpcContactLoginNotify();

  ContactRpcContactLoginNotify(const ContactRpcContactLoginNotify& from);

  inline ContactRpcContactLoginNotify& operator=(const ContactRpcContactLoginNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcContactLoginNotify& default_instance();

  void Swap(ContactRpcContactLoginNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcContactLoginNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcContactLoginNotify& from);
  void MergeFrom(const ContactRpcContactLoginNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData Contact = 1;
  inline bool has_contact() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 1;
  inline const ::ContactData& contact() const;
  inline ::ContactData* mutable_contact();
  inline ::ContactData* release_contact();
  inline void set_allocated_contact(::ContactData* contact);

  // repeated int32 GroupIds = 2;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 2;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcContactLoginNotify)
 private:
  inline void set_has_contact();
  inline void clear_has_contact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* contact_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcContactLoginNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcContactLogoutNotify : public ::google::protobuf::Message {
 public:
  ContactRpcContactLogoutNotify();
  virtual ~ContactRpcContactLogoutNotify();

  ContactRpcContactLogoutNotify(const ContactRpcContactLogoutNotify& from);

  inline ContactRpcContactLogoutNotify& operator=(const ContactRpcContactLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcContactLogoutNotify& default_instance();

  void Swap(ContactRpcContactLogoutNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcContactLogoutNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcContactLogoutNotify& from);
  void MergeFrom(const ContactRpcContactLogoutNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData Contact = 1;
  inline bool has_contact() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 1;
  inline const ::ContactData& contact() const;
  inline ::ContactData* mutable_contact();
  inline ::ContactData* release_contact();
  inline void set_allocated_contact(::ContactData* contact);

  // repeated int32 GroupIds = 2;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 2;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcContactLogoutNotify)
 private:
  inline void set_has_contact();
  inline void clear_has_contact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* contact_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcContactLogoutNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcDeleteRoleDataNotify : public ::google::protobuf::Message {
 public:
  ContactRpcDeleteRoleDataNotify();
  virtual ~ContactRpcDeleteRoleDataNotify();

  ContactRpcDeleteRoleDataNotify(const ContactRpcDeleteRoleDataNotify& from);

  inline ContactRpcDeleteRoleDataNotify& operator=(const ContactRpcDeleteRoleDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcDeleteRoleDataNotify& default_instance();

  void Swap(ContactRpcDeleteRoleDataNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcDeleteRoleDataNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcDeleteRoleDataNotify& from);
  void MergeFrom(const ContactRpcDeleteRoleDataNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcDeleteRoleDataNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcDeleteRoleDataNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSortGroupAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSortGroupAsk();
  virtual ~ContactRpcSortGroupAsk();

  ContactRpcSortGroupAsk(const ContactRpcSortGroupAsk& from);

  inline ContactRpcSortGroupAsk& operator=(const ContactRpcSortGroupAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSortGroupAsk& default_instance();

  void Swap(ContactRpcSortGroupAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSortGroupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSortGroupAsk& from);
  void MergeFrom(const ContactRpcSortGroupAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 GroupIds = 1;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 1;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcSortGroupAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSortGroupAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSortGroupReply : public ::google::protobuf::Message {
 public:
  ContactRpcSortGroupReply();
  virtual ~ContactRpcSortGroupReply();

  ContactRpcSortGroupReply(const ContactRpcSortGroupReply& from);

  inline ContactRpcSortGroupReply& operator=(const ContactRpcSortGroupReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSortGroupReply& default_instance();

  void Swap(ContactRpcSortGroupReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSortGroupReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSortGroupReply& from);
  void MergeFrom(const ContactRpcSortGroupReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated int32 GroupIds = 2;
  inline int groupids_size() const;
  inline void clear_groupids();
  static const int kGroupIdsFieldNumber = 2;
  inline ::google::protobuf::int32 groupids(int index) const;
  inline void set_groupids(int index, ::google::protobuf::int32 value);
  inline void add_groupids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groupids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groupids();

  // @@protoc_insertion_point(class_scope:ContactRpcSortGroupReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groupids_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSortGroupReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSetFriendAliasAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSetFriendAliasAsk();
  virtual ~ContactRpcSetFriendAliasAsk();

  ContactRpcSetFriendAliasAsk(const ContactRpcSetFriendAliasAsk& from);

  inline ContactRpcSetFriendAliasAsk& operator=(const ContactRpcSetFriendAliasAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSetFriendAliasAsk& default_instance();

  void Swap(ContactRpcSetFriendAliasAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSetFriendAliasAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSetFriendAliasAsk& from);
  void MergeFrom(const ContactRpcSetFriendAliasAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcSetFriendAliasAsk)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSetFriendAliasAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSetFriendAliasReply : public ::google::protobuf::Message {
 public:
  ContactRpcSetFriendAliasReply();
  virtual ~ContactRpcSetFriendAliasReply();

  ContactRpcSetFriendAliasReply(const ContactRpcSetFriendAliasReply& from);

  inline ContactRpcSetFriendAliasReply& operator=(const ContactRpcSetFriendAliasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSetFriendAliasReply& default_instance();

  void Swap(ContactRpcSetFriendAliasReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSetFriendAliasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSetFriendAliasReply& from);
  void MergeFrom(const ContactRpcSetFriendAliasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .ContactData Contact = 2;
  inline bool has_contact() const;
  inline void clear_contact();
  static const int kContactFieldNumber = 2;
  inline const ::ContactData& contact() const;
  inline ::ContactData* mutable_contact();
  inline ::ContactData* release_contact();
  inline void set_allocated_contact(::ContactData* contact);

  // @@protoc_insertion_point(class_scope:ContactRpcSetFriendAliasReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_contact();
  inline void clear_has_contact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* contact_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSetFriendAliasReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSendFriendGiftPointAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSendFriendGiftPointAsk();
  virtual ~ContactRpcSendFriendGiftPointAsk();

  ContactRpcSendFriendGiftPointAsk(const ContactRpcSendFriendGiftPointAsk& from);

  inline ContactRpcSendFriendGiftPointAsk& operator=(const ContactRpcSendFriendGiftPointAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSendFriendGiftPointAsk& default_instance();

  void Swap(ContactRpcSendFriendGiftPointAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSendFriendGiftPointAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSendFriendGiftPointAsk& from);
  void MergeFrom(const ContactRpcSendFriendGiftPointAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 SendRoleId = 1 [default = 0];
  inline bool has_sendroleid() const;
  inline void clear_sendroleid();
  static const int kSendRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sendroleid() const;
  inline void set_sendroleid(::google::protobuf::uint64 value);

  // optional int32 Point = 2 [default = -1];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ContactRpcSendFriendGiftPointAsk)
 private:
  inline void set_has_sendroleid();
  inline void clear_has_sendroleid();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sendroleid_;
  ::google::protobuf::int32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSendFriendGiftPointAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSendFriendGiftPointReply : public ::google::protobuf::Message {
 public:
  ContactRpcSendFriendGiftPointReply();
  virtual ~ContactRpcSendFriendGiftPointReply();

  ContactRpcSendFriendGiftPointReply(const ContactRpcSendFriendGiftPointReply& from);

  inline ContactRpcSendFriendGiftPointReply& operator=(const ContactRpcSendFriendGiftPointReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSendFriendGiftPointReply& default_instance();

  void Swap(ContactRpcSendFriendGiftPointReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSendFriendGiftPointReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSendFriendGiftPointReply& from);
  void MergeFrom(const ContactRpcSendFriendGiftPointReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .FriendGiftPoint SentGiftList = 2;
  inline int sentgiftlist_size() const;
  inline void clear_sentgiftlist();
  static const int kSentGiftListFieldNumber = 2;
  inline const ::FriendGiftPoint& sentgiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_sentgiftlist(int index);
  inline ::FriendGiftPoint* add_sentgiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      sentgiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_sentgiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcSendFriendGiftPointReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > sentgiftlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSendFriendGiftPointReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAcquireGiftPointAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAcquireGiftPointAsk();
  virtual ~ContactRpcAcquireGiftPointAsk();

  ContactRpcAcquireGiftPointAsk(const ContactRpcAcquireGiftPointAsk& from);

  inline ContactRpcAcquireGiftPointAsk& operator=(const ContactRpcAcquireGiftPointAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAcquireGiftPointAsk& default_instance();

  void Swap(ContactRpcAcquireGiftPointAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAcquireGiftPointAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAcquireGiftPointAsk& from);
  void MergeFrom(const ContactRpcAcquireGiftPointAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 AcquireRoleId = 1 [default = 0];
  inline bool has_acquireroleid() const;
  inline void clear_acquireroleid();
  static const int kAcquireRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 acquireroleid() const;
  inline void set_acquireroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcAcquireGiftPointAsk)
 private:
  inline void set_has_acquireroleid();
  inline void clear_has_acquireroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 acquireroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAcquireGiftPointAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAcquireGiftPointReply : public ::google::protobuf::Message {
 public:
  ContactRpcAcquireGiftPointReply();
  virtual ~ContactRpcAcquireGiftPointReply();

  ContactRpcAcquireGiftPointReply(const ContactRpcAcquireGiftPointReply& from);

  inline ContactRpcAcquireGiftPointReply& operator=(const ContactRpcAcquireGiftPointReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAcquireGiftPointReply& default_instance();

  void Swap(ContactRpcAcquireGiftPointReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAcquireGiftPointReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAcquireGiftPointReply& from);
  void MergeFrom(const ContactRpcAcquireGiftPointReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .FriendGiftPoint AcquireGiftList = 2;
  inline int acquiregiftlist_size() const;
  inline void clear_acquiregiftlist();
  static const int kAcquireGiftListFieldNumber = 2;
  inline const ::FriendGiftPoint& acquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_acquiregiftlist(int index);
  inline ::FriendGiftPoint* add_acquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      acquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_acquiregiftlist();

  // repeated .FriendGiftPoint UnAcquireGiftList = 3;
  inline int unacquiregiftlist_size() const;
  inline void clear_unacquiregiftlist();
  static const int kUnAcquireGiftListFieldNumber = 3;
  inline const ::FriendGiftPoint& unacquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_unacquiregiftlist(int index);
  inline ::FriendGiftPoint* add_unacquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      unacquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_unacquiregiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcAcquireGiftPointReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > acquiregiftlist_;
  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > unacquiregiftlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAcquireGiftPointReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcUnAcquireGiftPointNotify : public ::google::protobuf::Message {
 public:
  ContactRpcUnAcquireGiftPointNotify();
  virtual ~ContactRpcUnAcquireGiftPointNotify();

  ContactRpcUnAcquireGiftPointNotify(const ContactRpcUnAcquireGiftPointNotify& from);

  inline ContactRpcUnAcquireGiftPointNotify& operator=(const ContactRpcUnAcquireGiftPointNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcUnAcquireGiftPointNotify& default_instance();

  void Swap(ContactRpcUnAcquireGiftPointNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcUnAcquireGiftPointNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcUnAcquireGiftPointNotify& from);
  void MergeFrom(const ContactRpcUnAcquireGiftPointNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FriendGiftPoint UnAcquireGiftList = 1;
  inline int unacquiregiftlist_size() const;
  inline void clear_unacquiregiftlist();
  static const int kUnAcquireGiftListFieldNumber = 1;
  inline const ::FriendGiftPoint& unacquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_unacquiregiftlist(int index);
  inline ::FriendGiftPoint* add_unacquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      unacquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_unacquiregiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcUnAcquireGiftPointNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > unacquiregiftlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcUnAcquireGiftPointNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSendAllFriendGiftPointAsk : public ::google::protobuf::Message {
 public:
  ContactRpcSendAllFriendGiftPointAsk();
  virtual ~ContactRpcSendAllFriendGiftPointAsk();

  ContactRpcSendAllFriendGiftPointAsk(const ContactRpcSendAllFriendGiftPointAsk& from);

  inline ContactRpcSendAllFriendGiftPointAsk& operator=(const ContactRpcSendAllFriendGiftPointAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSendAllFriendGiftPointAsk& default_instance();

  void Swap(ContactRpcSendAllFriendGiftPointAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcSendAllFriendGiftPointAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSendAllFriendGiftPointAsk& from);
  void MergeFrom(const ContactRpcSendAllFriendGiftPointAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcSendAllFriendGiftPointAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSendAllFriendGiftPointAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSendAllFriendGiftPointReply : public ::google::protobuf::Message {
 public:
  ContactRpcSendAllFriendGiftPointReply();
  virtual ~ContactRpcSendAllFriendGiftPointReply();

  ContactRpcSendAllFriendGiftPointReply(const ContactRpcSendAllFriendGiftPointReply& from);

  inline ContactRpcSendAllFriendGiftPointReply& operator=(const ContactRpcSendAllFriendGiftPointReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSendAllFriendGiftPointReply& default_instance();

  void Swap(ContactRpcSendAllFriendGiftPointReply* other);

  // implements Message ----------------------------------------------

  ContactRpcSendAllFriendGiftPointReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSendAllFriendGiftPointReply& from);
  void MergeFrom(const ContactRpcSendAllFriendGiftPointReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .FriendGiftPoint SentGiftList = 2;
  inline int sentgiftlist_size() const;
  inline void clear_sentgiftlist();
  static const int kSentGiftListFieldNumber = 2;
  inline const ::FriendGiftPoint& sentgiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_sentgiftlist(int index);
  inline ::FriendGiftPoint* add_sentgiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      sentgiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_sentgiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcSendAllFriendGiftPointReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > sentgiftlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSendAllFriendGiftPointReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAcquireAllGiftPointAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAcquireAllGiftPointAsk();
  virtual ~ContactRpcAcquireAllGiftPointAsk();

  ContactRpcAcquireAllGiftPointAsk(const ContactRpcAcquireAllGiftPointAsk& from);

  inline ContactRpcAcquireAllGiftPointAsk& operator=(const ContactRpcAcquireAllGiftPointAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAcquireAllGiftPointAsk& default_instance();

  void Swap(ContactRpcAcquireAllGiftPointAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAcquireAllGiftPointAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAcquireAllGiftPointAsk& from);
  void MergeFrom(const ContactRpcAcquireAllGiftPointAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcAcquireAllGiftPointAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAcquireAllGiftPointAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAcquireAllGiftPointReply : public ::google::protobuf::Message {
 public:
  ContactRpcAcquireAllGiftPointReply();
  virtual ~ContactRpcAcquireAllGiftPointReply();

  ContactRpcAcquireAllGiftPointReply(const ContactRpcAcquireAllGiftPointReply& from);

  inline ContactRpcAcquireAllGiftPointReply& operator=(const ContactRpcAcquireAllGiftPointReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAcquireAllGiftPointReply& default_instance();

  void Swap(ContactRpcAcquireAllGiftPointReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAcquireAllGiftPointReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAcquireAllGiftPointReply& from);
  void MergeFrom(const ContactRpcAcquireAllGiftPointReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .FriendGiftPoint AcquireGiftList = 2;
  inline int acquiregiftlist_size() const;
  inline void clear_acquiregiftlist();
  static const int kAcquireGiftListFieldNumber = 2;
  inline const ::FriendGiftPoint& acquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_acquiregiftlist(int index);
  inline ::FriendGiftPoint* add_acquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      acquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_acquiregiftlist();

  // repeated .FriendGiftPoint UnAcquireGiftList = 3;
  inline int unacquiregiftlist_size() const;
  inline void clear_unacquiregiftlist();
  static const int kUnAcquireGiftListFieldNumber = 3;
  inline const ::FriendGiftPoint& unacquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_unacquiregiftlist(int index);
  inline ::FriendGiftPoint* add_unacquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      unacquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_unacquiregiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcAcquireAllGiftPointReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > acquiregiftlist_;
  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > unacquiregiftlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAcquireAllGiftPointReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcDeleteGroupRoleAsk : public ::google::protobuf::Message {
 public:
  ContactRpcDeleteGroupRoleAsk();
  virtual ~ContactRpcDeleteGroupRoleAsk();

  ContactRpcDeleteGroupRoleAsk(const ContactRpcDeleteGroupRoleAsk& from);

  inline ContactRpcDeleteGroupRoleAsk& operator=(const ContactRpcDeleteGroupRoleAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcDeleteGroupRoleAsk& default_instance();

  void Swap(ContactRpcDeleteGroupRoleAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcDeleteGroupRoleAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcDeleteGroupRoleAsk& from);
  void MergeFrom(const ContactRpcDeleteGroupRoleAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1 [default = -1];
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcDeleteGroupRoleAsk)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcDeleteGroupRoleAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcDeleteGroupRoleReply : public ::google::protobuf::Message {
 public:
  ContactRpcDeleteGroupRoleReply();
  virtual ~ContactRpcDeleteGroupRoleReply();

  ContactRpcDeleteGroupRoleReply(const ContactRpcDeleteGroupRoleReply& from);

  inline ContactRpcDeleteGroupRoleReply& operator=(const ContactRpcDeleteGroupRoleReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcDeleteGroupRoleReply& default_instance();

  void Swap(ContactRpcDeleteGroupRoleReply* other);

  // implements Message ----------------------------------------------

  ContactRpcDeleteGroupRoleReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcDeleteGroupRoleReply& from);
  void MergeFrom(const ContactRpcDeleteGroupRoleReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactGroup ContactGroups = 3;
  inline int contactgroups_size() const;
  inline void clear_contactgroups();
  static const int kContactGroupsFieldNumber = 3;
  inline const ::ContactGroup& contactgroups(int index) const;
  inline ::ContactGroup* mutable_contactgroups(int index);
  inline ::ContactGroup* add_contactgroups();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      contactgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_contactgroups();

  // @@protoc_insertion_point(class_scope:ContactRpcDeleteGroupRoleReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > contactgroups_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcDeleteGroupRoleReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAddRoleDataNotify : public ::google::protobuf::Message {
 public:
  ContactRpcAddRoleDataNotify();
  virtual ~ContactRpcAddRoleDataNotify();

  ContactRpcAddRoleDataNotify(const ContactRpcAddRoleDataNotify& from);

  inline ContactRpcAddRoleDataNotify& operator=(const ContactRpcAddRoleDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAddRoleDataNotify& default_instance();

  void Swap(ContactRpcAddRoleDataNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcAddRoleDataNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAddRoleDataNotify& from);
  void MergeFrom(const ContactRpcAddRoleDataNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ContactData NewRoleData = 1;
  inline bool has_newroledata() const;
  inline void clear_newroledata();
  static const int kNewRoleDataFieldNumber = 1;
  inline const ::ContactData& newroledata() const;
  inline ::ContactData* mutable_newroledata();
  inline ::ContactData* release_newroledata();
  inline void set_allocated_newroledata(::ContactData* newroledata);

  // @@protoc_insertion_point(class_scope:ContactRpcAddRoleDataNotify)
 private:
  inline void set_has_newroledata();
  inline void clear_has_newroledata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ContactData* newroledata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAddRoleDataNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcSetGiftPointNotify : public ::google::protobuf::Message {
 public:
  ContactRpcSetGiftPointNotify();
  virtual ~ContactRpcSetGiftPointNotify();

  ContactRpcSetGiftPointNotify(const ContactRpcSetGiftPointNotify& from);

  inline ContactRpcSetGiftPointNotify& operator=(const ContactRpcSetGiftPointNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcSetGiftPointNotify& default_instance();

  void Swap(ContactRpcSetGiftPointNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcSetGiftPointNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcSetGiftPointNotify& from);
  void MergeFrom(const ContactRpcSetGiftPointNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FriendGiftPoint AcquireGiftList = 1;
  inline int acquiregiftlist_size() const;
  inline void clear_acquiregiftlist();
  static const int kAcquireGiftListFieldNumber = 1;
  inline const ::FriendGiftPoint& acquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_acquiregiftlist(int index);
  inline ::FriendGiftPoint* add_acquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      acquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_acquiregiftlist();

  // repeated .FriendGiftPoint UnAcquireGiftList = 2;
  inline int unacquiregiftlist_size() const;
  inline void clear_unacquiregiftlist();
  static const int kUnAcquireGiftListFieldNumber = 2;
  inline const ::FriendGiftPoint& unacquiregiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_unacquiregiftlist(int index);
  inline ::FriendGiftPoint* add_unacquiregiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      unacquiregiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_unacquiregiftlist();

  // repeated .FriendGiftPoint SentGiftList = 3;
  inline int sentgiftlist_size() const;
  inline void clear_sentgiftlist();
  static const int kSentGiftListFieldNumber = 3;
  inline const ::FriendGiftPoint& sentgiftlist(int index) const;
  inline ::FriendGiftPoint* mutable_sentgiftlist(int index);
  inline ::FriendGiftPoint* add_sentgiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
      sentgiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
      mutable_sentgiftlist();

  // @@protoc_insertion_point(class_scope:ContactRpcSetGiftPointNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > acquiregiftlist_;
  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > unacquiregiftlist_;
  ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint > sentgiftlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcSetGiftPointNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcContactsGroupsNotify : public ::google::protobuf::Message {
 public:
  ContactRpcContactsGroupsNotify();
  virtual ~ContactRpcContactsGroupsNotify();

  ContactRpcContactsGroupsNotify(const ContactRpcContactsGroupsNotify& from);

  inline ContactRpcContactsGroupsNotify& operator=(const ContactRpcContactsGroupsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcContactsGroupsNotify& default_instance();

  void Swap(ContactRpcContactsGroupsNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcContactsGroupsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcContactsGroupsNotify& from);
  void MergeFrom(const ContactRpcContactsGroupsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ContactGroup MyFriendGroup = 1;
  inline int myfriendgroup_size() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 1;
  inline const ::ContactGroup& myfriendgroup(int index) const;
  inline ::ContactGroup* mutable_myfriendgroup(int index);
  inline ::ContactGroup* add_myfriendgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      myfriendgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_myfriendgroup();

  // @@protoc_insertion_point(class_scope:ContactRpcContactsGroupsNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactGroup > myfriendgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcContactsGroupsNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAgreeAllApplicationAsk : public ::google::protobuf::Message {
 public:
  ContactRpcAgreeAllApplicationAsk();
  virtual ~ContactRpcAgreeAllApplicationAsk();

  ContactRpcAgreeAllApplicationAsk(const ContactRpcAgreeAllApplicationAsk& from);

  inline ContactRpcAgreeAllApplicationAsk& operator=(const ContactRpcAgreeAllApplicationAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAgreeAllApplicationAsk& default_instance();

  void Swap(ContactRpcAgreeAllApplicationAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcAgreeAllApplicationAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAgreeAllApplicationAsk& from);
  void MergeFrom(const ContactRpcAgreeAllApplicationAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ContactRpcAgreeAllApplicationAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAgreeAllApplicationAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcAgreeAllApplicationReply : public ::google::protobuf::Message {
 public:
  ContactRpcAgreeAllApplicationReply();
  virtual ~ContactRpcAgreeAllApplicationReply();

  ContactRpcAgreeAllApplicationReply(const ContactRpcAgreeAllApplicationReply& from);

  inline ContactRpcAgreeAllApplicationReply& operator=(const ContactRpcAgreeAllApplicationReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcAgreeAllApplicationReply& default_instance();

  void Swap(ContactRpcAgreeAllApplicationReply* other);

  // implements Message ----------------------------------------------

  ContactRpcAgreeAllApplicationReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcAgreeAllApplicationReply& from);
  void MergeFrom(const ContactRpcAgreeAllApplicationReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ContactData NewFriendData = 2;
  inline int newfrienddata_size() const;
  inline void clear_newfrienddata();
  static const int kNewFriendDataFieldNumber = 2;
  inline const ::ContactData& newfrienddata(int index) const;
  inline ::ContactData* mutable_newfrienddata(int index);
  inline ::ContactData* add_newfrienddata();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactData >&
      newfrienddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactData >*
      mutable_newfrienddata();

  // repeated .ContactGroup MyFriendGroup = 3;
  inline int myfriendgroup_size() const;
  inline void clear_myfriendgroup();
  static const int kMyFriendGroupFieldNumber = 3;
  inline const ::ContactGroup& myfriendgroup(int index) const;
  inline ::ContactGroup* mutable_myfriendgroup(int index);
  inline ::ContactGroup* add_myfriendgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
      myfriendgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
      mutable_myfriendgroup();

  // @@protoc_insertion_point(class_scope:ContactRpcAgreeAllApplicationReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ContactData > newfrienddata_;
  ::google::protobuf::RepeatedPtrField< ::ContactGroup > myfriendgroup_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcAgreeAllApplicationReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcChatToAsk : public ::google::protobuf::Message {
 public:
  ContactRpcChatToAsk();
  virtual ~ContactRpcChatToAsk();

  ContactRpcChatToAsk(const ContactRpcChatToAsk& from);

  inline ContactRpcChatToAsk& operator=(const ContactRpcChatToAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcChatToAsk& default_instance();

  void Swap(ContactRpcChatToAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcChatToAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcChatToAsk& from);
  void MergeFrom(const ContactRpcChatToAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional .ChatMsg ChatMsg = 2;
  inline bool has_chatmsg() const;
  inline void clear_chatmsg();
  static const int kChatMsgFieldNumber = 2;
  inline const ::ChatMsg& chatmsg() const;
  inline ::ChatMsg* mutable_chatmsg();
  inline ::ChatMsg* release_chatmsg();
  inline void set_allocated_chatmsg(::ChatMsg* chatmsg);

  // @@protoc_insertion_point(class_scope:ContactRpcChatToAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_chatmsg();
  inline void clear_has_chatmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::ChatMsg* chatmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcChatToAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcChatToReply : public ::google::protobuf::Message {
 public:
  ContactRpcChatToReply();
  virtual ~ContactRpcChatToReply();

  ContactRpcChatToReply(const ContactRpcChatToReply& from);

  inline ContactRpcChatToReply& operator=(const ContactRpcChatToReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcChatToReply& default_instance();

  void Swap(ContactRpcChatToReply* other);

  // implements Message ----------------------------------------------

  ContactRpcChatToReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcChatToReply& from);
  void MergeFrom(const ContactRpcChatToReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ContactRpcChatToReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcChatToReply* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcNewChatMsgNotify : public ::google::protobuf::Message {
 public:
  ContactRpcNewChatMsgNotify();
  virtual ~ContactRpcNewChatMsgNotify();

  ContactRpcNewChatMsgNotify(const ContactRpcNewChatMsgNotify& from);

  inline ContactRpcNewChatMsgNotify& operator=(const ContactRpcNewChatMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcNewChatMsgNotify& default_instance();

  void Swap(ContactRpcNewChatMsgNotify* other);

  // implements Message ----------------------------------------------

  ContactRpcNewChatMsgNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcNewChatMsgNotify& from);
  void MergeFrom(const ContactRpcNewChatMsgNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatInfo ChatMsg = 1;
  inline bool has_chatmsg() const;
  inline void clear_chatmsg();
  static const int kChatMsgFieldNumber = 1;
  inline const ::ChatInfo& chatmsg() const;
  inline ::ChatInfo* mutable_chatmsg();
  inline ::ChatInfo* release_chatmsg();
  inline void set_allocated_chatmsg(::ChatInfo* chatmsg);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcNewChatMsgNotify)
 private:
  inline void set_has_chatmsg();
  inline void clear_has_chatmsg();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ChatInfo* chatmsg_;
  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcNewChatMsgNotify* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcReadMsgAsk : public ::google::protobuf::Message {
 public:
  ContactRpcReadMsgAsk();
  virtual ~ContactRpcReadMsgAsk();

  ContactRpcReadMsgAsk(const ContactRpcReadMsgAsk& from);

  inline ContactRpcReadMsgAsk& operator=(const ContactRpcReadMsgAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcReadMsgAsk& default_instance();

  void Swap(ContactRpcReadMsgAsk* other);

  // implements Message ----------------------------------------------

  ContactRpcReadMsgAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcReadMsgAsk& from);
  void MergeFrom(const ContactRpcReadMsgAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcReadMsgAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcReadMsgAsk* default_instance_;
};
// -------------------------------------------------------------------

class ContactRpcReadMsgReply : public ::google::protobuf::Message {
 public:
  ContactRpcReadMsgReply();
  virtual ~ContactRpcReadMsgReply();

  ContactRpcReadMsgReply(const ContactRpcReadMsgReply& from);

  inline ContactRpcReadMsgReply& operator=(const ContactRpcReadMsgReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactRpcReadMsgReply& default_instance();

  void Swap(ContactRpcReadMsgReply* other);

  // implements Message ----------------------------------------------

  ContactRpcReadMsgReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactRpcReadMsgReply& from);
  void MergeFrom(const ContactRpcReadMsgReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ContactRpcReadMsgReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ContactRpc_2eproto();
  friend void protobuf_AssignDesc_ContactRpc_2eproto();
  friend void protobuf_ShutdownFile_ContactRpc_2eproto();

  void InitAsDefaultInstance();
  static ContactRpcReadMsgReply* default_instance_;
};
// ===================================================================


// ===================================================================

// ContactRpcAddFriendAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcAddFriendAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddFriendAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddFriendAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddFriendAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcAddFriendAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcAddFriendAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcAddFriendReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAddFriendReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddFriendReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddFriendReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddFriendReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAddFriendReply::result() const {
  return result_;
}
inline void ContactRpcAddFriendReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactData NewFriendData = 3;
inline bool ContactRpcAddFriendReply::has_newfrienddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcAddFriendReply::set_has_newfrienddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcAddFriendReply::clear_has_newfrienddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcAddFriendReply::clear_newfrienddata() {
  if (newfrienddata_ != NULL) newfrienddata_->::ContactData::Clear();
  clear_has_newfrienddata();
}
inline const ::ContactData& ContactRpcAddFriendReply::newfrienddata() const {
  return newfrienddata_ != NULL ? *newfrienddata_ : *default_instance_->newfrienddata_;
}
inline ::ContactData* ContactRpcAddFriendReply::mutable_newfrienddata() {
  set_has_newfrienddata();
  if (newfrienddata_ == NULL) newfrienddata_ = new ::ContactData;
  return newfrienddata_;
}
inline ::ContactData* ContactRpcAddFriendReply::release_newfrienddata() {
  clear_has_newfrienddata();
  ::ContactData* temp = newfrienddata_;
  newfrienddata_ = NULL;
  return temp;
}
inline void ContactRpcAddFriendReply::set_allocated_newfrienddata(::ContactData* newfrienddata) {
  delete newfrienddata_;
  newfrienddata_ = newfrienddata;
  if (newfrienddata) {
    set_has_newfrienddata();
  } else {
    clear_has_newfrienddata();
  }
}

// optional .ContactGroup MyFriendGroup = 4;
inline bool ContactRpcAddFriendReply::has_myfriendgroup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcAddFriendReply::set_has_myfriendgroup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcAddFriendReply::clear_has_myfriendgroup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcAddFriendReply::clear_myfriendgroup() {
  if (myfriendgroup_ != NULL) myfriendgroup_->::ContactGroup::Clear();
  clear_has_myfriendgroup();
}
inline const ::ContactGroup& ContactRpcAddFriendReply::myfriendgroup() const {
  return myfriendgroup_ != NULL ? *myfriendgroup_ : *default_instance_->myfriendgroup_;
}
inline ::ContactGroup* ContactRpcAddFriendReply::mutable_myfriendgroup() {
  set_has_myfriendgroup();
  if (myfriendgroup_ == NULL) myfriendgroup_ = new ::ContactGroup;
  return myfriendgroup_;
}
inline ::ContactGroup* ContactRpcAddFriendReply::release_myfriendgroup() {
  clear_has_myfriendgroup();
  ::ContactGroup* temp = myfriendgroup_;
  myfriendgroup_ = NULL;
  return temp;
}
inline void ContactRpcAddFriendReply::set_allocated_myfriendgroup(::ContactGroup* myfriendgroup) {
  delete myfriendgroup_;
  myfriendgroup_ = myfriendgroup;
  if (myfriendgroup) {
    set_has_myfriendgroup();
  } else {
    clear_has_myfriendgroup();
  }
}

// -------------------------------------------------------------------

// ContactRpcCancelRelationShipAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcCancelRelationShipAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcCancelRelationShipAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcCancelRelationShipAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcCancelRelationShipAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcCancelRelationShipAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcCancelRelationShipAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcCancelRelationShipReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcCancelRelationShipReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcCancelRelationShipReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcCancelRelationShipReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcCancelRelationShipReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcCancelRelationShipReply::result() const {
  return result_;
}
inline void ContactRpcCancelRelationShipReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 DeleteRoleId = 2 [default = 0];
inline bool ContactRpcCancelRelationShipReply::has_deleteroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcCancelRelationShipReply::set_has_deleteroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcCancelRelationShipReply::clear_has_deleteroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcCancelRelationShipReply::clear_deleteroleid() {
  deleteroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_deleteroleid();
}
inline ::google::protobuf::uint64 ContactRpcCancelRelationShipReply::deleteroleid() const {
  return deleteroleid_;
}
inline void ContactRpcCancelRelationShipReply::set_deleteroleid(::google::protobuf::uint64 value) {
  set_has_deleteroleid();
  deleteroleid_ = value;
}

// repeated .ContactGroup ContactGroups = 3;
inline int ContactRpcCancelRelationShipReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcCancelRelationShipReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcCancelRelationShipReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcCancelRelationShipReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcCancelRelationShipReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcCancelRelationShipReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcCancelRelationShipReply::mutable_contactgroups() {
  return &contactgroups_;
}

// -------------------------------------------------------------------

// ContactRpcAddBlackListAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcAddBlackListAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddBlackListAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddBlackListAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddBlackListAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcAddBlackListAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcAddBlackListAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcAddBlackListReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAddBlackListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddBlackListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddBlackListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddBlackListReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAddBlackListReply::result() const {
  return result_;
}
inline void ContactRpcAddBlackListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ContactGroups = 2;
inline int ContactRpcAddBlackListReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcAddBlackListReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcAddBlackListReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcAddBlackListReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcAddBlackListReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcAddBlackListReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcAddBlackListReply::mutable_contactgroups() {
  return &contactgroups_;
}

// optional uint64 RoleId = 3 [default = 0];
inline bool ContactRpcAddBlackListReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcAddBlackListReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcAddBlackListReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcAddBlackListReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcAddBlackListReply::roleid() const {
  return roleid_;
}
inline void ContactRpcAddBlackListReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcSyncAddressBookAsk

// -------------------------------------------------------------------

// ContactRpcSyncAddressBookReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSyncAddressBookReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSyncAddressBookReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSyncAddressBookReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSyncAddressBookReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSyncAddressBookReply::result() const {
  return result_;
}
inline void ContactRpcSyncAddressBookReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .AddressBook AddressBock = 2;
inline bool ContactRpcSyncAddressBookReply::has_addressbock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcSyncAddressBookReply::set_has_addressbock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcSyncAddressBookReply::clear_has_addressbock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcSyncAddressBookReply::clear_addressbock() {
  if (addressbock_ != NULL) addressbock_->::AddressBook::Clear();
  clear_has_addressbock();
}
inline const ::AddressBook& ContactRpcSyncAddressBookReply::addressbock() const {
  return addressbock_ != NULL ? *addressbock_ : *default_instance_->addressbock_;
}
inline ::AddressBook* ContactRpcSyncAddressBookReply::mutable_addressbock() {
  set_has_addressbock();
  if (addressbock_ == NULL) addressbock_ = new ::AddressBook;
  return addressbock_;
}
inline ::AddressBook* ContactRpcSyncAddressBookReply::release_addressbock() {
  clear_has_addressbock();
  ::AddressBook* temp = addressbock_;
  addressbock_ = NULL;
  return temp;
}
inline void ContactRpcSyncAddressBookReply::set_allocated_addressbock(::AddressBook* addressbock) {
  delete addressbock_;
  addressbock_ = addressbock;
  if (addressbock) {
    set_has_addressbock();
  } else {
    clear_has_addressbock();
  }
}

// -------------------------------------------------------------------

// ContactRpcContactSettingAsk

// optional .ContactSetting NewSetting = 1;
inline bool ContactRpcContactSettingAsk::has_newsetting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcContactSettingAsk::set_has_newsetting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcContactSettingAsk::clear_has_newsetting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcContactSettingAsk::clear_newsetting() {
  if (newsetting_ != NULL) newsetting_->::ContactSetting::Clear();
  clear_has_newsetting();
}
inline const ::ContactSetting& ContactRpcContactSettingAsk::newsetting() const {
  return newsetting_ != NULL ? *newsetting_ : *default_instance_->newsetting_;
}
inline ::ContactSetting* ContactRpcContactSettingAsk::mutable_newsetting() {
  set_has_newsetting();
  if (newsetting_ == NULL) newsetting_ = new ::ContactSetting;
  return newsetting_;
}
inline ::ContactSetting* ContactRpcContactSettingAsk::release_newsetting() {
  clear_has_newsetting();
  ::ContactSetting* temp = newsetting_;
  newsetting_ = NULL;
  return temp;
}
inline void ContactRpcContactSettingAsk::set_allocated_newsetting(::ContactSetting* newsetting) {
  delete newsetting_;
  newsetting_ = newsetting;
  if (newsetting) {
    set_has_newsetting();
  } else {
    clear_has_newsetting();
  }
}

// -------------------------------------------------------------------

// ContactRpcContactSettingReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcContactSettingReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcContactSettingReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcContactSettingReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcContactSettingReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcContactSettingReply::result() const {
  return result_;
}
inline void ContactRpcContactSettingReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactSetting NewSetting = 2;
inline bool ContactRpcContactSettingReply::has_newsetting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcContactSettingReply::set_has_newsetting() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcContactSettingReply::clear_has_newsetting() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcContactSettingReply::clear_newsetting() {
  if (newsetting_ != NULL) newsetting_->::ContactSetting::Clear();
  clear_has_newsetting();
}
inline const ::ContactSetting& ContactRpcContactSettingReply::newsetting() const {
  return newsetting_ != NULL ? *newsetting_ : *default_instance_->newsetting_;
}
inline ::ContactSetting* ContactRpcContactSettingReply::mutable_newsetting() {
  set_has_newsetting();
  if (newsetting_ == NULL) newsetting_ = new ::ContactSetting;
  return newsetting_;
}
inline ::ContactSetting* ContactRpcContactSettingReply::release_newsetting() {
  clear_has_newsetting();
  ::ContactSetting* temp = newsetting_;
  newsetting_ = NULL;
  return temp;
}
inline void ContactRpcContactSettingReply::set_allocated_newsetting(::ContactSetting* newsetting) {
  delete newsetting_;
  newsetting_ = newsetting;
  if (newsetting) {
    set_has_newsetting();
  } else {
    clear_has_newsetting();
  }
}

// -------------------------------------------------------------------

// ContactRpcCreateFriendGroupAsk

// optional string GroupName = 1;
inline bool ContactRpcCreateFriendGroupAsk::has_groupname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcCreateFriendGroupAsk::set_has_groupname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcCreateFriendGroupAsk::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcCreateFriendGroupAsk::clear_groupname() {
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& ContactRpcCreateFriendGroupAsk::groupname() const {
  return *groupname_;
}
inline void ContactRpcCreateFriendGroupAsk::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void ContactRpcCreateFriendGroupAsk::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void ContactRpcCreateFriendGroupAsk::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContactRpcCreateFriendGroupAsk::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  return groupname_;
}
inline ::std::string* ContactRpcCreateFriendGroupAsk::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ContactRpcCreateFriendGroupAsk::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint64 RoleIds = 2;
inline int ContactRpcCreateFriendGroupAsk::roleids_size() const {
  return roleids_.size();
}
inline void ContactRpcCreateFriendGroupAsk::clear_roleids() {
  roleids_.Clear();
}
inline ::google::protobuf::uint64 ContactRpcCreateFriendGroupAsk::roleids(int index) const {
  return roleids_.Get(index);
}
inline void ContactRpcCreateFriendGroupAsk::set_roleids(int index, ::google::protobuf::uint64 value) {
  roleids_.Set(index, value);
}
inline void ContactRpcCreateFriendGroupAsk::add_roleids(::google::protobuf::uint64 value) {
  roleids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ContactRpcCreateFriendGroupAsk::roleids() const {
  return roleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ContactRpcCreateFriendGroupAsk::mutable_roleids() {
  return &roleids_;
}

// -------------------------------------------------------------------

// ContactRpcCreateFriendGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcCreateFriendGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcCreateFriendGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcCreateFriendGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcCreateFriendGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcCreateFriendGroupReply::result() const {
  return result_;
}
inline void ContactRpcCreateFriendGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ContactGroups = 2;
inline int ContactRpcCreateFriendGroupReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcCreateFriendGroupReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcCreateFriendGroupReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcCreateFriendGroupReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcCreateFriendGroupReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcCreateFriendGroupReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcCreateFriendGroupReply::mutable_contactgroups() {
  return &contactgroups_;
}

// repeated int32 GroupIds = 3;
inline int ContactRpcCreateFriendGroupReply::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcCreateFriendGroupReply::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcCreateFriendGroupReply::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcCreateFriendGroupReply::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcCreateFriendGroupReply::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcCreateFriendGroupReply::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcCreateFriendGroupReply::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcMoveToFriendGroupAsk

// repeated uint64 RoleIds = 1;
inline int ContactRpcMoveToFriendGroupAsk::roleids_size() const {
  return roleids_.size();
}
inline void ContactRpcMoveToFriendGroupAsk::clear_roleids() {
  roleids_.Clear();
}
inline ::google::protobuf::uint64 ContactRpcMoveToFriendGroupAsk::roleids(int index) const {
  return roleids_.Get(index);
}
inline void ContactRpcMoveToFriendGroupAsk::set_roleids(int index, ::google::protobuf::uint64 value) {
  roleids_.Set(index, value);
}
inline void ContactRpcMoveToFriendGroupAsk::add_roleids(::google::protobuf::uint64 value) {
  roleids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ContactRpcMoveToFriendGroupAsk::roleids() const {
  return roleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ContactRpcMoveToFriendGroupAsk::mutable_roleids() {
  return &roleids_;
}

// optional int32 FromGroupId = 2 [default = -1];
inline bool ContactRpcMoveToFriendGroupAsk::has_fromgroupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcMoveToFriendGroupAsk::set_has_fromgroupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcMoveToFriendGroupAsk::clear_has_fromgroupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcMoveToFriendGroupAsk::clear_fromgroupid() {
  fromgroupid_ = -1;
  clear_has_fromgroupid();
}
inline ::google::protobuf::int32 ContactRpcMoveToFriendGroupAsk::fromgroupid() const {
  return fromgroupid_;
}
inline void ContactRpcMoveToFriendGroupAsk::set_fromgroupid(::google::protobuf::int32 value) {
  set_has_fromgroupid();
  fromgroupid_ = value;
}

// optional int32 ToGroupId = 3 [default = -1];
inline bool ContactRpcMoveToFriendGroupAsk::has_togroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcMoveToFriendGroupAsk::set_has_togroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcMoveToFriendGroupAsk::clear_has_togroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcMoveToFriendGroupAsk::clear_togroupid() {
  togroupid_ = -1;
  clear_has_togroupid();
}
inline ::google::protobuf::int32 ContactRpcMoveToFriendGroupAsk::togroupid() const {
  return togroupid_;
}
inline void ContactRpcMoveToFriendGroupAsk::set_togroupid(::google::protobuf::int32 value) {
  set_has_togroupid();
  togroupid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcMoveToFriendGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcMoveToFriendGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcMoveToFriendGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcMoveToFriendGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcMoveToFriendGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcMoveToFriendGroupReply::result() const {
  return result_;
}
inline void ContactRpcMoveToFriendGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ChangeGroup = 2;
inline int ContactRpcMoveToFriendGroupReply::changegroup_size() const {
  return changegroup_.size();
}
inline void ContactRpcMoveToFriendGroupReply::clear_changegroup() {
  changegroup_.Clear();
}
inline const ::ContactGroup& ContactRpcMoveToFriendGroupReply::changegroup(int index) const {
  return changegroup_.Get(index);
}
inline ::ContactGroup* ContactRpcMoveToFriendGroupReply::mutable_changegroup(int index) {
  return changegroup_.Mutable(index);
}
inline ::ContactGroup* ContactRpcMoveToFriendGroupReply::add_changegroup() {
  return changegroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcMoveToFriendGroupReply::changegroup() const {
  return changegroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcMoveToFriendGroupReply::mutable_changegroup() {
  return &changegroup_;
}

// -------------------------------------------------------------------

// ContactRpcRemoveFriendGroupAsk

// optional int32 RemoveGroupId = 1 [default = -1];
inline bool ContactRpcRemoveFriendGroupAsk::has_removegroupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRemoveFriendGroupAsk::set_has_removegroupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRemoveFriendGroupAsk::clear_has_removegroupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRemoveFriendGroupAsk::clear_removegroupid() {
  removegroupid_ = -1;
  clear_has_removegroupid();
}
inline ::google::protobuf::int32 ContactRpcRemoveFriendGroupAsk::removegroupid() const {
  return removegroupid_;
}
inline void ContactRpcRemoveFriendGroupAsk::set_removegroupid(::google::protobuf::int32 value) {
  set_has_removegroupid();
  removegroupid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcRemoveFriendGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcRemoveFriendGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRemoveFriendGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcRemoveFriendGroupReply::result() const {
  return result_;
}
inline void ContactRpcRemoveFriendGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactGroup MyFriendGroup = 3;
inline bool ContactRpcRemoveFriendGroupReply::has_myfriendgroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcRemoveFriendGroupReply::set_has_myfriendgroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_has_myfriendgroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_myfriendgroup() {
  if (myfriendgroup_ != NULL) myfriendgroup_->::ContactGroup::Clear();
  clear_has_myfriendgroup();
}
inline const ::ContactGroup& ContactRpcRemoveFriendGroupReply::myfriendgroup() const {
  return myfriendgroup_ != NULL ? *myfriendgroup_ : *default_instance_->myfriendgroup_;
}
inline ::ContactGroup* ContactRpcRemoveFriendGroupReply::mutable_myfriendgroup() {
  set_has_myfriendgroup();
  if (myfriendgroup_ == NULL) myfriendgroup_ = new ::ContactGroup;
  return myfriendgroup_;
}
inline ::ContactGroup* ContactRpcRemoveFriendGroupReply::release_myfriendgroup() {
  clear_has_myfriendgroup();
  ::ContactGroup* temp = myfriendgroup_;
  myfriendgroup_ = NULL;
  return temp;
}
inline void ContactRpcRemoveFriendGroupReply::set_allocated_myfriendgroup(::ContactGroup* myfriendgroup) {
  delete myfriendgroup_;
  myfriendgroup_ = myfriendgroup;
  if (myfriendgroup) {
    set_has_myfriendgroup();
  } else {
    clear_has_myfriendgroup();
  }
}

// optional int32 RemoveGroupId = 4 [default = -1];
inline bool ContactRpcRemoveFriendGroupReply::has_removegroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcRemoveFriendGroupReply::set_has_removegroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_has_removegroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcRemoveFriendGroupReply::clear_removegroupid() {
  removegroupid_ = -1;
  clear_has_removegroupid();
}
inline ::google::protobuf::int32 ContactRpcRemoveFriendGroupReply::removegroupid() const {
  return removegroupid_;
}
inline void ContactRpcRemoveFriendGroupReply::set_removegroupid(::google::protobuf::int32 value) {
  set_has_removegroupid();
  removegroupid_ = value;
}

// repeated int32 GroupIds = 5;
inline int ContactRpcRemoveFriendGroupReply::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcRemoveFriendGroupReply::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcRemoveFriendGroupReply::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcRemoveFriendGroupReply::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcRemoveFriendGroupReply::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcRemoveFriendGroupReply::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcRemoveFriendGroupReply::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcRenameGroupAsk

// optional string Name = 1;
inline bool ContactRpcRenameGroupAsk::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRenameGroupAsk::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRenameGroupAsk::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRenameGroupAsk::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ContactRpcRenameGroupAsk::name() const {
  return *name_;
}
inline void ContactRpcRenameGroupAsk::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ContactRpcRenameGroupAsk::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ContactRpcRenameGroupAsk::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContactRpcRenameGroupAsk::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ContactRpcRenameGroupAsk::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ContactRpcRenameGroupAsk::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 GroupId = 2 [default = -1];
inline bool ContactRpcRenameGroupAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcRenameGroupAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcRenameGroupAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcRenameGroupAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
inline ::google::protobuf::int32 ContactRpcRenameGroupAsk::groupid() const {
  return groupid_;
}
inline void ContactRpcRenameGroupAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcRenameGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcRenameGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRenameGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRenameGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRenameGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcRenameGroupReply::result() const {
  return result_;
}
inline void ContactRpcRenameGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactGroup DefineGroup = 2;
inline bool ContactRpcRenameGroupReply::has_definegroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcRenameGroupReply::set_has_definegroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcRenameGroupReply::clear_has_definegroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcRenameGroupReply::clear_definegroup() {
  if (definegroup_ != NULL) definegroup_->::ContactGroup::Clear();
  clear_has_definegroup();
}
inline const ::ContactGroup& ContactRpcRenameGroupReply::definegroup() const {
  return definegroup_ != NULL ? *definegroup_ : *default_instance_->definegroup_;
}
inline ::ContactGroup* ContactRpcRenameGroupReply::mutable_definegroup() {
  set_has_definegroup();
  if (definegroup_ == NULL) definegroup_ = new ::ContactGroup;
  return definegroup_;
}
inline ::ContactGroup* ContactRpcRenameGroupReply::release_definegroup() {
  clear_has_definegroup();
  ::ContactGroup* temp = definegroup_;
  definegroup_ = NULL;
  return temp;
}
inline void ContactRpcRenameGroupReply::set_allocated_definegroup(::ContactGroup* definegroup) {
  delete definegroup_;
  definegroup_ = definegroup;
  if (definegroup) {
    set_has_definegroup();
  } else {
    clear_has_definegroup();
  }
}

// -------------------------------------------------------------------

// ContactRpcAgreeApplicationAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcAgreeApplicationAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAgreeApplicationAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAgreeApplicationAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAgreeApplicationAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcAgreeApplicationAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcAgreeApplicationAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcAgreeApplicationReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAgreeApplicationReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAgreeApplicationReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAgreeApplicationReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAgreeApplicationReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAgreeApplicationReply::result() const {
  return result_;
}
inline void ContactRpcAgreeApplicationReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactData NewFriendData = 2;
inline bool ContactRpcAgreeApplicationReply::has_newfrienddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcAgreeApplicationReply::set_has_newfrienddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcAgreeApplicationReply::clear_has_newfrienddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcAgreeApplicationReply::clear_newfrienddata() {
  if (newfrienddata_ != NULL) newfrienddata_->::ContactData::Clear();
  clear_has_newfrienddata();
}
inline const ::ContactData& ContactRpcAgreeApplicationReply::newfrienddata() const {
  return newfrienddata_ != NULL ? *newfrienddata_ : *default_instance_->newfrienddata_;
}
inline ::ContactData* ContactRpcAgreeApplicationReply::mutable_newfrienddata() {
  set_has_newfrienddata();
  if (newfrienddata_ == NULL) newfrienddata_ = new ::ContactData;
  return newfrienddata_;
}
inline ::ContactData* ContactRpcAgreeApplicationReply::release_newfrienddata() {
  clear_has_newfrienddata();
  ::ContactData* temp = newfrienddata_;
  newfrienddata_ = NULL;
  return temp;
}
inline void ContactRpcAgreeApplicationReply::set_allocated_newfrienddata(::ContactData* newfrienddata) {
  delete newfrienddata_;
  newfrienddata_ = newfrienddata;
  if (newfrienddata) {
    set_has_newfrienddata();
  } else {
    clear_has_newfrienddata();
  }
}

// repeated .ContactGroup MyFriendGroup = 3;
inline int ContactRpcAgreeApplicationReply::myfriendgroup_size() const {
  return myfriendgroup_.size();
}
inline void ContactRpcAgreeApplicationReply::clear_myfriendgroup() {
  myfriendgroup_.Clear();
}
inline const ::ContactGroup& ContactRpcAgreeApplicationReply::myfriendgroup(int index) const {
  return myfriendgroup_.Get(index);
}
inline ::ContactGroup* ContactRpcAgreeApplicationReply::mutable_myfriendgroup(int index) {
  return myfriendgroup_.Mutable(index);
}
inline ::ContactGroup* ContactRpcAgreeApplicationReply::add_myfriendgroup() {
  return myfriendgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcAgreeApplicationReply::myfriendgroup() const {
  return myfriendgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcAgreeApplicationReply::mutable_myfriendgroup() {
  return &myfriendgroup_;
}

// -------------------------------------------------------------------

// ContactRpcAgreeApplicationNotifyNotify

// repeated .ContactGroup MyFriendGroup = 1;
inline int ContactRpcAgreeApplicationNotifyNotify::myfriendgroup_size() const {
  return myfriendgroup_.size();
}
inline void ContactRpcAgreeApplicationNotifyNotify::clear_myfriendgroup() {
  myfriendgroup_.Clear();
}
inline const ::ContactGroup& ContactRpcAgreeApplicationNotifyNotify::myfriendgroup(int index) const {
  return myfriendgroup_.Get(index);
}
inline ::ContactGroup* ContactRpcAgreeApplicationNotifyNotify::mutable_myfriendgroup(int index) {
  return myfriendgroup_.Mutable(index);
}
inline ::ContactGroup* ContactRpcAgreeApplicationNotifyNotify::add_myfriendgroup() {
  return myfriendgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcAgreeApplicationNotifyNotify::myfriendgroup() const {
  return myfriendgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcAgreeApplicationNotifyNotify::mutable_myfriendgroup() {
  return &myfriendgroup_;
}

// optional .ContactData NewFriendData = 2;
inline bool ContactRpcAgreeApplicationNotifyNotify::has_newfrienddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcAgreeApplicationNotifyNotify::set_has_newfrienddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcAgreeApplicationNotifyNotify::clear_has_newfrienddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcAgreeApplicationNotifyNotify::clear_newfrienddata() {
  if (newfrienddata_ != NULL) newfrienddata_->::ContactData::Clear();
  clear_has_newfrienddata();
}
inline const ::ContactData& ContactRpcAgreeApplicationNotifyNotify::newfrienddata() const {
  return newfrienddata_ != NULL ? *newfrienddata_ : *default_instance_->newfrienddata_;
}
inline ::ContactData* ContactRpcAgreeApplicationNotifyNotify::mutable_newfrienddata() {
  set_has_newfrienddata();
  if (newfrienddata_ == NULL) newfrienddata_ = new ::ContactData;
  return newfrienddata_;
}
inline ::ContactData* ContactRpcAgreeApplicationNotifyNotify::release_newfrienddata() {
  clear_has_newfrienddata();
  ::ContactData* temp = newfrienddata_;
  newfrienddata_ = NULL;
  return temp;
}
inline void ContactRpcAgreeApplicationNotifyNotify::set_allocated_newfrienddata(::ContactData* newfrienddata) {
  delete newfrienddata_;
  newfrienddata_ = newfrienddata;
  if (newfrienddata) {
    set_has_newfrienddata();
  } else {
    clear_has_newfrienddata();
  }
}

// -------------------------------------------------------------------

// ContactRpcSetFriendGroupAsk

// optional int32 GroupId = 1 [default = -1];
inline bool ContactRpcSetFriendGroupAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSetFriendGroupAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSetFriendGroupAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSetFriendGroupAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
inline ::google::protobuf::int32 ContactRpcSetFriendGroupAsk::groupid() const {
  return groupid_;
}
inline void ContactRpcSetFriendGroupAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional int32 RoleIds = 2 [default = -1];
inline bool ContactRpcSetFriendGroupAsk::has_roleids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcSetFriendGroupAsk::set_has_roleids() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcSetFriendGroupAsk::clear_has_roleids() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcSetFriendGroupAsk::clear_roleids() {
  roleids_ = -1;
  clear_has_roleids();
}
inline ::google::protobuf::int32 ContactRpcSetFriendGroupAsk::roleids() const {
  return roleids_;
}
inline void ContactRpcSetFriendGroupAsk::set_roleids(::google::protobuf::int32 value) {
  set_has_roleids();
  roleids_ = value;
}

// optional bytes GroupName = 3;
inline bool ContactRpcSetFriendGroupAsk::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcSetFriendGroupAsk::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcSetFriendGroupAsk::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcSetFriendGroupAsk::clear_groupname() {
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& ContactRpcSetFriendGroupAsk::groupname() const {
  return *groupname_;
}
inline void ContactRpcSetFriendGroupAsk::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void ContactRpcSetFriendGroupAsk::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void ContactRpcSetFriendGroupAsk::set_groupname(const void* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContactRpcSetFriendGroupAsk::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  return groupname_;
}
inline ::std::string* ContactRpcSetFriendGroupAsk::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ContactRpcSetFriendGroupAsk::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ContactRpcSetFriendGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSetFriendGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSetFriendGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSetFriendGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSetFriendGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSetFriendGroupReply::result() const {
  return result_;
}
inline void ContactRpcSetFriendGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup FriendGroups = 2;
inline int ContactRpcSetFriendGroupReply::friendgroups_size() const {
  return friendgroups_.size();
}
inline void ContactRpcSetFriendGroupReply::clear_friendgroups() {
  friendgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcSetFriendGroupReply::friendgroups(int index) const {
  return friendgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcSetFriendGroupReply::mutable_friendgroups(int index) {
  return friendgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcSetFriendGroupReply::add_friendgroups() {
  return friendgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcSetFriendGroupReply::friendgroups() const {
  return friendgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcSetFriendGroupReply::mutable_friendgroups() {
  return &friendgroups_;
}

// -------------------------------------------------------------------

// ContactRpcNewFriendNotify

// optional .ContactData NewFriendData = 1;
inline bool ContactRpcNewFriendNotify::has_newfrienddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcNewFriendNotify::set_has_newfrienddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcNewFriendNotify::clear_has_newfrienddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcNewFriendNotify::clear_newfrienddata() {
  if (newfrienddata_ != NULL) newfrienddata_->::ContactData::Clear();
  clear_has_newfrienddata();
}
inline const ::ContactData& ContactRpcNewFriendNotify::newfrienddata() const {
  return newfrienddata_ != NULL ? *newfrienddata_ : *default_instance_->newfrienddata_;
}
inline ::ContactData* ContactRpcNewFriendNotify::mutable_newfrienddata() {
  set_has_newfrienddata();
  if (newfrienddata_ == NULL) newfrienddata_ = new ::ContactData;
  return newfrienddata_;
}
inline ::ContactData* ContactRpcNewFriendNotify::release_newfrienddata() {
  clear_has_newfrienddata();
  ::ContactData* temp = newfrienddata_;
  newfrienddata_ = NULL;
  return temp;
}
inline void ContactRpcNewFriendNotify::set_allocated_newfrienddata(::ContactData* newfrienddata) {
  delete newfrienddata_;
  newfrienddata_ = newfrienddata;
  if (newfrienddata) {
    set_has_newfrienddata();
  } else {
    clear_has_newfrienddata();
  }
}

// optional .ContactGroup MyFriendGroup = 2;
inline bool ContactRpcNewFriendNotify::has_myfriendgroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcNewFriendNotify::set_has_myfriendgroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcNewFriendNotify::clear_has_myfriendgroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcNewFriendNotify::clear_myfriendgroup() {
  if (myfriendgroup_ != NULL) myfriendgroup_->::ContactGroup::Clear();
  clear_has_myfriendgroup();
}
inline const ::ContactGroup& ContactRpcNewFriendNotify::myfriendgroup() const {
  return myfriendgroup_ != NULL ? *myfriendgroup_ : *default_instance_->myfriendgroup_;
}
inline ::ContactGroup* ContactRpcNewFriendNotify::mutable_myfriendgroup() {
  set_has_myfriendgroup();
  if (myfriendgroup_ == NULL) myfriendgroup_ = new ::ContactGroup;
  return myfriendgroup_;
}
inline ::ContactGroup* ContactRpcNewFriendNotify::release_myfriendgroup() {
  clear_has_myfriendgroup();
  ::ContactGroup* temp = myfriendgroup_;
  myfriendgroup_ = NULL;
  return temp;
}
inline void ContactRpcNewFriendNotify::set_allocated_myfriendgroup(::ContactGroup* myfriendgroup) {
  delete myfriendgroup_;
  myfriendgroup_ = myfriendgroup;
  if (myfriendgroup) {
    set_has_myfriendgroup();
  } else {
    clear_has_myfriendgroup();
  }
}

// -------------------------------------------------------------------

// ContactRpcApplyListNotify

// optional .ContactData ApplyFriendData = 1;
inline bool ContactRpcApplyListNotify::has_applyfrienddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcApplyListNotify::set_has_applyfrienddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcApplyListNotify::clear_has_applyfrienddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcApplyListNotify::clear_applyfrienddata() {
  if (applyfrienddata_ != NULL) applyfrienddata_->::ContactData::Clear();
  clear_has_applyfrienddata();
}
inline const ::ContactData& ContactRpcApplyListNotify::applyfrienddata() const {
  return applyfrienddata_ != NULL ? *applyfrienddata_ : *default_instance_->applyfrienddata_;
}
inline ::ContactData* ContactRpcApplyListNotify::mutable_applyfrienddata() {
  set_has_applyfrienddata();
  if (applyfrienddata_ == NULL) applyfrienddata_ = new ::ContactData;
  return applyfrienddata_;
}
inline ::ContactData* ContactRpcApplyListNotify::release_applyfrienddata() {
  clear_has_applyfrienddata();
  ::ContactData* temp = applyfrienddata_;
  applyfrienddata_ = NULL;
  return temp;
}
inline void ContactRpcApplyListNotify::set_allocated_applyfrienddata(::ContactData* applyfrienddata) {
  delete applyfrienddata_;
  applyfrienddata_ = applyfrienddata;
  if (applyfrienddata) {
    set_has_applyfrienddata();
  } else {
    clear_has_applyfrienddata();
  }
}

// repeated .ContactGroup ApplyGroups = 5;
inline int ContactRpcApplyListNotify::applygroups_size() const {
  return applygroups_.size();
}
inline void ContactRpcApplyListNotify::clear_applygroups() {
  applygroups_.Clear();
}
inline const ::ContactGroup& ContactRpcApplyListNotify::applygroups(int index) const {
  return applygroups_.Get(index);
}
inline ::ContactGroup* ContactRpcApplyListNotify::mutable_applygroups(int index) {
  return applygroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcApplyListNotify::add_applygroups() {
  return applygroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcApplyListNotify::applygroups() const {
  return applygroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcApplyListNotify::mutable_applygroups() {
  return &applygroups_;
}

// -------------------------------------------------------------------

// ContactRpcRejectApplyAsk

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcRejectApplyAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRejectApplyAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRejectApplyAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRejectApplyAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcRejectApplyAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcRejectApplyAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcRejectApplyReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcRejectApplyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRejectApplyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRejectApplyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRejectApplyReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcRejectApplyReply::result() const {
  return result_;
}
inline void ContactRpcRejectApplyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ContactGroups = 8;
inline int ContactRpcRejectApplyReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcRejectApplyReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcRejectApplyReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcRejectApplyReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcRejectApplyReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcRejectApplyReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcRejectApplyReply::mutable_contactgroups() {
  return &contactgroups_;
}

// optional uint64 DeleteRoleId = 9 [default = 0];
inline bool ContactRpcRejectApplyReply::has_deleteroleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactRpcRejectApplyReply::set_has_deleteroleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactRpcRejectApplyReply::clear_has_deleteroleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactRpcRejectApplyReply::clear_deleteroleid() {
  deleteroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_deleteroleid();
}
inline ::google::protobuf::uint64 ContactRpcRejectApplyReply::deleteroleid() const {
  return deleteroleid_;
}
inline void ContactRpcRejectApplyReply::set_deleteroleid(::google::protobuf::uint64 value) {
  set_has_deleteroleid();
  deleteroleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcBeRejectApplyNotify

// optional .ContactData DeleteFriendData = 1;
inline bool ContactRpcBeRejectApplyNotify::has_deletefrienddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcBeRejectApplyNotify::set_has_deletefrienddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcBeRejectApplyNotify::clear_has_deletefrienddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcBeRejectApplyNotify::clear_deletefrienddata() {
  if (deletefrienddata_ != NULL) deletefrienddata_->::ContactData::Clear();
  clear_has_deletefrienddata();
}
inline const ::ContactData& ContactRpcBeRejectApplyNotify::deletefrienddata() const {
  return deletefrienddata_ != NULL ? *deletefrienddata_ : *default_instance_->deletefrienddata_;
}
inline ::ContactData* ContactRpcBeRejectApplyNotify::mutable_deletefrienddata() {
  set_has_deletefrienddata();
  if (deletefrienddata_ == NULL) deletefrienddata_ = new ::ContactData;
  return deletefrienddata_;
}
inline ::ContactData* ContactRpcBeRejectApplyNotify::release_deletefrienddata() {
  clear_has_deletefrienddata();
  ::ContactData* temp = deletefrienddata_;
  deletefrienddata_ = NULL;
  return temp;
}
inline void ContactRpcBeRejectApplyNotify::set_allocated_deletefrienddata(::ContactData* deletefrienddata) {
  delete deletefrienddata_;
  deletefrienddata_ = deletefrienddata;
  if (deletefrienddata) {
    set_has_deletefrienddata();
  } else {
    clear_has_deletefrienddata();
  }
}

// -------------------------------------------------------------------

// ContactRpcBeCancelRelationShipNotify

// optional uint64 DeleteRoleId = 1 [default = 0];
inline bool ContactRpcBeCancelRelationShipNotify::has_deleteroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcBeCancelRelationShipNotify::set_has_deleteroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcBeCancelRelationShipNotify::clear_has_deleteroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcBeCancelRelationShipNotify::clear_deleteroleid() {
  deleteroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_deleteroleid();
}
inline ::google::protobuf::uint64 ContactRpcBeCancelRelationShipNotify::deleteroleid() const {
  return deleteroleid_;
}
inline void ContactRpcBeCancelRelationShipNotify::set_deleteroleid(::google::protobuf::uint64 value) {
  set_has_deleteroleid();
  deleteroleid_ = value;
}

// repeated .ContactGroup ContactGroups = 2;
inline int ContactRpcBeCancelRelationShipNotify::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcBeCancelRelationShipNotify::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcBeCancelRelationShipNotify::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcBeCancelRelationShipNotify::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcBeCancelRelationShipNotify::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcBeCancelRelationShipNotify::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcBeCancelRelationShipNotify::mutable_contactgroups() {
  return &contactgroups_;
}

// -------------------------------------------------------------------

// ContactRpcBeAddBlackListNotify

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcBeAddBlackListNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcBeAddBlackListNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcBeAddBlackListNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcBeAddBlackListNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcBeAddBlackListNotify::roleid() const {
  return roleid_;
}
inline void ContactRpcBeAddBlackListNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .ContactGroup ContactGroups = 2;
inline int ContactRpcBeAddBlackListNotify::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcBeAddBlackListNotify::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcBeAddBlackListNotify::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcBeAddBlackListNotify::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcBeAddBlackListNotify::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcBeAddBlackListNotify::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcBeAddBlackListNotify::mutable_contactgroups() {
  return &contactgroups_;
}

// -------------------------------------------------------------------

// ContactRpcRecommendContactAsk

// -------------------------------------------------------------------

// ContactRpcRecommendContactReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcRecommendContactReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRecommendContactReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRecommendContactReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRecommendContactReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcRecommendContactReply::result() const {
  return result_;
}
inline void ContactRpcRecommendContactReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactData Contact = 2;
inline int ContactRpcRecommendContactReply::contact_size() const {
  return contact_.size();
}
inline void ContactRpcRecommendContactReply::clear_contact() {
  contact_.Clear();
}
inline const ::ContactData& ContactRpcRecommendContactReply::contact(int index) const {
  return contact_.Get(index);
}
inline ::ContactData* ContactRpcRecommendContactReply::mutable_contact(int index) {
  return contact_.Mutable(index);
}
inline ::ContactData* ContactRpcRecommendContactReply::add_contact() {
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactData >&
ContactRpcRecommendContactReply::contact() const {
  return contact_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactData >*
ContactRpcRecommendContactReply::mutable_contact() {
  return &contact_;
}

// repeated uint64 ApplyedListId = 3;
inline int ContactRpcRecommendContactReply::applyedlistid_size() const {
  return applyedlistid_.size();
}
inline void ContactRpcRecommendContactReply::clear_applyedlistid() {
  applyedlistid_.Clear();
}
inline ::google::protobuf::uint64 ContactRpcRecommendContactReply::applyedlistid(int index) const {
  return applyedlistid_.Get(index);
}
inline void ContactRpcRecommendContactReply::set_applyedlistid(int index, ::google::protobuf::uint64 value) {
  applyedlistid_.Set(index, value);
}
inline void ContactRpcRecommendContactReply::add_applyedlistid(::google::protobuf::uint64 value) {
  applyedlistid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ContactRpcRecommendContactReply::applyedlistid() const {
  return applyedlistid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ContactRpcRecommendContactReply::mutable_applyedlistid() {
  return &applyedlistid_;
}

// -------------------------------------------------------------------

// ContactRpcRejectAllAsk

// -------------------------------------------------------------------

// ContactRpcRejectAllReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcRejectAllReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRejectAllReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRejectAllReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRejectAllReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcRejectAllReply::result() const {
  return result_;
}
inline void ContactRpcRejectAllReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ContactGroups = 2;
inline int ContactRpcRejectAllReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcRejectAllReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcRejectAllReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcRejectAllReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcRejectAllReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcRejectAllReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcRejectAllReply::mutable_contactgroups() {
  return &contactgroups_;
}

// repeated uint64 DeleteRoleIds = 3;
inline int ContactRpcRejectAllReply::deleteroleids_size() const {
  return deleteroleids_.size();
}
inline void ContactRpcRejectAllReply::clear_deleteroleids() {
  deleteroleids_.Clear();
}
inline ::google::protobuf::uint64 ContactRpcRejectAllReply::deleteroleids(int index) const {
  return deleteroleids_.Get(index);
}
inline void ContactRpcRejectAllReply::set_deleteroleids(int index, ::google::protobuf::uint64 value) {
  deleteroleids_.Set(index, value);
}
inline void ContactRpcRejectAllReply::add_deleteroleids(::google::protobuf::uint64 value) {
  deleteroleids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ContactRpcRejectAllReply::deleteroleids() const {
  return deleteroleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ContactRpcRejectAllReply::mutable_deleteroleids() {
  return &deleteroleids_;
}

// -------------------------------------------------------------------

// ContactRpcAddFriendShipPointAsk

// optional uint64 FriendRoleId = 1 [default = 0];
inline bool ContactRpcAddFriendShipPointAsk::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddFriendShipPointAsk::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddFriendShipPointAsk::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddFriendShipPointAsk::clear_friendroleid() {
  friendroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendroleid();
}
inline ::google::protobuf::uint64 ContactRpcAddFriendShipPointAsk::friendroleid() const {
  return friendroleid_;
}
inline void ContactRpcAddFriendShipPointAsk::set_friendroleid(::google::protobuf::uint64 value) {
  set_has_friendroleid();
  friendroleid_ = value;
}

// repeated .ItemSimpleData ItemData = 2;
inline int ContactRpcAddFriendShipPointAsk::itemdata_size() const {
  return itemdata_.size();
}
inline void ContactRpcAddFriendShipPointAsk::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::ItemSimpleData& ContactRpcAddFriendShipPointAsk::itemdata(int index) const {
  return itemdata_.Get(index);
}
inline ::ItemSimpleData* ContactRpcAddFriendShipPointAsk::mutable_itemdata(int index) {
  return itemdata_.Mutable(index);
}
inline ::ItemSimpleData* ContactRpcAddFriendShipPointAsk::add_itemdata() {
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
ContactRpcAddFriendShipPointAsk::itemdata() const {
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
ContactRpcAddFriendShipPointAsk::mutable_itemdata() {
  return &itemdata_;
}

// -------------------------------------------------------------------

// ContactRpcAddFriendShipPointReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAddFriendShipPointReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddFriendShipPointReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddFriendShipPointReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddFriendShipPointReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAddFriendShipPointReply::result() const {
  return result_;
}
inline void ContactRpcAddFriendShipPointReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactData Contact = 2;
inline bool ContactRpcAddFriendShipPointReply::has_contact() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcAddFriendShipPointReply::set_has_contact() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcAddFriendShipPointReply::clear_has_contact() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcAddFriendShipPointReply::clear_contact() {
  if (contact_ != NULL) contact_->::ContactData::Clear();
  clear_has_contact();
}
inline const ::ContactData& ContactRpcAddFriendShipPointReply::contact() const {
  return contact_ != NULL ? *contact_ : *default_instance_->contact_;
}
inline ::ContactData* ContactRpcAddFriendShipPointReply::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) contact_ = new ::ContactData;
  return contact_;
}
inline ::ContactData* ContactRpcAddFriendShipPointReply::release_contact() {
  clear_has_contact();
  ::ContactData* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void ContactRpcAddFriendShipPointReply::set_allocated_contact(::ContactData* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
}

// -------------------------------------------------------------------

// ContactRpcRoleDataUpdateNotify

// optional .ContactData Contact = 1;
inline bool ContactRpcRoleDataUpdateNotify::has_contact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcRoleDataUpdateNotify::set_has_contact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcRoleDataUpdateNotify::clear_has_contact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcRoleDataUpdateNotify::clear_contact() {
  if (contact_ != NULL) contact_->::ContactData::Clear();
  clear_has_contact();
}
inline const ::ContactData& ContactRpcRoleDataUpdateNotify::contact() const {
  return contact_ != NULL ? *contact_ : *default_instance_->contact_;
}
inline ::ContactData* ContactRpcRoleDataUpdateNotify::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) contact_ = new ::ContactData;
  return contact_;
}
inline ::ContactData* ContactRpcRoleDataUpdateNotify::release_contact() {
  clear_has_contact();
  ::ContactData* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void ContactRpcRoleDataUpdateNotify::set_allocated_contact(::ContactData* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
}

// -------------------------------------------------------------------

// ContactRpcContactLoginNotify

// optional .ContactData Contact = 1;
inline bool ContactRpcContactLoginNotify::has_contact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcContactLoginNotify::set_has_contact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcContactLoginNotify::clear_has_contact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcContactLoginNotify::clear_contact() {
  if (contact_ != NULL) contact_->::ContactData::Clear();
  clear_has_contact();
}
inline const ::ContactData& ContactRpcContactLoginNotify::contact() const {
  return contact_ != NULL ? *contact_ : *default_instance_->contact_;
}
inline ::ContactData* ContactRpcContactLoginNotify::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) contact_ = new ::ContactData;
  return contact_;
}
inline ::ContactData* ContactRpcContactLoginNotify::release_contact() {
  clear_has_contact();
  ::ContactData* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void ContactRpcContactLoginNotify::set_allocated_contact(::ContactData* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
}

// repeated int32 GroupIds = 2;
inline int ContactRpcContactLoginNotify::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcContactLoginNotify::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcContactLoginNotify::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcContactLoginNotify::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcContactLoginNotify::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcContactLoginNotify::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcContactLoginNotify::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcContactLogoutNotify

// optional .ContactData Contact = 1;
inline bool ContactRpcContactLogoutNotify::has_contact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcContactLogoutNotify::set_has_contact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcContactLogoutNotify::clear_has_contact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcContactLogoutNotify::clear_contact() {
  if (contact_ != NULL) contact_->::ContactData::Clear();
  clear_has_contact();
}
inline const ::ContactData& ContactRpcContactLogoutNotify::contact() const {
  return contact_ != NULL ? *contact_ : *default_instance_->contact_;
}
inline ::ContactData* ContactRpcContactLogoutNotify::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) contact_ = new ::ContactData;
  return contact_;
}
inline ::ContactData* ContactRpcContactLogoutNotify::release_contact() {
  clear_has_contact();
  ::ContactData* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void ContactRpcContactLogoutNotify::set_allocated_contact(::ContactData* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
}

// repeated int32 GroupIds = 2;
inline int ContactRpcContactLogoutNotify::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcContactLogoutNotify::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcContactLogoutNotify::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcContactLogoutNotify::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcContactLogoutNotify::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcContactLogoutNotify::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcContactLogoutNotify::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcDeleteRoleDataNotify

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcDeleteRoleDataNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcDeleteRoleDataNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcDeleteRoleDataNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcDeleteRoleDataNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcDeleteRoleDataNotify::roleid() const {
  return roleid_;
}
inline void ContactRpcDeleteRoleDataNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcSortGroupAsk

// repeated int32 GroupIds = 1;
inline int ContactRpcSortGroupAsk::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcSortGroupAsk::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcSortGroupAsk::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcSortGroupAsk::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcSortGroupAsk::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcSortGroupAsk::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcSortGroupAsk::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcSortGroupReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSortGroupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSortGroupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSortGroupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSortGroupReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSortGroupReply::result() const {
  return result_;
}
inline void ContactRpcSortGroupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated int32 GroupIds = 2;
inline int ContactRpcSortGroupReply::groupids_size() const {
  return groupids_.size();
}
inline void ContactRpcSortGroupReply::clear_groupids() {
  groupids_.Clear();
}
inline ::google::protobuf::int32 ContactRpcSortGroupReply::groupids(int index) const {
  return groupids_.Get(index);
}
inline void ContactRpcSortGroupReply::set_groupids(int index, ::google::protobuf::int32 value) {
  groupids_.Set(index, value);
}
inline void ContactRpcSortGroupReply::add_groupids(::google::protobuf::int32 value) {
  groupids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ContactRpcSortGroupReply::groupids() const {
  return groupids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ContactRpcSortGroupReply::mutable_groupids() {
  return &groupids_;
}

// -------------------------------------------------------------------

// ContactRpcSetFriendAliasAsk

// optional string Name = 1;
inline bool ContactRpcSetFriendAliasAsk::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSetFriendAliasAsk::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSetFriendAliasAsk::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSetFriendAliasAsk::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ContactRpcSetFriendAliasAsk::name() const {
  return *name_;
}
inline void ContactRpcSetFriendAliasAsk::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ContactRpcSetFriendAliasAsk::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ContactRpcSetFriendAliasAsk::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ContactRpcSetFriendAliasAsk::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ContactRpcSetFriendAliasAsk::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ContactRpcSetFriendAliasAsk::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcSetFriendAliasAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcSetFriendAliasAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcSetFriendAliasAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcSetFriendAliasAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcSetFriendAliasAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcSetFriendAliasAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcSetFriendAliasReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSetFriendAliasReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSetFriendAliasReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSetFriendAliasReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSetFriendAliasReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSetFriendAliasReply::result() const {
  return result_;
}
inline void ContactRpcSetFriendAliasReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .ContactData Contact = 2;
inline bool ContactRpcSetFriendAliasReply::has_contact() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcSetFriendAliasReply::set_has_contact() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcSetFriendAliasReply::clear_has_contact() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcSetFriendAliasReply::clear_contact() {
  if (contact_ != NULL) contact_->::ContactData::Clear();
  clear_has_contact();
}
inline const ::ContactData& ContactRpcSetFriendAliasReply::contact() const {
  return contact_ != NULL ? *contact_ : *default_instance_->contact_;
}
inline ::ContactData* ContactRpcSetFriendAliasReply::mutable_contact() {
  set_has_contact();
  if (contact_ == NULL) contact_ = new ::ContactData;
  return contact_;
}
inline ::ContactData* ContactRpcSetFriendAliasReply::release_contact() {
  clear_has_contact();
  ::ContactData* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline void ContactRpcSetFriendAliasReply::set_allocated_contact(::ContactData* contact) {
  delete contact_;
  contact_ = contact;
  if (contact) {
    set_has_contact();
  } else {
    clear_has_contact();
  }
}

// -------------------------------------------------------------------

// ContactRpcSendFriendGiftPointAsk

// optional uint64 SendRoleId = 1 [default = 0];
inline bool ContactRpcSendFriendGiftPointAsk::has_sendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSendFriendGiftPointAsk::set_has_sendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSendFriendGiftPointAsk::clear_has_sendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSendFriendGiftPointAsk::clear_sendroleid() {
  sendroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_sendroleid();
}
inline ::google::protobuf::uint64 ContactRpcSendFriendGiftPointAsk::sendroleid() const {
  return sendroleid_;
}
inline void ContactRpcSendFriendGiftPointAsk::set_sendroleid(::google::protobuf::uint64 value) {
  set_has_sendroleid();
  sendroleid_ = value;
}

// optional int32 Point = 2 [default = -1];
inline bool ContactRpcSendFriendGiftPointAsk::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcSendFriendGiftPointAsk::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcSendFriendGiftPointAsk::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcSendFriendGiftPointAsk::clear_point() {
  point_ = -1;
  clear_has_point();
}
inline ::google::protobuf::int32 ContactRpcSendFriendGiftPointAsk::point() const {
  return point_;
}
inline void ContactRpcSendFriendGiftPointAsk::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// ContactRpcSendFriendGiftPointReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSendFriendGiftPointReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSendFriendGiftPointReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSendFriendGiftPointReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSendFriendGiftPointReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSendFriendGiftPointReply::result() const {
  return result_;
}
inline void ContactRpcSendFriendGiftPointReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .FriendGiftPoint SentGiftList = 2;
inline int ContactRpcSendFriendGiftPointReply::sentgiftlist_size() const {
  return sentgiftlist_.size();
}
inline void ContactRpcSendFriendGiftPointReply::clear_sentgiftlist() {
  sentgiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcSendFriendGiftPointReply::sentgiftlist(int index) const {
  return sentgiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcSendFriendGiftPointReply::mutable_sentgiftlist(int index) {
  return sentgiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcSendFriendGiftPointReply::add_sentgiftlist() {
  return sentgiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcSendFriendGiftPointReply::sentgiftlist() const {
  return sentgiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcSendFriendGiftPointReply::mutable_sentgiftlist() {
  return &sentgiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcAcquireGiftPointAsk

// optional uint64 AcquireRoleId = 1 [default = 0];
inline bool ContactRpcAcquireGiftPointAsk::has_acquireroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAcquireGiftPointAsk::set_has_acquireroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAcquireGiftPointAsk::clear_has_acquireroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAcquireGiftPointAsk::clear_acquireroleid() {
  acquireroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_acquireroleid();
}
inline ::google::protobuf::uint64 ContactRpcAcquireGiftPointAsk::acquireroleid() const {
  return acquireroleid_;
}
inline void ContactRpcAcquireGiftPointAsk::set_acquireroleid(::google::protobuf::uint64 value) {
  set_has_acquireroleid();
  acquireroleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcAcquireGiftPointReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAcquireGiftPointReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAcquireGiftPointReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAcquireGiftPointReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAcquireGiftPointReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAcquireGiftPointReply::result() const {
  return result_;
}
inline void ContactRpcAcquireGiftPointReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .FriendGiftPoint AcquireGiftList = 2;
inline int ContactRpcAcquireGiftPointReply::acquiregiftlist_size() const {
  return acquiregiftlist_.size();
}
inline void ContactRpcAcquireGiftPointReply::clear_acquiregiftlist() {
  acquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcAcquireGiftPointReply::acquiregiftlist(int index) const {
  return acquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireGiftPointReply::mutable_acquiregiftlist(int index) {
  return acquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireGiftPointReply::add_acquiregiftlist() {
  return acquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcAcquireGiftPointReply::acquiregiftlist() const {
  return acquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcAcquireGiftPointReply::mutable_acquiregiftlist() {
  return &acquiregiftlist_;
}

// repeated .FriendGiftPoint UnAcquireGiftList = 3;
inline int ContactRpcAcquireGiftPointReply::unacquiregiftlist_size() const {
  return unacquiregiftlist_.size();
}
inline void ContactRpcAcquireGiftPointReply::clear_unacquiregiftlist() {
  unacquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcAcquireGiftPointReply::unacquiregiftlist(int index) const {
  return unacquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireGiftPointReply::mutable_unacquiregiftlist(int index) {
  return unacquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireGiftPointReply::add_unacquiregiftlist() {
  return unacquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcAcquireGiftPointReply::unacquiregiftlist() const {
  return unacquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcAcquireGiftPointReply::mutable_unacquiregiftlist() {
  return &unacquiregiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcUnAcquireGiftPointNotify

// repeated .FriendGiftPoint UnAcquireGiftList = 1;
inline int ContactRpcUnAcquireGiftPointNotify::unacquiregiftlist_size() const {
  return unacquiregiftlist_.size();
}
inline void ContactRpcUnAcquireGiftPointNotify::clear_unacquiregiftlist() {
  unacquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcUnAcquireGiftPointNotify::unacquiregiftlist(int index) const {
  return unacquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcUnAcquireGiftPointNotify::mutable_unacquiregiftlist(int index) {
  return unacquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcUnAcquireGiftPointNotify::add_unacquiregiftlist() {
  return unacquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcUnAcquireGiftPointNotify::unacquiregiftlist() const {
  return unacquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcUnAcquireGiftPointNotify::mutable_unacquiregiftlist() {
  return &unacquiregiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcSendAllFriendGiftPointAsk

// -------------------------------------------------------------------

// ContactRpcSendAllFriendGiftPointReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcSendAllFriendGiftPointReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcSendAllFriendGiftPointReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcSendAllFriendGiftPointReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcSendAllFriendGiftPointReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcSendAllFriendGiftPointReply::result() const {
  return result_;
}
inline void ContactRpcSendAllFriendGiftPointReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .FriendGiftPoint SentGiftList = 2;
inline int ContactRpcSendAllFriendGiftPointReply::sentgiftlist_size() const {
  return sentgiftlist_.size();
}
inline void ContactRpcSendAllFriendGiftPointReply::clear_sentgiftlist() {
  sentgiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcSendAllFriendGiftPointReply::sentgiftlist(int index) const {
  return sentgiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcSendAllFriendGiftPointReply::mutable_sentgiftlist(int index) {
  return sentgiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcSendAllFriendGiftPointReply::add_sentgiftlist() {
  return sentgiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcSendAllFriendGiftPointReply::sentgiftlist() const {
  return sentgiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcSendAllFriendGiftPointReply::mutable_sentgiftlist() {
  return &sentgiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcAcquireAllGiftPointAsk

// -------------------------------------------------------------------

// ContactRpcAcquireAllGiftPointReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAcquireAllGiftPointReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAcquireAllGiftPointReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAcquireAllGiftPointReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAcquireAllGiftPointReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAcquireAllGiftPointReply::result() const {
  return result_;
}
inline void ContactRpcAcquireAllGiftPointReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .FriendGiftPoint AcquireGiftList = 2;
inline int ContactRpcAcquireAllGiftPointReply::acquiregiftlist_size() const {
  return acquiregiftlist_.size();
}
inline void ContactRpcAcquireAllGiftPointReply::clear_acquiregiftlist() {
  acquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcAcquireAllGiftPointReply::acquiregiftlist(int index) const {
  return acquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireAllGiftPointReply::mutable_acquiregiftlist(int index) {
  return acquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireAllGiftPointReply::add_acquiregiftlist() {
  return acquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcAcquireAllGiftPointReply::acquiregiftlist() const {
  return acquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcAcquireAllGiftPointReply::mutable_acquiregiftlist() {
  return &acquiregiftlist_;
}

// repeated .FriendGiftPoint UnAcquireGiftList = 3;
inline int ContactRpcAcquireAllGiftPointReply::unacquiregiftlist_size() const {
  return unacquiregiftlist_.size();
}
inline void ContactRpcAcquireAllGiftPointReply::clear_unacquiregiftlist() {
  unacquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcAcquireAllGiftPointReply::unacquiregiftlist(int index) const {
  return unacquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireAllGiftPointReply::mutable_unacquiregiftlist(int index) {
  return unacquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcAcquireAllGiftPointReply::add_unacquiregiftlist() {
  return unacquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcAcquireAllGiftPointReply::unacquiregiftlist() const {
  return unacquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcAcquireAllGiftPointReply::mutable_unacquiregiftlist() {
  return &unacquiregiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcDeleteGroupRoleAsk

// optional int32 GroupId = 1 [default = -1];
inline bool ContactRpcDeleteGroupRoleAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcDeleteGroupRoleAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcDeleteGroupRoleAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcDeleteGroupRoleAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
inline ::google::protobuf::int32 ContactRpcDeleteGroupRoleAsk::groupid() const {
  return groupid_;
}
inline void ContactRpcDeleteGroupRoleAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcDeleteGroupRoleAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcDeleteGroupRoleAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcDeleteGroupRoleAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcDeleteGroupRoleAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcDeleteGroupRoleAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcDeleteGroupRoleAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcDeleteGroupRoleReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcDeleteGroupRoleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcDeleteGroupRoleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcDeleteGroupRoleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcDeleteGroupRoleReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcDeleteGroupRoleReply::result() const {
  return result_;
}
inline void ContactRpcDeleteGroupRoleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactGroup ContactGroups = 3;
inline int ContactRpcDeleteGroupRoleReply::contactgroups_size() const {
  return contactgroups_.size();
}
inline void ContactRpcDeleteGroupRoleReply::clear_contactgroups() {
  contactgroups_.Clear();
}
inline const ::ContactGroup& ContactRpcDeleteGroupRoleReply::contactgroups(int index) const {
  return contactgroups_.Get(index);
}
inline ::ContactGroup* ContactRpcDeleteGroupRoleReply::mutable_contactgroups(int index) {
  return contactgroups_.Mutable(index);
}
inline ::ContactGroup* ContactRpcDeleteGroupRoleReply::add_contactgroups() {
  return contactgroups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcDeleteGroupRoleReply::contactgroups() const {
  return contactgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcDeleteGroupRoleReply::mutable_contactgroups() {
  return &contactgroups_;
}

// -------------------------------------------------------------------

// ContactRpcAddRoleDataNotify

// optional .ContactData NewRoleData = 1;
inline bool ContactRpcAddRoleDataNotify::has_newroledata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAddRoleDataNotify::set_has_newroledata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAddRoleDataNotify::clear_has_newroledata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAddRoleDataNotify::clear_newroledata() {
  if (newroledata_ != NULL) newroledata_->::ContactData::Clear();
  clear_has_newroledata();
}
inline const ::ContactData& ContactRpcAddRoleDataNotify::newroledata() const {
  return newroledata_ != NULL ? *newroledata_ : *default_instance_->newroledata_;
}
inline ::ContactData* ContactRpcAddRoleDataNotify::mutable_newroledata() {
  set_has_newroledata();
  if (newroledata_ == NULL) newroledata_ = new ::ContactData;
  return newroledata_;
}
inline ::ContactData* ContactRpcAddRoleDataNotify::release_newroledata() {
  clear_has_newroledata();
  ::ContactData* temp = newroledata_;
  newroledata_ = NULL;
  return temp;
}
inline void ContactRpcAddRoleDataNotify::set_allocated_newroledata(::ContactData* newroledata) {
  delete newroledata_;
  newroledata_ = newroledata;
  if (newroledata) {
    set_has_newroledata();
  } else {
    clear_has_newroledata();
  }
}

// -------------------------------------------------------------------

// ContactRpcSetGiftPointNotify

// repeated .FriendGiftPoint AcquireGiftList = 1;
inline int ContactRpcSetGiftPointNotify::acquiregiftlist_size() const {
  return acquiregiftlist_.size();
}
inline void ContactRpcSetGiftPointNotify::clear_acquiregiftlist() {
  acquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcSetGiftPointNotify::acquiregiftlist(int index) const {
  return acquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::mutable_acquiregiftlist(int index) {
  return acquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::add_acquiregiftlist() {
  return acquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcSetGiftPointNotify::acquiregiftlist() const {
  return acquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcSetGiftPointNotify::mutable_acquiregiftlist() {
  return &acquiregiftlist_;
}

// repeated .FriendGiftPoint UnAcquireGiftList = 2;
inline int ContactRpcSetGiftPointNotify::unacquiregiftlist_size() const {
  return unacquiregiftlist_.size();
}
inline void ContactRpcSetGiftPointNotify::clear_unacquiregiftlist() {
  unacquiregiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcSetGiftPointNotify::unacquiregiftlist(int index) const {
  return unacquiregiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::mutable_unacquiregiftlist(int index) {
  return unacquiregiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::add_unacquiregiftlist() {
  return unacquiregiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcSetGiftPointNotify::unacquiregiftlist() const {
  return unacquiregiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcSetGiftPointNotify::mutable_unacquiregiftlist() {
  return &unacquiregiftlist_;
}

// repeated .FriendGiftPoint SentGiftList = 3;
inline int ContactRpcSetGiftPointNotify::sentgiftlist_size() const {
  return sentgiftlist_.size();
}
inline void ContactRpcSetGiftPointNotify::clear_sentgiftlist() {
  sentgiftlist_.Clear();
}
inline const ::FriendGiftPoint& ContactRpcSetGiftPointNotify::sentgiftlist(int index) const {
  return sentgiftlist_.Get(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::mutable_sentgiftlist(int index) {
  return sentgiftlist_.Mutable(index);
}
inline ::FriendGiftPoint* ContactRpcSetGiftPointNotify::add_sentgiftlist() {
  return sentgiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >&
ContactRpcSetGiftPointNotify::sentgiftlist() const {
  return sentgiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendGiftPoint >*
ContactRpcSetGiftPointNotify::mutable_sentgiftlist() {
  return &sentgiftlist_;
}

// -------------------------------------------------------------------

// ContactRpcContactsGroupsNotify

// repeated .ContactGroup MyFriendGroup = 1;
inline int ContactRpcContactsGroupsNotify::myfriendgroup_size() const {
  return myfriendgroup_.size();
}
inline void ContactRpcContactsGroupsNotify::clear_myfriendgroup() {
  myfriendgroup_.Clear();
}
inline const ::ContactGroup& ContactRpcContactsGroupsNotify::myfriendgroup(int index) const {
  return myfriendgroup_.Get(index);
}
inline ::ContactGroup* ContactRpcContactsGroupsNotify::mutable_myfriendgroup(int index) {
  return myfriendgroup_.Mutable(index);
}
inline ::ContactGroup* ContactRpcContactsGroupsNotify::add_myfriendgroup() {
  return myfriendgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcContactsGroupsNotify::myfriendgroup() const {
  return myfriendgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcContactsGroupsNotify::mutable_myfriendgroup() {
  return &myfriendgroup_;
}

// -------------------------------------------------------------------

// ContactRpcAgreeAllApplicationAsk

// -------------------------------------------------------------------

// ContactRpcAgreeAllApplicationReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcAgreeAllApplicationReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcAgreeAllApplicationReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcAgreeAllApplicationReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcAgreeAllApplicationReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcAgreeAllApplicationReply::result() const {
  return result_;
}
inline void ContactRpcAgreeAllApplicationReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ContactData NewFriendData = 2;
inline int ContactRpcAgreeAllApplicationReply::newfrienddata_size() const {
  return newfrienddata_.size();
}
inline void ContactRpcAgreeAllApplicationReply::clear_newfrienddata() {
  newfrienddata_.Clear();
}
inline const ::ContactData& ContactRpcAgreeAllApplicationReply::newfrienddata(int index) const {
  return newfrienddata_.Get(index);
}
inline ::ContactData* ContactRpcAgreeAllApplicationReply::mutable_newfrienddata(int index) {
  return newfrienddata_.Mutable(index);
}
inline ::ContactData* ContactRpcAgreeAllApplicationReply::add_newfrienddata() {
  return newfrienddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactData >&
ContactRpcAgreeAllApplicationReply::newfrienddata() const {
  return newfrienddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactData >*
ContactRpcAgreeAllApplicationReply::mutable_newfrienddata() {
  return &newfrienddata_;
}

// repeated .ContactGroup MyFriendGroup = 3;
inline int ContactRpcAgreeAllApplicationReply::myfriendgroup_size() const {
  return myfriendgroup_.size();
}
inline void ContactRpcAgreeAllApplicationReply::clear_myfriendgroup() {
  myfriendgroup_.Clear();
}
inline const ::ContactGroup& ContactRpcAgreeAllApplicationReply::myfriendgroup(int index) const {
  return myfriendgroup_.Get(index);
}
inline ::ContactGroup* ContactRpcAgreeAllApplicationReply::mutable_myfriendgroup(int index) {
  return myfriendgroup_.Mutable(index);
}
inline ::ContactGroup* ContactRpcAgreeAllApplicationReply::add_myfriendgroup() {
  return myfriendgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ContactGroup >&
ContactRpcAgreeAllApplicationReply::myfriendgroup() const {
  return myfriendgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::ContactGroup >*
ContactRpcAgreeAllApplicationReply::mutable_myfriendgroup() {
  return &myfriendgroup_;
}

// -------------------------------------------------------------------

// ContactRpcChatToAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcChatToAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcChatToAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcChatToAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcChatToAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcChatToAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcChatToAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .ChatMsg ChatMsg = 2;
inline bool ContactRpcChatToAsk::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcChatToAsk::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcChatToAsk::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcChatToAsk::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatMsg::Clear();
  clear_has_chatmsg();
}
inline const ::ChatMsg& ContactRpcChatToAsk::chatmsg() const {
  return chatmsg_ != NULL ? *chatmsg_ : *default_instance_->chatmsg_;
}
inline ::ChatMsg* ContactRpcChatToAsk::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) chatmsg_ = new ::ChatMsg;
  return chatmsg_;
}
inline ::ChatMsg* ContactRpcChatToAsk::release_chatmsg() {
  clear_has_chatmsg();
  ::ChatMsg* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
inline void ContactRpcChatToAsk::set_allocated_chatmsg(::ChatMsg* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
}

// -------------------------------------------------------------------

// ContactRpcChatToReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcChatToReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcChatToReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcChatToReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcChatToReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcChatToReply::result() const {
  return result_;
}
inline void ContactRpcChatToReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ContactRpcNewChatMsgNotify

// optional .ChatInfo ChatMsg = 1;
inline bool ContactRpcNewChatMsgNotify::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcNewChatMsgNotify::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcNewChatMsgNotify::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcNewChatMsgNotify::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatInfo::Clear();
  clear_has_chatmsg();
}
inline const ::ChatInfo& ContactRpcNewChatMsgNotify::chatmsg() const {
  return chatmsg_ != NULL ? *chatmsg_ : *default_instance_->chatmsg_;
}
inline ::ChatInfo* ContactRpcNewChatMsgNotify::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) chatmsg_ = new ::ChatInfo;
  return chatmsg_;
}
inline ::ChatInfo* ContactRpcNewChatMsgNotify::release_chatmsg() {
  clear_has_chatmsg();
  ::ChatInfo* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
inline void ContactRpcNewChatMsgNotify::set_allocated_chatmsg(::ChatInfo* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
}

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcNewChatMsgNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcNewChatMsgNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcNewChatMsgNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcNewChatMsgNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcNewChatMsgNotify::roleid() const {
  return roleid_;
}
inline void ContactRpcNewChatMsgNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcReadMsgAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool ContactRpcReadMsgAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcReadMsgAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcReadMsgAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcReadMsgAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcReadMsgAsk::roleid() const {
  return roleid_;
}
inline void ContactRpcReadMsgAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// ContactRpcReadMsgReply

// optional int32 Result = 1 [default = -1];
inline bool ContactRpcReadMsgReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactRpcReadMsgReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactRpcReadMsgReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactRpcReadMsgReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ContactRpcReadMsgReply::result() const {
  return result_;
}
inline void ContactRpcReadMsgReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool ContactRpcReadMsgReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactRpcReadMsgReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactRpcReadMsgReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactRpcReadMsgReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 ContactRpcReadMsgReply::roleid() const {
  return roleid_;
}
inline void ContactRpcReadMsgReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ContactRpc_2eproto__INCLUDED
