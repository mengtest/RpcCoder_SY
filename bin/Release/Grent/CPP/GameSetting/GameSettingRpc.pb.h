// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameSettingRpc.proto

#ifndef PROTOBUF_GameSettingRpc_2eproto__INCLUDED
#define PROTOBUF_GameSettingRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameSettingRpc_2eproto();
void protobuf_AssignDesc_GameSettingRpc_2eproto();
void protobuf_ShutdownFile_GameSettingRpc_2eproto();

class GameSettingRpcSyncGameSettingAsk;
class GameSettingRpcSyncGameSettingReply;
class GameSettingRpcSettingAsk;
class GameSettingRpcSettingReply;
class GameSettingRpcGameSettingNotifyNotify;

// ===================================================================

class GameSettingRpcSyncGameSettingAsk : public ::google::protobuf::Message {
 public:
  GameSettingRpcSyncGameSettingAsk();
  virtual ~GameSettingRpcSyncGameSettingAsk();

  GameSettingRpcSyncGameSettingAsk(const GameSettingRpcSyncGameSettingAsk& from);

  inline GameSettingRpcSyncGameSettingAsk& operator=(const GameSettingRpcSyncGameSettingAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettingRpcSyncGameSettingAsk& default_instance();

  void Swap(GameSettingRpcSyncGameSettingAsk* other);

  // implements Message ----------------------------------------------

  GameSettingRpcSyncGameSettingAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSettingRpcSyncGameSettingAsk& from);
  void MergeFrom(const GameSettingRpcSyncGameSettingAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameSettingRpcSyncGameSettingAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameSettingRpc_2eproto();
  friend void protobuf_AssignDesc_GameSettingRpc_2eproto();
  friend void protobuf_ShutdownFile_GameSettingRpc_2eproto();

  void InitAsDefaultInstance();
  static GameSettingRpcSyncGameSettingAsk* default_instance_;
};
// -------------------------------------------------------------------

class GameSettingRpcSyncGameSettingReply : public ::google::protobuf::Message {
 public:
  GameSettingRpcSyncGameSettingReply();
  virtual ~GameSettingRpcSyncGameSettingReply();

  GameSettingRpcSyncGameSettingReply(const GameSettingRpcSyncGameSettingReply& from);

  inline GameSettingRpcSyncGameSettingReply& operator=(const GameSettingRpcSyncGameSettingReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettingRpcSyncGameSettingReply& default_instance();

  void Swap(GameSettingRpcSyncGameSettingReply* other);

  // implements Message ----------------------------------------------

  GameSettingRpcSyncGameSettingReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSettingRpcSyncGameSettingReply& from);
  void MergeFrom(const GameSettingRpcSyncGameSettingReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string GameSetting = 2;
  inline bool has_gamesetting() const;
  inline void clear_gamesetting();
  static const int kGameSettingFieldNumber = 2;
  inline const ::std::string& gamesetting() const;
  inline void set_gamesetting(const ::std::string& value);
  inline void set_gamesetting(const char* value);
  inline void set_gamesetting(const char* value, size_t size);
  inline ::std::string* mutable_gamesetting();
  inline ::std::string* release_gamesetting();
  inline void set_allocated_gamesetting(::std::string* gamesetting);

  // @@protoc_insertion_point(class_scope:GameSettingRpcSyncGameSettingReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gamesetting();
  inline void clear_has_gamesetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gamesetting_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameSettingRpc_2eproto();
  friend void protobuf_AssignDesc_GameSettingRpc_2eproto();
  friend void protobuf_ShutdownFile_GameSettingRpc_2eproto();

  void InitAsDefaultInstance();
  static GameSettingRpcSyncGameSettingReply* default_instance_;
};
// -------------------------------------------------------------------

class GameSettingRpcSettingAsk : public ::google::protobuf::Message {
 public:
  GameSettingRpcSettingAsk();
  virtual ~GameSettingRpcSettingAsk();

  GameSettingRpcSettingAsk(const GameSettingRpcSettingAsk& from);

  inline GameSettingRpcSettingAsk& operator=(const GameSettingRpcSettingAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettingRpcSettingAsk& default_instance();

  void Swap(GameSettingRpcSettingAsk* other);

  // implements Message ----------------------------------------------

  GameSettingRpcSettingAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSettingRpcSettingAsk& from);
  void MergeFrom(const GameSettingRpcSettingAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GameSetting = 1;
  inline bool has_gamesetting() const;
  inline void clear_gamesetting();
  static const int kGameSettingFieldNumber = 1;
  inline const ::std::string& gamesetting() const;
  inline void set_gamesetting(const ::std::string& value);
  inline void set_gamesetting(const char* value);
  inline void set_gamesetting(const char* value, size_t size);
  inline ::std::string* mutable_gamesetting();
  inline ::std::string* release_gamesetting();
  inline void set_allocated_gamesetting(::std::string* gamesetting);

  // @@protoc_insertion_point(class_scope:GameSettingRpcSettingAsk)
 private:
  inline void set_has_gamesetting();
  inline void clear_has_gamesetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gamesetting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameSettingRpc_2eproto();
  friend void protobuf_AssignDesc_GameSettingRpc_2eproto();
  friend void protobuf_ShutdownFile_GameSettingRpc_2eproto();

  void InitAsDefaultInstance();
  static GameSettingRpcSettingAsk* default_instance_;
};
// -------------------------------------------------------------------

class GameSettingRpcSettingReply : public ::google::protobuf::Message {
 public:
  GameSettingRpcSettingReply();
  virtual ~GameSettingRpcSettingReply();

  GameSettingRpcSettingReply(const GameSettingRpcSettingReply& from);

  inline GameSettingRpcSettingReply& operator=(const GameSettingRpcSettingReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettingRpcSettingReply& default_instance();

  void Swap(GameSettingRpcSettingReply* other);

  // implements Message ----------------------------------------------

  GameSettingRpcSettingReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSettingRpcSettingReply& from);
  void MergeFrom(const GameSettingRpcSettingReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameSettingRpcSettingReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameSettingRpc_2eproto();
  friend void protobuf_AssignDesc_GameSettingRpc_2eproto();
  friend void protobuf_ShutdownFile_GameSettingRpc_2eproto();

  void InitAsDefaultInstance();
  static GameSettingRpcSettingReply* default_instance_;
};
// -------------------------------------------------------------------

class GameSettingRpcGameSettingNotifyNotify : public ::google::protobuf::Message {
 public:
  GameSettingRpcGameSettingNotifyNotify();
  virtual ~GameSettingRpcGameSettingNotifyNotify();

  GameSettingRpcGameSettingNotifyNotify(const GameSettingRpcGameSettingNotifyNotify& from);

  inline GameSettingRpcGameSettingNotifyNotify& operator=(const GameSettingRpcGameSettingNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettingRpcGameSettingNotifyNotify& default_instance();

  void Swap(GameSettingRpcGameSettingNotifyNotify* other);

  // implements Message ----------------------------------------------

  GameSettingRpcGameSettingNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSettingRpcGameSettingNotifyNotify& from);
  void MergeFrom(const GameSettingRpcGameSettingNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GameSetting = 1;
  inline bool has_gamesetting() const;
  inline void clear_gamesetting();
  static const int kGameSettingFieldNumber = 1;
  inline const ::std::string& gamesetting() const;
  inline void set_gamesetting(const ::std::string& value);
  inline void set_gamesetting(const char* value);
  inline void set_gamesetting(const char* value, size_t size);
  inline ::std::string* mutable_gamesetting();
  inline ::std::string* release_gamesetting();
  inline void set_allocated_gamesetting(::std::string* gamesetting);

  // @@protoc_insertion_point(class_scope:GameSettingRpcGameSettingNotifyNotify)
 private:
  inline void set_has_gamesetting();
  inline void clear_has_gamesetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gamesetting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameSettingRpc_2eproto();
  friend void protobuf_AssignDesc_GameSettingRpc_2eproto();
  friend void protobuf_ShutdownFile_GameSettingRpc_2eproto();

  void InitAsDefaultInstance();
  static GameSettingRpcGameSettingNotifyNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// GameSettingRpcSyncGameSettingAsk

// -------------------------------------------------------------------

// GameSettingRpcSyncGameSettingReply

// optional int32 Result = 1 [default = -1];
inline bool GameSettingRpcSyncGameSettingReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSettingRpcSyncGameSettingReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSettingRpcSyncGameSettingReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSettingRpcSyncGameSettingReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 GameSettingRpcSyncGameSettingReply::result() const {
  return result_;
}
inline void GameSettingRpcSyncGameSettingReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string GameSetting = 2;
inline bool GameSettingRpcSyncGameSettingReply::has_gamesetting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameSettingRpcSyncGameSettingReply::set_has_gamesetting() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameSettingRpcSyncGameSettingReply::clear_has_gamesetting() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameSettingRpcSyncGameSettingReply::clear_gamesetting() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    gamesetting_->clear();
  }
  clear_has_gamesetting();
}
inline const ::std::string& GameSettingRpcSyncGameSettingReply::gamesetting() const {
  return *gamesetting_;
}
inline void GameSettingRpcSyncGameSettingReply::set_gamesetting(const ::std::string& value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcSyncGameSettingReply::set_gamesetting(const char* value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcSyncGameSettingReply::set_gamesetting(const char* value, size_t size) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameSettingRpcSyncGameSettingReply::mutable_gamesetting() {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  return gamesetting_;
}
inline ::std::string* GameSettingRpcSyncGameSettingReply::release_gamesetting() {
  clear_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gamesetting_;
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameSettingRpcSyncGameSettingReply::set_allocated_gamesetting(::std::string* gamesetting) {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (gamesetting) {
    set_has_gamesetting();
    gamesetting_ = gamesetting;
  } else {
    clear_has_gamesetting();
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GameSettingRpcSettingAsk

// optional string GameSetting = 1;
inline bool GameSettingRpcSettingAsk::has_gamesetting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSettingRpcSettingAsk::set_has_gamesetting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSettingRpcSettingAsk::clear_has_gamesetting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSettingRpcSettingAsk::clear_gamesetting() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    gamesetting_->clear();
  }
  clear_has_gamesetting();
}
inline const ::std::string& GameSettingRpcSettingAsk::gamesetting() const {
  return *gamesetting_;
}
inline void GameSettingRpcSettingAsk::set_gamesetting(const ::std::string& value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcSettingAsk::set_gamesetting(const char* value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcSettingAsk::set_gamesetting(const char* value, size_t size) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameSettingRpcSettingAsk::mutable_gamesetting() {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  return gamesetting_;
}
inline ::std::string* GameSettingRpcSettingAsk::release_gamesetting() {
  clear_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gamesetting_;
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameSettingRpcSettingAsk::set_allocated_gamesetting(::std::string* gamesetting) {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (gamesetting) {
    set_has_gamesetting();
    gamesetting_ = gamesetting;
  } else {
    clear_has_gamesetting();
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GameSettingRpcSettingReply

// optional int32 Result = 1 [default = -1];
inline bool GameSettingRpcSettingReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSettingRpcSettingReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSettingRpcSettingReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSettingRpcSettingReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 GameSettingRpcSettingReply::result() const {
  return result_;
}
inline void GameSettingRpcSettingReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GameSettingRpcGameSettingNotifyNotify

// optional string GameSetting = 1;
inline bool GameSettingRpcGameSettingNotifyNotify::has_gamesetting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSettingRpcGameSettingNotifyNotify::set_has_gamesetting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSettingRpcGameSettingNotifyNotify::clear_has_gamesetting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSettingRpcGameSettingNotifyNotify::clear_gamesetting() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    gamesetting_->clear();
  }
  clear_has_gamesetting();
}
inline const ::std::string& GameSettingRpcGameSettingNotifyNotify::gamesetting() const {
  return *gamesetting_;
}
inline void GameSettingRpcGameSettingNotifyNotify::set_gamesetting(const ::std::string& value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcGameSettingNotifyNotify::set_gamesetting(const char* value) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(value);
}
inline void GameSettingRpcGameSettingNotifyNotify::set_gamesetting(const char* value, size_t size) {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  gamesetting_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameSettingRpcGameSettingNotifyNotify::mutable_gamesetting() {
  set_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    gamesetting_ = new ::std::string;
  }
  return gamesetting_;
}
inline ::std::string* GameSettingRpcGameSettingNotifyNotify::release_gamesetting() {
  clear_has_gamesetting();
  if (gamesetting_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gamesetting_;
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameSettingRpcGameSettingNotifyNotify::set_allocated_gamesetting(::std::string* gamesetting) {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (gamesetting) {
    set_has_gamesetting();
    gamesetting_ = gamesetting;
  } else {
    clear_has_gamesetting();
    gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameSettingRpc_2eproto__INCLUDED
