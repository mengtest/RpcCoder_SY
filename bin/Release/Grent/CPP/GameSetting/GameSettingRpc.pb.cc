// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameSettingRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GameSettingRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GameSettingRpcSyncGameSettingAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameSettingRpcSyncGameSettingAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameSettingRpcSyncGameSettingReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameSettingRpcSyncGameSettingReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameSettingRpcSettingAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameSettingRpcSettingAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameSettingRpcSettingReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameSettingRpcSettingReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameSettingRpcGameSettingNotifyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameSettingRpcGameSettingNotifyNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GameSettingRpc_2eproto() {
  protobuf_AddDesc_GameSettingRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GameSettingRpc.proto");
  GOOGLE_CHECK(file != NULL);
  GameSettingRpcSyncGameSettingAsk_descriptor_ = file->message_type(0);
  static const int GameSettingRpcSyncGameSettingAsk_offsets_[1] = {
  };
  GameSettingRpcSyncGameSettingAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameSettingRpcSyncGameSettingAsk_descriptor_,
      GameSettingRpcSyncGameSettingAsk::default_instance_,
      GameSettingRpcSyncGameSettingAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameSettingRpcSyncGameSettingAsk));
  GameSettingRpcSyncGameSettingReply_descriptor_ = file->message_type(1);
  static const int GameSettingRpcSyncGameSettingReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingReply, gamesetting_),
  };
  GameSettingRpcSyncGameSettingReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameSettingRpcSyncGameSettingReply_descriptor_,
      GameSettingRpcSyncGameSettingReply::default_instance_,
      GameSettingRpcSyncGameSettingReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSyncGameSettingReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameSettingRpcSyncGameSettingReply));
  GameSettingRpcSettingAsk_descriptor_ = file->message_type(2);
  static const int GameSettingRpcSettingAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingAsk, gamesetting_),
  };
  GameSettingRpcSettingAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameSettingRpcSettingAsk_descriptor_,
      GameSettingRpcSettingAsk::default_instance_,
      GameSettingRpcSettingAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameSettingRpcSettingAsk));
  GameSettingRpcSettingReply_descriptor_ = file->message_type(3);
  static const int GameSettingRpcSettingReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingReply, result_),
  };
  GameSettingRpcSettingReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameSettingRpcSettingReply_descriptor_,
      GameSettingRpcSettingReply::default_instance_,
      GameSettingRpcSettingReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcSettingReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameSettingRpcSettingReply));
  GameSettingRpcGameSettingNotifyNotify_descriptor_ = file->message_type(4);
  static const int GameSettingRpcGameSettingNotifyNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcGameSettingNotifyNotify, gamesetting_),
  };
  GameSettingRpcGameSettingNotifyNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GameSettingRpcGameSettingNotifyNotify_descriptor_,
      GameSettingRpcGameSettingNotifyNotify::default_instance_,
      GameSettingRpcGameSettingNotifyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcGameSettingNotifyNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameSettingRpcGameSettingNotifyNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GameSettingRpcGameSettingNotifyNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GameSettingRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameSettingRpcSyncGameSettingAsk_descriptor_, &GameSettingRpcSyncGameSettingAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameSettingRpcSyncGameSettingReply_descriptor_, &GameSettingRpcSyncGameSettingReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameSettingRpcSettingAsk_descriptor_, &GameSettingRpcSettingAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameSettingRpcSettingReply_descriptor_, &GameSettingRpcSettingReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GameSettingRpcGameSettingNotifyNotify_descriptor_, &GameSettingRpcGameSettingNotifyNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GameSettingRpc_2eproto() {
  delete GameSettingRpcSyncGameSettingAsk::default_instance_;
  delete GameSettingRpcSyncGameSettingAsk_reflection_;
  delete GameSettingRpcSyncGameSettingReply::default_instance_;
  delete GameSettingRpcSyncGameSettingReply_reflection_;
  delete GameSettingRpcSettingAsk::default_instance_;
  delete GameSettingRpcSettingAsk_reflection_;
  delete GameSettingRpcSettingReply::default_instance_;
  delete GameSettingRpcSettingReply_reflection_;
  delete GameSettingRpcGameSettingNotifyNotify::default_instance_;
  delete GameSettingRpcGameSettingNotifyNotify_reflection_;
}

void protobuf_AddDesc_GameSettingRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024GameSettingRpc.proto\032\022PublicStruct.pro"
    "to\"\"\n GameSettingRpcSyncGameSettingAsk\"M"
    "\n\"GameSettingRpcSyncGameSettingReply\022\022\n\006"
    "Result\030\001 \001(\005:\002-1\022\023\n\013GameSetting\030\002 \001(\t\"/\n"
    "\030GameSettingRpcSettingAsk\022\023\n\013GameSetting"
    "\030\001 \001(\t\"0\n\032GameSettingRpcSettingReply\022\022\n\006"
    "Result\030\001 \001(\005:\002-1\"<\n%GameSettingRpcGameSe"
    "ttingNotifyNotify\022\023\n\013GameSetting\030\001 \001(\t", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameSettingRpc.proto", &protobuf_RegisterTypes);
  GameSettingRpcSyncGameSettingAsk::default_instance_ = new GameSettingRpcSyncGameSettingAsk();
  GameSettingRpcSyncGameSettingReply::default_instance_ = new GameSettingRpcSyncGameSettingReply();
  GameSettingRpcSettingAsk::default_instance_ = new GameSettingRpcSettingAsk();
  GameSettingRpcSettingReply::default_instance_ = new GameSettingRpcSettingReply();
  GameSettingRpcGameSettingNotifyNotify::default_instance_ = new GameSettingRpcGameSettingNotifyNotify();
  GameSettingRpcSyncGameSettingAsk::default_instance_->InitAsDefaultInstance();
  GameSettingRpcSyncGameSettingReply::default_instance_->InitAsDefaultInstance();
  GameSettingRpcSettingAsk::default_instance_->InitAsDefaultInstance();
  GameSettingRpcSettingReply::default_instance_->InitAsDefaultInstance();
  GameSettingRpcGameSettingNotifyNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GameSettingRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GameSettingRpc_2eproto {
  StaticDescriptorInitializer_GameSettingRpc_2eproto() {
    protobuf_AddDesc_GameSettingRpc_2eproto();
  }
} static_descriptor_initializer_GameSettingRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GameSettingRpcSyncGameSettingAsk::GameSettingRpcSyncGameSettingAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GameSettingRpcSyncGameSettingAsk::InitAsDefaultInstance() {
}

GameSettingRpcSyncGameSettingAsk::GameSettingRpcSyncGameSettingAsk(const GameSettingRpcSyncGameSettingAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GameSettingRpcSyncGameSettingAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameSettingRpcSyncGameSettingAsk::~GameSettingRpcSyncGameSettingAsk() {
  SharedDtor();
}

void GameSettingRpcSyncGameSettingAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameSettingRpcSyncGameSettingAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettingRpcSyncGameSettingAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameSettingRpcSyncGameSettingAsk_descriptor_;
}

const GameSettingRpcSyncGameSettingAsk& GameSettingRpcSyncGameSettingAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GameSettingRpc_2eproto();
  return *default_instance_;
}

GameSettingRpcSyncGameSettingAsk* GameSettingRpcSyncGameSettingAsk::default_instance_ = NULL;

GameSettingRpcSyncGameSettingAsk* GameSettingRpcSyncGameSettingAsk::New() const {
  return new GameSettingRpcSyncGameSettingAsk;
}

void GameSettingRpcSyncGameSettingAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameSettingRpcSyncGameSettingAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GameSettingRpcSyncGameSettingAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GameSettingRpcSyncGameSettingAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GameSettingRpcSyncGameSettingAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettingRpcSyncGameSettingAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameSettingRpcSyncGameSettingAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameSettingRpcSyncGameSettingAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameSettingRpcSyncGameSettingAsk::MergeFrom(const GameSettingRpcSyncGameSettingAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameSettingRpcSyncGameSettingAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettingRpcSyncGameSettingAsk::CopyFrom(const GameSettingRpcSyncGameSettingAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettingRpcSyncGameSettingAsk::IsInitialized() const {

  return true;
}

void GameSettingRpcSyncGameSettingAsk::Swap(GameSettingRpcSyncGameSettingAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameSettingRpcSyncGameSettingAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameSettingRpcSyncGameSettingAsk_descriptor_;
  metadata.reflection = GameSettingRpcSyncGameSettingAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameSettingRpcSyncGameSettingReply::kResultFieldNumber;
const int GameSettingRpcSyncGameSettingReply::kGameSettingFieldNumber;
#endif  // !_MSC_VER

GameSettingRpcSyncGameSettingReply::GameSettingRpcSyncGameSettingReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GameSettingRpcSyncGameSettingReply::InitAsDefaultInstance() {
}

GameSettingRpcSyncGameSettingReply::GameSettingRpcSyncGameSettingReply(const GameSettingRpcSyncGameSettingReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GameSettingRpcSyncGameSettingReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameSettingRpcSyncGameSettingReply::~GameSettingRpcSyncGameSettingReply() {
  SharedDtor();
}

void GameSettingRpcSyncGameSettingReply::SharedDtor() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (this != default_instance_) {
  }
}

void GameSettingRpcSyncGameSettingReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettingRpcSyncGameSettingReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameSettingRpcSyncGameSettingReply_descriptor_;
}

const GameSettingRpcSyncGameSettingReply& GameSettingRpcSyncGameSettingReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GameSettingRpc_2eproto();
  return *default_instance_;
}

GameSettingRpcSyncGameSettingReply* GameSettingRpcSyncGameSettingReply::default_instance_ = NULL;

GameSettingRpcSyncGameSettingReply* GameSettingRpcSyncGameSettingReply::New() const {
  return new GameSettingRpcSyncGameSettingReply;
}

void GameSettingRpcSyncGameSettingReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    if (has_gamesetting()) {
      if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
        gamesetting_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameSettingRpcSyncGameSettingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_GameSetting;
        break;
      }

      // optional string GameSetting = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_GameSetting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamesetting()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gamesetting().data(), this->gamesetting().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GameSettingRpcSyncGameSettingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string GameSetting = 2;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->gamesetting(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GameSettingRpcSyncGameSettingReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string GameSetting = 2;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gamesetting(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GameSettingRpcSyncGameSettingReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string GameSetting = 2;
    if (has_gamesetting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamesetting());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettingRpcSyncGameSettingReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameSettingRpcSyncGameSettingReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameSettingRpcSyncGameSettingReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameSettingRpcSyncGameSettingReply::MergeFrom(const GameSettingRpcSyncGameSettingReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_gamesetting()) {
      set_gamesetting(from.gamesetting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameSettingRpcSyncGameSettingReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettingRpcSyncGameSettingReply::CopyFrom(const GameSettingRpcSyncGameSettingReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettingRpcSyncGameSettingReply::IsInitialized() const {

  return true;
}

void GameSettingRpcSyncGameSettingReply::Swap(GameSettingRpcSyncGameSettingReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(gamesetting_, other->gamesetting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameSettingRpcSyncGameSettingReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameSettingRpcSyncGameSettingReply_descriptor_;
  metadata.reflection = GameSettingRpcSyncGameSettingReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameSettingRpcSettingAsk::kGameSettingFieldNumber;
#endif  // !_MSC_VER

GameSettingRpcSettingAsk::GameSettingRpcSettingAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GameSettingRpcSettingAsk::InitAsDefaultInstance() {
}

GameSettingRpcSettingAsk::GameSettingRpcSettingAsk(const GameSettingRpcSettingAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GameSettingRpcSettingAsk::SharedCtor() {
  _cached_size_ = 0;
  gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameSettingRpcSettingAsk::~GameSettingRpcSettingAsk() {
  SharedDtor();
}

void GameSettingRpcSettingAsk::SharedDtor() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (this != default_instance_) {
  }
}

void GameSettingRpcSettingAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettingRpcSettingAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameSettingRpcSettingAsk_descriptor_;
}

const GameSettingRpcSettingAsk& GameSettingRpcSettingAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GameSettingRpc_2eproto();
  return *default_instance_;
}

GameSettingRpcSettingAsk* GameSettingRpcSettingAsk::default_instance_ = NULL;

GameSettingRpcSettingAsk* GameSettingRpcSettingAsk::New() const {
  return new GameSettingRpcSettingAsk;
}

void GameSettingRpcSettingAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gamesetting()) {
      if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
        gamesetting_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameSettingRpcSettingAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GameSetting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamesetting()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gamesetting().data(), this->gamesetting().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GameSettingRpcSettingAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string GameSetting = 1;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->gamesetting(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GameSettingRpcSettingAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string GameSetting = 1;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gamesetting(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GameSettingRpcSettingAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string GameSetting = 1;
    if (has_gamesetting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamesetting());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettingRpcSettingAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameSettingRpcSettingAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameSettingRpcSettingAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameSettingRpcSettingAsk::MergeFrom(const GameSettingRpcSettingAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gamesetting()) {
      set_gamesetting(from.gamesetting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameSettingRpcSettingAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettingRpcSettingAsk::CopyFrom(const GameSettingRpcSettingAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettingRpcSettingAsk::IsInitialized() const {

  return true;
}

void GameSettingRpcSettingAsk::Swap(GameSettingRpcSettingAsk* other) {
  if (other != this) {
    std::swap(gamesetting_, other->gamesetting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameSettingRpcSettingAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameSettingRpcSettingAsk_descriptor_;
  metadata.reflection = GameSettingRpcSettingAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameSettingRpcSettingReply::kResultFieldNumber;
#endif  // !_MSC_VER

GameSettingRpcSettingReply::GameSettingRpcSettingReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GameSettingRpcSettingReply::InitAsDefaultInstance() {
}

GameSettingRpcSettingReply::GameSettingRpcSettingReply(const GameSettingRpcSettingReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GameSettingRpcSettingReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameSettingRpcSettingReply::~GameSettingRpcSettingReply() {
  SharedDtor();
}

void GameSettingRpcSettingReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameSettingRpcSettingReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettingRpcSettingReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameSettingRpcSettingReply_descriptor_;
}

const GameSettingRpcSettingReply& GameSettingRpcSettingReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GameSettingRpc_2eproto();
  return *default_instance_;
}

GameSettingRpcSettingReply* GameSettingRpcSettingReply::default_instance_ = NULL;

GameSettingRpcSettingReply* GameSettingRpcSettingReply::New() const {
  return new GameSettingRpcSettingReply;
}

void GameSettingRpcSettingReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameSettingRpcSettingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GameSettingRpcSettingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GameSettingRpcSettingReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GameSettingRpcSettingReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettingRpcSettingReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameSettingRpcSettingReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameSettingRpcSettingReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameSettingRpcSettingReply::MergeFrom(const GameSettingRpcSettingReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameSettingRpcSettingReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettingRpcSettingReply::CopyFrom(const GameSettingRpcSettingReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettingRpcSettingReply::IsInitialized() const {

  return true;
}

void GameSettingRpcSettingReply::Swap(GameSettingRpcSettingReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameSettingRpcSettingReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameSettingRpcSettingReply_descriptor_;
  metadata.reflection = GameSettingRpcSettingReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GameSettingRpcGameSettingNotifyNotify::kGameSettingFieldNumber;
#endif  // !_MSC_VER

GameSettingRpcGameSettingNotifyNotify::GameSettingRpcGameSettingNotifyNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GameSettingRpcGameSettingNotifyNotify::InitAsDefaultInstance() {
}

GameSettingRpcGameSettingNotifyNotify::GameSettingRpcGameSettingNotifyNotify(const GameSettingRpcGameSettingNotifyNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GameSettingRpcGameSettingNotifyNotify::SharedCtor() {
  _cached_size_ = 0;
  gamesetting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameSettingRpcGameSettingNotifyNotify::~GameSettingRpcGameSettingNotifyNotify() {
  SharedDtor();
}

void GameSettingRpcGameSettingNotifyNotify::SharedDtor() {
  if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
    delete gamesetting_;
  }
  if (this != default_instance_) {
  }
}

void GameSettingRpcGameSettingNotifyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettingRpcGameSettingNotifyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameSettingRpcGameSettingNotifyNotify_descriptor_;
}

const GameSettingRpcGameSettingNotifyNotify& GameSettingRpcGameSettingNotifyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GameSettingRpc_2eproto();
  return *default_instance_;
}

GameSettingRpcGameSettingNotifyNotify* GameSettingRpcGameSettingNotifyNotify::default_instance_ = NULL;

GameSettingRpcGameSettingNotifyNotify* GameSettingRpcGameSettingNotifyNotify::New() const {
  return new GameSettingRpcGameSettingNotifyNotify;
}

void GameSettingRpcGameSettingNotifyNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gamesetting()) {
      if (gamesetting_ != &::google::protobuf::internal::kEmptyString) {
        gamesetting_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GameSettingRpcGameSettingNotifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GameSetting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamesetting()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gamesetting().data(), this->gamesetting().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GameSettingRpcGameSettingNotifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string GameSetting = 1;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->gamesetting(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GameSettingRpcGameSettingNotifyNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string GameSetting = 1;
  if (has_gamesetting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gamesetting().data(), this->gamesetting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gamesetting(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GameSettingRpcGameSettingNotifyNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string GameSetting = 1;
    if (has_gamesetting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamesetting());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettingRpcGameSettingNotifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GameSettingRpcGameSettingNotifyNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GameSettingRpcGameSettingNotifyNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GameSettingRpcGameSettingNotifyNotify::MergeFrom(const GameSettingRpcGameSettingNotifyNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gamesetting()) {
      set_gamesetting(from.gamesetting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GameSettingRpcGameSettingNotifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettingRpcGameSettingNotifyNotify::CopyFrom(const GameSettingRpcGameSettingNotifyNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettingRpcGameSettingNotifyNotify::IsInitialized() const {

  return true;
}

void GameSettingRpcGameSettingNotifyNotify::Swap(GameSettingRpcGameSettingNotifyNotify* other) {
  if (other != this) {
    std::swap(gamesetting_, other->gamesetting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GameSettingRpcGameSettingNotifyNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameSettingRpcGameSettingNotifyNotify_descriptor_;
  metadata.reflection = GameSettingRpcGameSettingNotifyNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
