// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TreasureRpc.proto

#ifndef PROTOBUF_TreasureRpc_2eproto__INCLUDED
#define PROTOBUF_TreasureRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TreasureRpc_2eproto();
void protobuf_AssignDesc_TreasureRpc_2eproto();
void protobuf_ShutdownFile_TreasureRpc_2eproto();

class TreasureRpcTreasureDepotInfoAsk;
class TreasureRpcTreasureDepotInfoReply;
class TreasureRpcTreasureInfoAsk;
class TreasureRpcTreasureInfoReply;
class TreasureRpcTreasureUnlockAsk;
class TreasureRpcTreasureUnlockReply;
class TreasureRpcTreasureEquipAsk;
class TreasureRpcTreasureEquipReply;
class TreasureRpcTreasureEquipSycAsk;
class TreasureRpcTreasureEquipSycReply;
class TreasureRpcTreasureDepotLvUpAsk;
class TreasureRpcTreasureDepotLvUpReply;
class TreasureRpcTreasureUnEquipAsk;
class TreasureRpcTreasureUnEquipReply;
class TreasureRpcTreasureEquipedIDNotify;
class TreasureRpcTreasureDelayTimeAsk;
class TreasureRpcTreasureDelayTimeReply;
class TreasureRpcTreasureUnlockEquipNotify;

// ===================================================================

class TreasureRpcTreasureDepotInfoAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDepotInfoAsk();
  virtual ~TreasureRpcTreasureDepotInfoAsk();

  TreasureRpcTreasureDepotInfoAsk(const TreasureRpcTreasureDepotInfoAsk& from);

  inline TreasureRpcTreasureDepotInfoAsk& operator=(const TreasureRpcTreasureDepotInfoAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDepotInfoAsk& default_instance();

  void Swap(TreasureRpcTreasureDepotInfoAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDepotInfoAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDepotInfoAsk& from);
  void MergeFrom(const TreasureRpcTreasureDepotInfoAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDepotInfoAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDepotInfoAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureDepotInfoReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDepotInfoReply();
  virtual ~TreasureRpcTreasureDepotInfoReply();

  TreasureRpcTreasureDepotInfoReply(const TreasureRpcTreasureDepotInfoReply& from);

  inline TreasureRpcTreasureDepotInfoReply& operator=(const TreasureRpcTreasureDepotInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDepotInfoReply& default_instance();

  void Swap(TreasureRpcTreasureDepotInfoReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDepotInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDepotInfoReply& from);
  void MergeFrom(const TreasureRpcTreasureDepotInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 Level = 2 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 Point = 3 [default = 0];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDepotInfoReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDepotInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureInfoAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureInfoAsk();
  virtual ~TreasureRpcTreasureInfoAsk();

  TreasureRpcTreasureInfoAsk(const TreasureRpcTreasureInfoAsk& from);

  inline TreasureRpcTreasureInfoAsk& operator=(const TreasureRpcTreasureInfoAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureInfoAsk& default_instance();

  void Swap(TreasureRpcTreasureInfoAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureInfoAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureInfoAsk& from);
  void MergeFrom(const TreasureRpcTreasureInfoAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureInfoAsk)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureInfoAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureInfoReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureInfoReply();
  virtual ~TreasureRpcTreasureInfoReply();

  TreasureRpcTreasureInfoReply(const TreasureRpcTreasureInfoReply& from);

  inline TreasureRpcTreasureInfoReply& operator=(const TreasureRpcTreasureInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureInfoReply& default_instance();

  void Swap(TreasureRpcTreasureInfoReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureInfoReply& from);
  void MergeFrom(const TreasureRpcTreasureInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .TreasureData Treasure_Info = 2;
  inline int treasure_info_size() const;
  inline void clear_treasure_info();
  static const int kTreasureInfoFieldNumber = 2;
  inline const ::TreasureData& treasure_info(int index) const;
  inline ::TreasureData* mutable_treasure_info(int index);
  inline ::TreasureData* add_treasure_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TreasureData >&
      treasure_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TreasureData >*
      mutable_treasure_info();

  // optional int32 Type = 3 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureInfoReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TreasureData > treasure_info_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureUnlockAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureUnlockAsk();
  virtual ~TreasureRpcTreasureUnlockAsk();

  TreasureRpcTreasureUnlockAsk(const TreasureRpcTreasureUnlockAsk& from);

  inline TreasureRpcTreasureUnlockAsk& operator=(const TreasureRpcTreasureUnlockAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureUnlockAsk& default_instance();

  void Swap(TreasureRpcTreasureUnlockAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureUnlockAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureUnlockAsk& from);
  void MergeFrom(const TreasureRpcTreasureUnlockAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Color_Type = 2 [default = -1];
  inline bool has_color_type() const;
  inline void clear_color_type();
  static const int kColorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 color_type() const;
  inline void set_color_type(::google::protobuf::int32 value);

  // optional int32 Time_Type = 3 [default = -1];
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 time_type() const;
  inline void set_time_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureUnlockAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_color_type();
  inline void clear_has_color_type();
  inline void set_has_time_type();
  inline void clear_has_time_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 color_type_;
  ::google::protobuf::int32 time_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureUnlockAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureUnlockReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureUnlockReply();
  virtual ~TreasureRpcTreasureUnlockReply();

  TreasureRpcTreasureUnlockReply(const TreasureRpcTreasureUnlockReply& from);

  inline TreasureRpcTreasureUnlockReply& operator=(const TreasureRpcTreasureUnlockReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureUnlockReply& default_instance();

  void Swap(TreasureRpcTreasureUnlockReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureUnlockReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureUnlockReply& from);
  void MergeFrom(const TreasureRpcTreasureUnlockReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TreasureData TreasureUnLocked = 2;
  inline bool has_treasureunlocked() const;
  inline void clear_treasureunlocked();
  static const int kTreasureUnLockedFieldNumber = 2;
  inline const ::TreasureData& treasureunlocked() const;
  inline ::TreasureData* mutable_treasureunlocked();
  inline ::TreasureData* release_treasureunlocked();
  inline void set_allocated_treasureunlocked(::TreasureData* treasureunlocked);

  // optional int32 Points = 3 [default = -1];
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline ::google::protobuf::int32 points() const;
  inline void set_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureUnlockReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasureunlocked();
  inline void clear_has_treasureunlocked();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureData* treasureunlocked_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 points_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureUnlockReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureEquipAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureEquipAsk();
  virtual ~TreasureRpcTreasureEquipAsk();

  TreasureRpcTreasureEquipAsk(const TreasureRpcTreasureEquipAsk& from);

  inline TreasureRpcTreasureEquipAsk& operator=(const TreasureRpcTreasureEquipAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureEquipAsk& default_instance();

  void Swap(TreasureRpcTreasureEquipAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureEquipAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureEquipAsk& from);
  void MergeFrom(const TreasureRpcTreasureEquipAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Color_Type = 2 [default = -1];
  inline bool has_color_type() const;
  inline void clear_color_type();
  static const int kColorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 color_type() const;
  inline void set_color_type(::google::protobuf::int32 value);

  // optional int32 Time_Type = 3 [default = -1];
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 time_type() const;
  inline void set_time_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureEquipAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_color_type();
  inline void clear_has_color_type();
  inline void set_has_time_type();
  inline void clear_has_time_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 color_type_;
  ::google::protobuf::int32 time_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureEquipAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureEquipReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureEquipReply();
  virtual ~TreasureRpcTreasureEquipReply();

  TreasureRpcTreasureEquipReply(const TreasureRpcTreasureEquipReply& from);

  inline TreasureRpcTreasureEquipReply& operator=(const TreasureRpcTreasureEquipReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureEquipReply& default_instance();

  void Swap(TreasureRpcTreasureEquipReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureEquipReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureEquipReply& from);
  void MergeFrom(const TreasureRpcTreasureEquipReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TreasureData TreasureEquiped = 2;
  inline bool has_treasureequiped() const;
  inline void clear_treasureequiped();
  static const int kTreasureEquipedFieldNumber = 2;
  inline const ::TreasureData& treasureequiped() const;
  inline ::TreasureData* mutable_treasureequiped();
  inline ::TreasureData* release_treasureequiped();
  inline void set_allocated_treasureequiped(::TreasureData* treasureequiped);

  // optional .TreasureData TreasureUnequiped = 4;
  inline bool has_treasureunequiped() const;
  inline void clear_treasureunequiped();
  static const int kTreasureUnequipedFieldNumber = 4;
  inline const ::TreasureData& treasureunequiped() const;
  inline ::TreasureData* mutable_treasureunequiped();
  inline ::TreasureData* release_treasureunequiped();
  inline void set_allocated_treasureunequiped(::TreasureData* treasureunequiped);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureEquipReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasureequiped();
  inline void clear_has_treasureequiped();
  inline void set_has_treasureunequiped();
  inline void clear_has_treasureunequiped();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureData* treasureequiped_;
  ::TreasureData* treasureunequiped_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureEquipReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureEquipSycAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureEquipSycAsk();
  virtual ~TreasureRpcTreasureEquipSycAsk();

  TreasureRpcTreasureEquipSycAsk(const TreasureRpcTreasureEquipSycAsk& from);

  inline TreasureRpcTreasureEquipSycAsk& operator=(const TreasureRpcTreasureEquipSycAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureEquipSycAsk& default_instance();

  void Swap(TreasureRpcTreasureEquipSycAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureEquipSycAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureEquipSycAsk& from);
  void MergeFrom(const TreasureRpcTreasureEquipSycAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureEquipSycAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureEquipSycAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureEquipSycReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureEquipSycReply();
  virtual ~TreasureRpcTreasureEquipSycReply();

  TreasureRpcTreasureEquipSycReply(const TreasureRpcTreasureEquipSycReply& from);

  inline TreasureRpcTreasureEquipSycReply& operator=(const TreasureRpcTreasureEquipSycReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureEquipSycReply& default_instance();

  void Swap(TreasureRpcTreasureEquipSycReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureEquipSycReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureEquipSycReply& from);
  void MergeFrom(const TreasureRpcTreasureEquipSycReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .TreasureData TreasueEquiped = 2;
  inline int treasueequiped_size() const;
  inline void clear_treasueequiped();
  static const int kTreasueEquipedFieldNumber = 2;
  inline const ::TreasureData& treasueequiped(int index) const;
  inline ::TreasureData* mutable_treasueequiped(int index);
  inline ::TreasureData* add_treasueequiped();
  inline const ::google::protobuf::RepeatedPtrField< ::TreasureData >&
      treasueequiped() const;
  inline ::google::protobuf::RepeatedPtrField< ::TreasureData >*
      mutable_treasueequiped();

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureEquipSycReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TreasureData > treasueequiped_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureEquipSycReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureDepotLvUpAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDepotLvUpAsk();
  virtual ~TreasureRpcTreasureDepotLvUpAsk();

  TreasureRpcTreasureDepotLvUpAsk(const TreasureRpcTreasureDepotLvUpAsk& from);

  inline TreasureRpcTreasureDepotLvUpAsk& operator=(const TreasureRpcTreasureDepotLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDepotLvUpAsk& default_instance();

  void Swap(TreasureRpcTreasureDepotLvUpAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDepotLvUpAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDepotLvUpAsk& from);
  void MergeFrom(const TreasureRpcTreasureDepotLvUpAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDepotLvUpAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDepotLvUpAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureDepotLvUpReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDepotLvUpReply();
  virtual ~TreasureRpcTreasureDepotLvUpReply();

  TreasureRpcTreasureDepotLvUpReply(const TreasureRpcTreasureDepotLvUpReply& from);

  inline TreasureRpcTreasureDepotLvUpReply& operator=(const TreasureRpcTreasureDepotLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDepotLvUpReply& default_instance();

  void Swap(TreasureRpcTreasureDepotLvUpReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDepotLvUpReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDepotLvUpReply& from);
  void MergeFrom(const TreasureRpcTreasureDepotLvUpReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 Level = 2 [default = -1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 Point = 3 [default = -1];
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDepotLvUpReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDepotLvUpReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureUnEquipAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureUnEquipAsk();
  virtual ~TreasureRpcTreasureUnEquipAsk();

  TreasureRpcTreasureUnEquipAsk(const TreasureRpcTreasureUnEquipAsk& from);

  inline TreasureRpcTreasureUnEquipAsk& operator=(const TreasureRpcTreasureUnEquipAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureUnEquipAsk& default_instance();

  void Swap(TreasureRpcTreasureUnEquipAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureUnEquipAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureUnEquipAsk& from);
  void MergeFrom(const TreasureRpcTreasureUnEquipAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Color_Type = 2 [default = -1];
  inline bool has_color_type() const;
  inline void clear_color_type();
  static const int kColorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 color_type() const;
  inline void set_color_type(::google::protobuf::int32 value);

  // optional int32 Time_Type = 3 [default = -1];
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 time_type() const;
  inline void set_time_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureUnEquipAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_color_type();
  inline void clear_has_color_type();
  inline void set_has_time_type();
  inline void clear_has_time_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 color_type_;
  ::google::protobuf::int32 time_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureUnEquipAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureUnEquipReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureUnEquipReply();
  virtual ~TreasureRpcTreasureUnEquipReply();

  TreasureRpcTreasureUnEquipReply(const TreasureRpcTreasureUnEquipReply& from);

  inline TreasureRpcTreasureUnEquipReply& operator=(const TreasureRpcTreasureUnEquipReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureUnEquipReply& default_instance();

  void Swap(TreasureRpcTreasureUnEquipReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureUnEquipReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureUnEquipReply& from);
  void MergeFrom(const TreasureRpcTreasureUnEquipReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TreasureData TreasureUnequiped = 2;
  inline bool has_treasureunequiped() const;
  inline void clear_treasureunequiped();
  static const int kTreasureUnequipedFieldNumber = 2;
  inline const ::TreasureData& treasureunequiped() const;
  inline ::TreasureData* mutable_treasureunequiped();
  inline ::TreasureData* release_treasureunequiped();
  inline void set_allocated_treasureunequiped(::TreasureData* treasureunequiped);

  // optional .TreasureData TreasureEquiped = 3;
  inline bool has_treasureequiped() const;
  inline void clear_treasureequiped();
  static const int kTreasureEquipedFieldNumber = 3;
  inline const ::TreasureData& treasureequiped() const;
  inline ::TreasureData* mutable_treasureequiped();
  inline ::TreasureData* release_treasureequiped();
  inline void set_allocated_treasureequiped(::TreasureData* treasureequiped);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureUnEquipReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasureunequiped();
  inline void clear_has_treasureunequiped();
  inline void set_has_treasureequiped();
  inline void clear_has_treasureequiped();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureData* treasureunequiped_;
  ::TreasureData* treasureequiped_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureUnEquipReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureEquipedIDNotify : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureEquipedIDNotify();
  virtual ~TreasureRpcTreasureEquipedIDNotify();

  TreasureRpcTreasureEquipedIDNotify(const TreasureRpcTreasureEquipedIDNotify& from);

  inline TreasureRpcTreasureEquipedIDNotify& operator=(const TreasureRpcTreasureEquipedIDNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureEquipedIDNotify& default_instance();

  void Swap(TreasureRpcTreasureEquipedIDNotify* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureEquipedIDNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureEquipedIDNotify& from);
  void MergeFrom(const TreasureRpcTreasureEquipedIDNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TreasureEquipedID TreasureID = 1;
  inline bool has_treasureid() const;
  inline void clear_treasureid();
  static const int kTreasureIDFieldNumber = 1;
  inline const ::TreasureEquipedID& treasureid() const;
  inline ::TreasureEquipedID* mutable_treasureid();
  inline ::TreasureEquipedID* release_treasureid();
  inline void set_allocated_treasureid(::TreasureEquipedID* treasureid);

  // optional int32 ObjID = 2 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIDFieldNumber = 2;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureEquipedIDNotify)
 private:
  inline void set_has_treasureid();
  inline void clear_has_treasureid();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureEquipedID* treasureid_;
  ::google::protobuf::int32 objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureEquipedIDNotify* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureDelayTimeAsk : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDelayTimeAsk();
  virtual ~TreasureRpcTreasureDelayTimeAsk();

  TreasureRpcTreasureDelayTimeAsk(const TreasureRpcTreasureDelayTimeAsk& from);

  inline TreasureRpcTreasureDelayTimeAsk& operator=(const TreasureRpcTreasureDelayTimeAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDelayTimeAsk& default_instance();

  void Swap(TreasureRpcTreasureDelayTimeAsk* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDelayTimeAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDelayTimeAsk& from);
  void MergeFrom(const TreasureRpcTreasureDelayTimeAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Color_Type = 2 [default = -1];
  inline bool has_color_type() const;
  inline void clear_color_type();
  static const int kColorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 color_type() const;
  inline void set_color_type(::google::protobuf::int32 value);

  // optional int32 Time_Type = 3 [default = -1];
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 time_type() const;
  inline void set_time_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDelayTimeAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_color_type();
  inline void clear_has_color_type();
  inline void set_has_time_type();
  inline void clear_has_time_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 color_type_;
  ::google::protobuf::int32 time_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDelayTimeAsk* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureDelayTimeReply : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureDelayTimeReply();
  virtual ~TreasureRpcTreasureDelayTimeReply();

  TreasureRpcTreasureDelayTimeReply(const TreasureRpcTreasureDelayTimeReply& from);

  inline TreasureRpcTreasureDelayTimeReply& operator=(const TreasureRpcTreasureDelayTimeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureDelayTimeReply& default_instance();

  void Swap(TreasureRpcTreasureDelayTimeReply* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureDelayTimeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureDelayTimeReply& from);
  void MergeFrom(const TreasureRpcTreasureDelayTimeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TreasureData TreasureUnLocked = 2;
  inline bool has_treasureunlocked() const;
  inline void clear_treasureunlocked();
  static const int kTreasureUnLockedFieldNumber = 2;
  inline const ::TreasureData& treasureunlocked() const;
  inline ::TreasureData* mutable_treasureunlocked();
  inline ::TreasureData* release_treasureunlocked();
  inline void set_allocated_treasureunlocked(::TreasureData* treasureunlocked);

  // optional int32 Points = 3 [default = -1];
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline ::google::protobuf::int32 points() const;
  inline void set_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureDelayTimeReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasureunlocked();
  inline void clear_has_treasureunlocked();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureData* treasureunlocked_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 points_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureDelayTimeReply* default_instance_;
};
// -------------------------------------------------------------------

class TreasureRpcTreasureUnlockEquipNotify : public ::google::protobuf::Message {
 public:
  TreasureRpcTreasureUnlockEquipNotify();
  virtual ~TreasureRpcTreasureUnlockEquipNotify();

  TreasureRpcTreasureUnlockEquipNotify(const TreasureRpcTreasureUnlockEquipNotify& from);

  inline TreasureRpcTreasureUnlockEquipNotify& operator=(const TreasureRpcTreasureUnlockEquipNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureRpcTreasureUnlockEquipNotify& default_instance();

  void Swap(TreasureRpcTreasureUnlockEquipNotify* other);

  // implements Message ----------------------------------------------

  TreasureRpcTreasureUnlockEquipNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureRpcTreasureUnlockEquipNotify& from);
  void MergeFrom(const TreasureRpcTreasureUnlockEquipNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TreasureData TreasureEquiped = 2;
  inline bool has_treasureequiped() const;
  inline void clear_treasureequiped();
  static const int kTreasureEquipedFieldNumber = 2;
  inline const ::TreasureData& treasureequiped() const;
  inline ::TreasureData* mutable_treasureequiped();
  inline ::TreasureData* release_treasureequiped();
  inline void set_allocated_treasureequiped(::TreasureData* treasureequiped);

  // optional .TreasureData TreasureUnequiped = 3;
  inline bool has_treasureunequiped() const;
  inline void clear_treasureunequiped();
  static const int kTreasureUnequipedFieldNumber = 3;
  inline const ::TreasureData& treasureunequiped() const;
  inline ::TreasureData* mutable_treasureunequiped();
  inline ::TreasureData* release_treasureunequiped();
  inline void set_allocated_treasureunequiped(::TreasureData* treasureunequiped);

  // optional int32 Points = 4 [default = -1];
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline ::google::protobuf::int32 points() const;
  inline void set_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureRpcTreasureUnlockEquipNotify)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_treasureequiped();
  inline void clear_has_treasureequiped();
  inline void set_has_treasureunequiped();
  inline void clear_has_treasureunequiped();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TreasureData* treasureequiped_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 points_;
  ::TreasureData* treasureunequiped_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_TreasureRpc_2eproto();
  friend void protobuf_AssignDesc_TreasureRpc_2eproto();
  friend void protobuf_ShutdownFile_TreasureRpc_2eproto();

  void InitAsDefaultInstance();
  static TreasureRpcTreasureUnlockEquipNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TreasureRpcTreasureDepotInfoAsk

// -------------------------------------------------------------------

// TreasureRpcTreasureDepotInfoReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureDepotInfoReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureDepotInfoReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotInfoReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureDepotInfoReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 Level = 2 [default = 1];
inline bool TreasureRpcTreasureDepotInfoReply::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureDepotInfoReply::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotInfoReply::level() const {
  return level_;
}
inline void TreasureRpcTreasureDepotInfoReply::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 Point = 3 [default = 0];
inline bool TreasureRpcTreasureDepotInfoReply::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureDepotInfoReply::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureDepotInfoReply::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotInfoReply::point() const {
  return point_;
}
inline void TreasureRpcTreasureDepotInfoReply::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureInfoAsk

// optional int32 Type = 1 [default = -1];
inline bool TreasureRpcTreasureInfoAsk::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureInfoAsk::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureInfoAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureInfoAsk::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureInfoAsk::type() const {
  return type_;
}
inline void TreasureRpcTreasureInfoAsk::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureInfoReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureInfoReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureInfoReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureInfoReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureInfoReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureInfoReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureInfoReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .TreasureData Treasure_Info = 2;
inline int TreasureRpcTreasureInfoReply::treasure_info_size() const {
  return treasure_info_.size();
}
inline void TreasureRpcTreasureInfoReply::clear_treasure_info() {
  treasure_info_.Clear();
}
inline const ::TreasureData& TreasureRpcTreasureInfoReply::treasure_info(int index) const {
  return treasure_info_.Get(index);
}
inline ::TreasureData* TreasureRpcTreasureInfoReply::mutable_treasure_info(int index) {
  return treasure_info_.Mutable(index);
}
inline ::TreasureData* TreasureRpcTreasureInfoReply::add_treasure_info() {
  return treasure_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TreasureData >&
TreasureRpcTreasureInfoReply::treasure_info() const {
  return treasure_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TreasureData >*
TreasureRpcTreasureInfoReply::mutable_treasure_info() {
  return &treasure_info_;
}

// optional int32 Type = 3 [default = -1];
inline bool TreasureRpcTreasureInfoReply::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureInfoReply::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureInfoReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureInfoReply::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureInfoReply::type() const {
  return type_;
}
inline void TreasureRpcTreasureInfoReply::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureUnlockAsk

// optional int32 Id = 1 [default = -1];
inline bool TreasureRpcTreasureUnlockAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureUnlockAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockAsk::id() const {
  return id_;
}
inline void TreasureRpcTreasureUnlockAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Color_Type = 2 [default = -1];
inline bool TreasureRpcTreasureUnlockAsk::has_color_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureUnlockAsk::set_has_color_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_has_color_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_color_type() {
  color_type_ = -1;
  clear_has_color_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockAsk::color_type() const {
  return color_type_;
}
inline void TreasureRpcTreasureUnlockAsk::set_color_type(::google::protobuf::int32 value) {
  set_has_color_type();
  color_type_ = value;
}

// optional int32 Time_Type = 3 [default = -1];
inline bool TreasureRpcTreasureUnlockAsk::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureUnlockAsk::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureUnlockAsk::clear_time_type() {
  time_type_ = -1;
  clear_has_time_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockAsk::time_type() const {
  return time_type_;
}
inline void TreasureRpcTreasureUnlockAsk::set_time_type(::google::protobuf::int32 value) {
  set_has_time_type();
  time_type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureUnlockReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureUnlockReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureUnlockReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureUnlockReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureUnlockReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureUnlockReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TreasureData TreasureUnLocked = 2;
inline bool TreasureRpcTreasureUnlockReply::has_treasureunlocked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureUnlockReply::set_has_treasureunlocked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureUnlockReply::clear_has_treasureunlocked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureUnlockReply::clear_treasureunlocked() {
  if (treasureunlocked_ != NULL) treasureunlocked_->::TreasureData::Clear();
  clear_has_treasureunlocked();
}
inline const ::TreasureData& TreasureRpcTreasureUnlockReply::treasureunlocked() const {
  return treasureunlocked_ != NULL ? *treasureunlocked_ : *default_instance_->treasureunlocked_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockReply::mutable_treasureunlocked() {
  set_has_treasureunlocked();
  if (treasureunlocked_ == NULL) treasureunlocked_ = new ::TreasureData;
  return treasureunlocked_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockReply::release_treasureunlocked() {
  clear_has_treasureunlocked();
  ::TreasureData* temp = treasureunlocked_;
  treasureunlocked_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureUnlockReply::set_allocated_treasureunlocked(::TreasureData* treasureunlocked) {
  delete treasureunlocked_;
  treasureunlocked_ = treasureunlocked;
  if (treasureunlocked) {
    set_has_treasureunlocked();
  } else {
    clear_has_treasureunlocked();
  }
}

// optional int32 Points = 3 [default = -1];
inline bool TreasureRpcTreasureUnlockReply::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureUnlockReply::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureUnlockReply::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureUnlockReply::clear_points() {
  points_ = -1;
  clear_has_points();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockReply::points() const {
  return points_;
}
inline void TreasureRpcTreasureUnlockReply::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureEquipAsk

// optional int32 Id = 1 [default = -1];
inline bool TreasureRpcTreasureEquipAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureEquipAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureEquipAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureEquipAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipAsk::id() const {
  return id_;
}
inline void TreasureRpcTreasureEquipAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Color_Type = 2 [default = -1];
inline bool TreasureRpcTreasureEquipAsk::has_color_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureEquipAsk::set_has_color_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureEquipAsk::clear_has_color_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureEquipAsk::clear_color_type() {
  color_type_ = -1;
  clear_has_color_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipAsk::color_type() const {
  return color_type_;
}
inline void TreasureRpcTreasureEquipAsk::set_color_type(::google::protobuf::int32 value) {
  set_has_color_type();
  color_type_ = value;
}

// optional int32 Time_Type = 3 [default = -1];
inline bool TreasureRpcTreasureEquipAsk::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureEquipAsk::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureEquipAsk::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureEquipAsk::clear_time_type() {
  time_type_ = -1;
  clear_has_time_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipAsk::time_type() const {
  return time_type_;
}
inline void TreasureRpcTreasureEquipAsk::set_time_type(::google::protobuf::int32 value) {
  set_has_time_type();
  time_type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureEquipReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureEquipReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureEquipReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureEquipReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureEquipReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureEquipReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TreasureData TreasureEquiped = 2;
inline bool TreasureRpcTreasureEquipReply::has_treasureequiped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureEquipReply::set_has_treasureequiped() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureEquipReply::clear_has_treasureequiped() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureEquipReply::clear_treasureequiped() {
  if (treasureequiped_ != NULL) treasureequiped_->::TreasureData::Clear();
  clear_has_treasureequiped();
}
inline const ::TreasureData& TreasureRpcTreasureEquipReply::treasureequiped() const {
  return treasureequiped_ != NULL ? *treasureequiped_ : *default_instance_->treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureEquipReply::mutable_treasureequiped() {
  set_has_treasureequiped();
  if (treasureequiped_ == NULL) treasureequiped_ = new ::TreasureData;
  return treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureEquipReply::release_treasureequiped() {
  clear_has_treasureequiped();
  ::TreasureData* temp = treasureequiped_;
  treasureequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureEquipReply::set_allocated_treasureequiped(::TreasureData* treasureequiped) {
  delete treasureequiped_;
  treasureequiped_ = treasureequiped;
  if (treasureequiped) {
    set_has_treasureequiped();
  } else {
    clear_has_treasureequiped();
  }
}

// optional .TreasureData TreasureUnequiped = 4;
inline bool TreasureRpcTreasureEquipReply::has_treasureunequiped() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureEquipReply::set_has_treasureunequiped() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureEquipReply::clear_has_treasureunequiped() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureEquipReply::clear_treasureunequiped() {
  if (treasureunequiped_ != NULL) treasureunequiped_->::TreasureData::Clear();
  clear_has_treasureunequiped();
}
inline const ::TreasureData& TreasureRpcTreasureEquipReply::treasureunequiped() const {
  return treasureunequiped_ != NULL ? *treasureunequiped_ : *default_instance_->treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureEquipReply::mutable_treasureunequiped() {
  set_has_treasureunequiped();
  if (treasureunequiped_ == NULL) treasureunequiped_ = new ::TreasureData;
  return treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureEquipReply::release_treasureunequiped() {
  clear_has_treasureunequiped();
  ::TreasureData* temp = treasureunequiped_;
  treasureunequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureEquipReply::set_allocated_treasureunequiped(::TreasureData* treasureunequiped) {
  delete treasureunequiped_;
  treasureunequiped_ = treasureunequiped;
  if (treasureunequiped) {
    set_has_treasureunequiped();
  } else {
    clear_has_treasureunequiped();
  }
}

// -------------------------------------------------------------------

// TreasureRpcTreasureEquipSycAsk

// -------------------------------------------------------------------

// TreasureRpcTreasureEquipSycReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureEquipSycReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureEquipSycReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureEquipSycReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureEquipSycReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipSycReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureEquipSycReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .TreasureData TreasueEquiped = 2;
inline int TreasureRpcTreasureEquipSycReply::treasueequiped_size() const {
  return treasueequiped_.size();
}
inline void TreasureRpcTreasureEquipSycReply::clear_treasueequiped() {
  treasueequiped_.Clear();
}
inline const ::TreasureData& TreasureRpcTreasureEquipSycReply::treasueequiped(int index) const {
  return treasueequiped_.Get(index);
}
inline ::TreasureData* TreasureRpcTreasureEquipSycReply::mutable_treasueequiped(int index) {
  return treasueequiped_.Mutable(index);
}
inline ::TreasureData* TreasureRpcTreasureEquipSycReply::add_treasueequiped() {
  return treasueequiped_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TreasureData >&
TreasureRpcTreasureEquipSycReply::treasueequiped() const {
  return treasueequiped_;
}
inline ::google::protobuf::RepeatedPtrField< ::TreasureData >*
TreasureRpcTreasureEquipSycReply::mutable_treasueequiped() {
  return &treasueequiped_;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureDepotLvUpAsk

// -------------------------------------------------------------------

// TreasureRpcTreasureDepotLvUpReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureDepotLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotLvUpReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 Level = 2 [default = -1];
inline bool TreasureRpcTreasureDepotLvUpReply::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotLvUpReply::level() const {
  return level_;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 Point = 3 [default = -1];
inline bool TreasureRpcTreasureDepotLvUpReply::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureDepotLvUpReply::clear_point() {
  point_ = -1;
  clear_has_point();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDepotLvUpReply::point() const {
  return point_;
}
inline void TreasureRpcTreasureDepotLvUpReply::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureUnEquipAsk

// optional int32 Id = 1 [default = -1];
inline bool TreasureRpcTreasureUnEquipAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureUnEquipAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnEquipAsk::id() const {
  return id_;
}
inline void TreasureRpcTreasureUnEquipAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Color_Type = 2 [default = -1];
inline bool TreasureRpcTreasureUnEquipAsk::has_color_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureUnEquipAsk::set_has_color_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_has_color_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_color_type() {
  color_type_ = -1;
  clear_has_color_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnEquipAsk::color_type() const {
  return color_type_;
}
inline void TreasureRpcTreasureUnEquipAsk::set_color_type(::google::protobuf::int32 value) {
  set_has_color_type();
  color_type_ = value;
}

// optional int32 Time_Type = 3 [default = -1];
inline bool TreasureRpcTreasureUnEquipAsk::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureUnEquipAsk::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureUnEquipAsk::clear_time_type() {
  time_type_ = -1;
  clear_has_time_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnEquipAsk::time_type() const {
  return time_type_;
}
inline void TreasureRpcTreasureUnEquipAsk::set_time_type(::google::protobuf::int32 value) {
  set_has_time_type();
  time_type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureUnEquipReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureUnEquipReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureUnEquipReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnEquipReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureUnEquipReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TreasureData TreasureUnequiped = 2;
inline bool TreasureRpcTreasureUnEquipReply::has_treasureunequiped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureUnEquipReply::set_has_treasureunequiped() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_has_treasureunequiped() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_treasureunequiped() {
  if (treasureunequiped_ != NULL) treasureunequiped_->::TreasureData::Clear();
  clear_has_treasureunequiped();
}
inline const ::TreasureData& TreasureRpcTreasureUnEquipReply::treasureunequiped() const {
  return treasureunequiped_ != NULL ? *treasureunequiped_ : *default_instance_->treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnEquipReply::mutable_treasureunequiped() {
  set_has_treasureunequiped();
  if (treasureunequiped_ == NULL) treasureunequiped_ = new ::TreasureData;
  return treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnEquipReply::release_treasureunequiped() {
  clear_has_treasureunequiped();
  ::TreasureData* temp = treasureunequiped_;
  treasureunequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureUnEquipReply::set_allocated_treasureunequiped(::TreasureData* treasureunequiped) {
  delete treasureunequiped_;
  treasureunequiped_ = treasureunequiped;
  if (treasureunequiped) {
    set_has_treasureunequiped();
  } else {
    clear_has_treasureunequiped();
  }
}

// optional .TreasureData TreasureEquiped = 3;
inline bool TreasureRpcTreasureUnEquipReply::has_treasureequiped() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureUnEquipReply::set_has_treasureequiped() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_has_treasureequiped() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureUnEquipReply::clear_treasureequiped() {
  if (treasureequiped_ != NULL) treasureequiped_->::TreasureData::Clear();
  clear_has_treasureequiped();
}
inline const ::TreasureData& TreasureRpcTreasureUnEquipReply::treasureequiped() const {
  return treasureequiped_ != NULL ? *treasureequiped_ : *default_instance_->treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnEquipReply::mutable_treasureequiped() {
  set_has_treasureequiped();
  if (treasureequiped_ == NULL) treasureequiped_ = new ::TreasureData;
  return treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnEquipReply::release_treasureequiped() {
  clear_has_treasureequiped();
  ::TreasureData* temp = treasureequiped_;
  treasureequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureUnEquipReply::set_allocated_treasureequiped(::TreasureData* treasureequiped) {
  delete treasureequiped_;
  treasureequiped_ = treasureequiped;
  if (treasureequiped) {
    set_has_treasureequiped();
  } else {
    clear_has_treasureequiped();
  }
}

// -------------------------------------------------------------------

// TreasureRpcTreasureEquipedIDNotify

// optional .TreasureEquipedID TreasureID = 1;
inline bool TreasureRpcTreasureEquipedIDNotify::has_treasureid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureEquipedIDNotify::set_has_treasureid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureEquipedIDNotify::clear_has_treasureid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureEquipedIDNotify::clear_treasureid() {
  if (treasureid_ != NULL) treasureid_->::TreasureEquipedID::Clear();
  clear_has_treasureid();
}
inline const ::TreasureEquipedID& TreasureRpcTreasureEquipedIDNotify::treasureid() const {
  return treasureid_ != NULL ? *treasureid_ : *default_instance_->treasureid_;
}
inline ::TreasureEquipedID* TreasureRpcTreasureEquipedIDNotify::mutable_treasureid() {
  set_has_treasureid();
  if (treasureid_ == NULL) treasureid_ = new ::TreasureEquipedID;
  return treasureid_;
}
inline ::TreasureEquipedID* TreasureRpcTreasureEquipedIDNotify::release_treasureid() {
  clear_has_treasureid();
  ::TreasureEquipedID* temp = treasureid_;
  treasureid_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureEquipedIDNotify::set_allocated_treasureid(::TreasureEquipedID* treasureid) {
  delete treasureid_;
  treasureid_ = treasureid;
  if (treasureid) {
    set_has_treasureid();
  } else {
    clear_has_treasureid();
  }
}

// optional int32 ObjID = 2 [default = -1];
inline bool TreasureRpcTreasureEquipedIDNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureEquipedIDNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureEquipedIDNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureEquipedIDNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 TreasureRpcTreasureEquipedIDNotify::objid() const {
  return objid_;
}
inline void TreasureRpcTreasureEquipedIDNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureDelayTimeAsk

// optional int32 Id = 1 [default = -1];
inline bool TreasureRpcTreasureDelayTimeAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDelayTimeAsk::id() const {
  return id_;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Color_Type = 2 [default = -1];
inline bool TreasureRpcTreasureDelayTimeAsk::has_color_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_has_color_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_has_color_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_color_type() {
  color_type_ = -1;
  clear_has_color_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDelayTimeAsk::color_type() const {
  return color_type_;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_color_type(::google::protobuf::int32 value) {
  set_has_color_type();
  color_type_ = value;
}

// optional int32 Time_Type = 3 [default = -1];
inline bool TreasureRpcTreasureDelayTimeAsk::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureDelayTimeAsk::clear_time_type() {
  time_type_ = -1;
  clear_has_time_type();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDelayTimeAsk::time_type() const {
  return time_type_;
}
inline void TreasureRpcTreasureDelayTimeAsk::set_time_type(::google::protobuf::int32 value) {
  set_has_time_type();
  time_type_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureDelayTimeReply

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureDelayTimeReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureDelayTimeReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDelayTimeReply::result() const {
  return result_;
}
inline void TreasureRpcTreasureDelayTimeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TreasureData TreasureUnLocked = 2;
inline bool TreasureRpcTreasureDelayTimeReply::has_treasureunlocked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureDelayTimeReply::set_has_treasureunlocked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_has_treasureunlocked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_treasureunlocked() {
  if (treasureunlocked_ != NULL) treasureunlocked_->::TreasureData::Clear();
  clear_has_treasureunlocked();
}
inline const ::TreasureData& TreasureRpcTreasureDelayTimeReply::treasureunlocked() const {
  return treasureunlocked_ != NULL ? *treasureunlocked_ : *default_instance_->treasureunlocked_;
}
inline ::TreasureData* TreasureRpcTreasureDelayTimeReply::mutable_treasureunlocked() {
  set_has_treasureunlocked();
  if (treasureunlocked_ == NULL) treasureunlocked_ = new ::TreasureData;
  return treasureunlocked_;
}
inline ::TreasureData* TreasureRpcTreasureDelayTimeReply::release_treasureunlocked() {
  clear_has_treasureunlocked();
  ::TreasureData* temp = treasureunlocked_;
  treasureunlocked_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureDelayTimeReply::set_allocated_treasureunlocked(::TreasureData* treasureunlocked) {
  delete treasureunlocked_;
  treasureunlocked_ = treasureunlocked;
  if (treasureunlocked) {
    set_has_treasureunlocked();
  } else {
    clear_has_treasureunlocked();
  }
}

// optional int32 Points = 3 [default = -1];
inline bool TreasureRpcTreasureDelayTimeReply::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureDelayTimeReply::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureDelayTimeReply::clear_points() {
  points_ = -1;
  clear_has_points();
}
inline ::google::protobuf::int32 TreasureRpcTreasureDelayTimeReply::points() const {
  return points_;
}
inline void TreasureRpcTreasureDelayTimeReply::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
}

// -------------------------------------------------------------------

// TreasureRpcTreasureUnlockEquipNotify

// optional int32 Result = 1 [default = -1];
inline bool TreasureRpcTreasureUnlockEquipNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockEquipNotify::result() const {
  return result_;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TreasureData TreasureEquiped = 2;
inline bool TreasureRpcTreasureUnlockEquipNotify::has_treasureequiped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_has_treasureequiped() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_has_treasureequiped() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_treasureequiped() {
  if (treasureequiped_ != NULL) treasureequiped_->::TreasureData::Clear();
  clear_has_treasureequiped();
}
inline const ::TreasureData& TreasureRpcTreasureUnlockEquipNotify::treasureequiped() const {
  return treasureequiped_ != NULL ? *treasureequiped_ : *default_instance_->treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockEquipNotify::mutable_treasureequiped() {
  set_has_treasureequiped();
  if (treasureequiped_ == NULL) treasureequiped_ = new ::TreasureData;
  return treasureequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockEquipNotify::release_treasureequiped() {
  clear_has_treasureequiped();
  ::TreasureData* temp = treasureequiped_;
  treasureequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_allocated_treasureequiped(::TreasureData* treasureequiped) {
  delete treasureequiped_;
  treasureequiped_ = treasureequiped;
  if (treasureequiped) {
    set_has_treasureequiped();
  } else {
    clear_has_treasureequiped();
  }
}

// optional .TreasureData TreasureUnequiped = 3;
inline bool TreasureRpcTreasureUnlockEquipNotify::has_treasureunequiped() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_has_treasureunequiped() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_has_treasureunequiped() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_treasureunequiped() {
  if (treasureunequiped_ != NULL) treasureunequiped_->::TreasureData::Clear();
  clear_has_treasureunequiped();
}
inline const ::TreasureData& TreasureRpcTreasureUnlockEquipNotify::treasureunequiped() const {
  return treasureunequiped_ != NULL ? *treasureunequiped_ : *default_instance_->treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockEquipNotify::mutable_treasureunequiped() {
  set_has_treasureunequiped();
  if (treasureunequiped_ == NULL) treasureunequiped_ = new ::TreasureData;
  return treasureunequiped_;
}
inline ::TreasureData* TreasureRpcTreasureUnlockEquipNotify::release_treasureunequiped() {
  clear_has_treasureunequiped();
  ::TreasureData* temp = treasureunequiped_;
  treasureunequiped_ = NULL;
  return temp;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_allocated_treasureunequiped(::TreasureData* treasureunequiped) {
  delete treasureunequiped_;
  treasureunequiped_ = treasureunequiped;
  if (treasureunequiped) {
    set_has_treasureunequiped();
  } else {
    clear_has_treasureunequiped();
  }
}

// optional int32 Points = 4 [default = -1];
inline bool TreasureRpcTreasureUnlockEquipNotify::has_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_has_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_has_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureRpcTreasureUnlockEquipNotify::clear_points() {
  points_ = -1;
  clear_has_points();
}
inline ::google::protobuf::int32 TreasureRpcTreasureUnlockEquipNotify::points() const {
  return points_;
}
inline void TreasureRpcTreasureUnlockEquipNotify::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TreasureRpc_2eproto__INCLUDED
