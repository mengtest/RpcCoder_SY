// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamRpc.proto

#ifndef PROTOBUF_TeamRpc_2eproto__INCLUDED
#define PROTOBUF_TeamRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TeamRpc_2eproto();
void protobuf_AssignDesc_TeamRpc_2eproto();
void protobuf_ShutdownFile_TeamRpc_2eproto();

class TeamRpcCreateTeamAsk;
class TeamRpcCreateTeamReply;
class TeamRpcLeaveTeamAsk;
class TeamRpcLeaveTeamReply;
class TeamRpcAppointTeamLeaderAsk;
class TeamRpcAppointTeamLeaderReply;
class TeamRpcNewLeaderNotify;
class TeamRpcKickMemberAsk;
class TeamRpcKickMemberReply;
class TeamRpcDissmissTeamAsk;
class TeamRpcDissmissTeamReply;
class TeamRpcAppointTeamLeaderNotify;
class TeamRpcKickMemberNotifyNotify;
class TeamRpcLeaveTeamNotifyNotify;
class TeamRpcJoinTeamNotifyNotify;
class TeamRpcDissmissTeamNotifyNotify;
class TeamRpcSurroundingTeamAsk;
class TeamRpcSurroundingTeamReply;
class TeamRpcApplyTeamAsk;
class TeamRpcApplyTeamReply;
class TeamRpcApplyTeamNotifyNotify;
class TeamRpcAgreeApplicantAsk;
class TeamRpcAgreeApplicantReply;
class TeamRpcAgreeApplicantNotifyNotify;
class TeamRpcTeamInfoNotify;
class TeamRpcUpdateTeamMemInfoNotify;
class TeamRpcFollowTeamLeaderAsk;
class TeamRpcFollowTeamLeaderReply;
class TeamRpcSummonMemberAsk;
class TeamRpcSummonMemberReply;
class TeamRpcSummonMemberNotifyNotify;
class TeamRpcChangeTeamTargetReply;
class TeamRpcChangeTeamTargetAsk;
class TeamRpcChangeTeamTargetNotifyNotify;
class TeamRpcChangTeamTypeAsk;
class TeamRpcChangTeamTypeReply;
class TeamRpcChangeTeamTypeNotifyNotify;
class TeamRpcInviteTeamMemberAsk;
class TeamRpcInviteTeamMemberReply;
class TeamRpcInviteTeamMemberNotifyNotify;
class TeamRpcApplyListNotifyNotify;
class TeamRpcAgreeJoinTeamAsk;
class TeamRpcAgreeJoinTeamReply;
class TeamRpcRefuseMemberAsk;
class TeamRpcRefuseMemberReply;
class TeamRpcClearApplyListReply;
class TeamRpcClearApplyListAsk;
class TeamRpcNoTeamInviteAsk;
class TeamRpcNoTeamInviteReply;
class TeamRpcRejectInviteAsk;
class TeamRpcRejectInviteReply;

// ===================================================================

class TeamRpcCreateTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcCreateTeamAsk();
  virtual ~TeamRpcCreateTeamAsk();

  TeamRpcCreateTeamAsk(const TeamRpcCreateTeamAsk& from);

  inline TeamRpcCreateTeamAsk& operator=(const TeamRpcCreateTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcCreateTeamAsk& default_instance();

  void Swap(TeamRpcCreateTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcCreateTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcCreateTeamAsk& from);
  void MergeFrom(const TeamRpcCreateTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TeamType = 2 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 2;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // optional .TeamTarget TTarget = 6;
  inline bool has_ttarget() const;
  inline void clear_ttarget();
  static const int kTTargetFieldNumber = 6;
  inline const ::TeamTarget& ttarget() const;
  inline ::TeamTarget* mutable_ttarget();
  inline ::TeamTarget* release_ttarget();
  inline void set_allocated_ttarget(::TeamTarget* ttarget);

  // @@protoc_insertion_point(class_scope:TeamRpcCreateTeamAsk)
 private:
  inline void set_has_teamtype();
  inline void clear_has_teamtype();
  inline void set_has_ttarget();
  inline void clear_has_ttarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamTarget* ttarget_;
  ::google::protobuf::int32 teamtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcCreateTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcCreateTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcCreateTeamReply();
  virtual ~TeamRpcCreateTeamReply();

  TeamRpcCreateTeamReply(const TeamRpcCreateTeamReply& from);

  inline TeamRpcCreateTeamReply& operator=(const TeamRpcCreateTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcCreateTeamReply& default_instance();

  void Swap(TeamRpcCreateTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcCreateTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcCreateTeamReply& from);
  void MergeFrom(const TeamRpcCreateTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TeamInfo Team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcCreateTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcCreateTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamAsk();
  virtual ~TeamRpcLeaveTeamAsk();

  TeamRpcLeaveTeamAsk(const TeamRpcLeaveTeamAsk& from);

  inline TeamRpcLeaveTeamAsk& operator=(const TeamRpcLeaveTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamAsk& default_instance();

  void Swap(TeamRpcLeaveTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamAsk& from);
  void MergeFrom(const TeamRpcLeaveTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamReply();
  virtual ~TeamRpcLeaveTeamReply();

  TeamRpcLeaveTeamReply(const TeamRpcLeaveTeamReply& from);

  inline TeamRpcLeaveTeamReply& operator=(const TeamRpcLeaveTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamReply& default_instance();

  void Swap(TeamRpcLeaveTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamReply& from);
  void MergeFrom(const TeamRpcLeaveTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderAsk : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderAsk();
  virtual ~TeamRpcAppointTeamLeaderAsk();

  TeamRpcAppointTeamLeaderAsk(const TeamRpcAppointTeamLeaderAsk& from);

  inline TeamRpcAppointTeamLeaderAsk& operator=(const TeamRpcAppointTeamLeaderAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderAsk& default_instance();

  void Swap(TeamRpcAppointTeamLeaderAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderAsk& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderReply : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderReply();
  virtual ~TeamRpcAppointTeamLeaderReply();

  TeamRpcAppointTeamLeaderReply(const TeamRpcAppointTeamLeaderReply& from);

  inline TeamRpcAppointTeamLeaderReply& operator=(const TeamRpcAppointTeamLeaderReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderReply& default_instance();

  void Swap(TeamRpcAppointTeamLeaderReply* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderReply& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 NewLeaderId = 2 [default = 0];
  inline bool has_newleaderid() const;
  inline void clear_newleaderid();
  static const int kNewLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 newleaderid() const;
  inline void set_newleaderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newleaderid();
  inline void clear_has_newleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 newleaderid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcNewLeaderNotify : public ::google::protobuf::Message {
 public:
  TeamRpcNewLeaderNotify();
  virtual ~TeamRpcNewLeaderNotify();

  TeamRpcNewLeaderNotify(const TeamRpcNewLeaderNotify& from);

  inline TeamRpcNewLeaderNotify& operator=(const TeamRpcNewLeaderNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcNewLeaderNotify& default_instance();

  void Swap(TeamRpcNewLeaderNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcNewLeaderNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcNewLeaderNotify& from);
  void MergeFrom(const TeamRpcNewLeaderNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Newleaderroleid = 1 [default = 0];
  inline bool has_newleaderroleid() const;
  inline void clear_newleaderroleid();
  static const int kNewleaderroleidFieldNumber = 1;
  inline ::google::protobuf::uint64 newleaderroleid() const;
  inline void set_newleaderroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcNewLeaderNotify)
 private:
  inline void set_has_newleaderroleid();
  inline void clear_has_newleaderroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 newleaderroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcNewLeaderNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberAsk : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberAsk();
  virtual ~TeamRpcKickMemberAsk();

  TeamRpcKickMemberAsk(const TeamRpcKickMemberAsk& from);

  inline TeamRpcKickMemberAsk& operator=(const TeamRpcKickMemberAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberAsk& default_instance();

  void Swap(TeamRpcKickMemberAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberAsk& from);
  void MergeFrom(const TeamRpcKickMemberAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 KickMemberRoleId = 1 [default = 0];
  inline bool has_kickmemberroleid() const;
  inline void clear_kickmemberroleid();
  static const int kKickMemberRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kickmemberroleid() const;
  inline void set_kickmemberroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberAsk)
 private:
  inline void set_has_kickmemberroleid();
  inline void clear_has_kickmemberroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kickmemberroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberReply : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberReply();
  virtual ~TeamRpcKickMemberReply();

  TeamRpcKickMemberReply(const TeamRpcKickMemberReply& from);

  inline TeamRpcKickMemberReply& operator=(const TeamRpcKickMemberReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberReply& default_instance();

  void Swap(TeamRpcKickMemberReply* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberReply& from);
  void MergeFrom(const TeamRpcKickMemberReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamAsk();
  virtual ~TeamRpcDissmissTeamAsk();

  TeamRpcDissmissTeamAsk(const TeamRpcDissmissTeamAsk& from);

  inline TeamRpcDissmissTeamAsk& operator=(const TeamRpcDissmissTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamAsk& default_instance();

  void Swap(TeamRpcDissmissTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamAsk& from);
  void MergeFrom(const TeamRpcDissmissTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamReply();
  virtual ~TeamRpcDissmissTeamReply();

  TeamRpcDissmissTeamReply(const TeamRpcDissmissTeamReply& from);

  inline TeamRpcDissmissTeamReply& operator=(const TeamRpcDissmissTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamReply& default_instance();

  void Swap(TeamRpcDissmissTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamReply& from);
  void MergeFrom(const TeamRpcDissmissTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderNotify : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderNotify();
  virtual ~TeamRpcAppointTeamLeaderNotify();

  TeamRpcAppointTeamLeaderNotify(const TeamRpcAppointTeamLeaderNotify& from);

  inline TeamRpcAppointTeamLeaderNotify& operator=(const TeamRpcAppointTeamLeaderNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderNotify& default_instance();

  void Swap(TeamRpcAppointTeamLeaderNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderNotify& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberNotifyNotify();
  virtual ~TeamRpcKickMemberNotifyNotify();

  TeamRpcKickMemberNotifyNotify(const TeamRpcKickMemberNotifyNotify& from);

  inline TeamRpcKickMemberNotifyNotify& operator=(const TeamRpcKickMemberNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberNotifyNotify& default_instance();

  void Swap(TeamRpcKickMemberNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberNotifyNotify& from);
  void MergeFrom(const TeamRpcKickMemberNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 KickedMemberRoleId = 1 [default = 0];
  inline bool has_kickedmemberroleid() const;
  inline void clear_kickedmemberroleid();
  static const int kKickedMemberRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kickedmemberroleid() const;
  inline void set_kickedmemberroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberNotifyNotify)
 private:
  inline void set_has_kickedmemberroleid();
  inline void clear_has_kickedmemberroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kickedmemberroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamNotifyNotify();
  virtual ~TeamRpcLeaveTeamNotifyNotify();

  TeamRpcLeaveTeamNotifyNotify(const TeamRpcLeaveTeamNotifyNotify& from);

  inline TeamRpcLeaveTeamNotifyNotify& operator=(const TeamRpcLeaveTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamNotifyNotify& default_instance();

  void Swap(TeamRpcLeaveTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcLeaveTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional uint64 NewLeaderRoleId = 2 [default = 0];
  inline bool has_newleaderroleid() const;
  inline void clear_newleaderroleid();
  static const int kNewLeaderRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 newleaderroleid() const;
  inline void set_newleaderroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamNotifyNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_newleaderroleid();
  inline void clear_has_newleaderroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint64 newleaderroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcJoinTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcJoinTeamNotifyNotify();
  virtual ~TeamRpcJoinTeamNotifyNotify();

  TeamRpcJoinTeamNotifyNotify(const TeamRpcJoinTeamNotifyNotify& from);

  inline TeamRpcJoinTeamNotifyNotify& operator=(const TeamRpcJoinTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcJoinTeamNotifyNotify& default_instance();

  void Swap(TeamRpcJoinTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcJoinTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcJoinTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcJoinTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // optional .TeamInfo Team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcJoinTeamNotifyNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;
  ::TeamInfo* team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcJoinTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamNotifyNotify();
  virtual ~TeamRpcDissmissTeamNotifyNotify();

  TeamRpcDissmissTeamNotifyNotify(const TeamRpcDissmissTeamNotifyNotify& from);

  inline TeamRpcDissmissTeamNotifyNotify& operator=(const TeamRpcDissmissTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamNotifyNotify& default_instance();

  void Swap(TeamRpcDissmissTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcDissmissTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSurroundingTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcSurroundingTeamAsk();
  virtual ~TeamRpcSurroundingTeamAsk();

  TeamRpcSurroundingTeamAsk(const TeamRpcSurroundingTeamAsk& from);

  inline TeamRpcSurroundingTeamAsk& operator=(const TeamRpcSurroundingTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSurroundingTeamAsk& default_instance();

  void Swap(TeamRpcSurroundingTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcSurroundingTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSurroundingTeamAsk& from);
  void MergeFrom(const TeamRpcSurroundingTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TargetGroupId = 2 [default = -1];
  inline bool has_targetgroupid() const;
  inline void clear_targetgroupid();
  static const int kTargetGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 targetgroupid() const;
  inline void set_targetgroupid(::google::protobuf::int32 value);

  // optional int32 TargetGroup = 3 [default = 0];
  inline bool has_targetgroup() const;
  inline void clear_targetgroup();
  static const int kTargetGroupFieldNumber = 3;
  inline ::google::protobuf::int32 targetgroup() const;
  inline void set_targetgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcSurroundingTeamAsk)
 private:
  inline void set_has_targetgroupid();
  inline void clear_has_targetgroupid();
  inline void set_has_targetgroup();
  inline void clear_has_targetgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 targetgroupid_;
  ::google::protobuf::int32 targetgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSurroundingTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSurroundingTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcSurroundingTeamReply();
  virtual ~TeamRpcSurroundingTeamReply();

  TeamRpcSurroundingTeamReply(const TeamRpcSurroundingTeamReply& from);

  inline TeamRpcSurroundingTeamReply& operator=(const TeamRpcSurroundingTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSurroundingTeamReply& default_instance();

  void Swap(TeamRpcSurroundingTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcSurroundingTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSurroundingTeamReply& from);
  void MergeFrom(const TeamRpcSurroundingTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .TeamInfo TeamsInfo = 2;
  inline int teamsinfo_size() const;
  inline void clear_teamsinfo();
  static const int kTeamsInfoFieldNumber = 2;
  inline const ::TeamInfo& teamsinfo(int index) const;
  inline ::TeamInfo* mutable_teamsinfo(int index);
  inline ::TeamInfo* add_teamsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::TeamInfo >&
      teamsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::TeamInfo >*
      mutable_teamsinfo();

  // optional int32 TargetGroupId = 5 [default = -1];
  inline bool has_targetgroupid() const;
  inline void clear_targetgroupid();
  static const int kTargetGroupIdFieldNumber = 5;
  inline ::google::protobuf::int32 targetgroupid() const;
  inline void set_targetgroupid(::google::protobuf::int32 value);

  // optional int32 TargetGroup = 6 [default = 0];
  inline bool has_targetgroup() const;
  inline void clear_targetgroup();
  static const int kTargetGroupFieldNumber = 6;
  inline ::google::protobuf::int32 targetgroup() const;
  inline void set_targetgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcSurroundingTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_targetgroupid();
  inline void clear_has_targetgroupid();
  inline void set_has_targetgroup();
  inline void clear_has_targetgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TeamInfo > teamsinfo_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 targetgroupid_;
  ::google::protobuf::int32 targetgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSurroundingTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamAsk();
  virtual ~TeamRpcApplyTeamAsk();

  TeamRpcApplyTeamAsk(const TeamRpcApplyTeamAsk& from);

  inline TeamRpcApplyTeamAsk& operator=(const TeamRpcApplyTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamAsk& default_instance();

  void Swap(TeamRpcApplyTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamAsk& from);
  void MergeFrom(const TeamRpcApplyTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamReply();
  virtual ~TeamRpcApplyTeamReply();

  TeamRpcApplyTeamReply(const TeamRpcApplyTeamReply& from);

  inline TeamRpcApplyTeamReply& operator=(const TeamRpcApplyTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamReply& default_instance();

  void Swap(TeamRpcApplyTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamReply& from);
  void MergeFrom(const TeamRpcApplyTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 TeamId = 2 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamNotifyNotify();
  virtual ~TeamRpcApplyTeamNotifyNotify();

  TeamRpcApplyTeamNotifyNotify(const TeamRpcApplyTeamNotifyNotify& from);

  inline TeamRpcApplyTeamNotifyNotify& operator=(const TeamRpcApplyTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamNotifyNotify& default_instance();

  void Swap(TeamRpcApplyTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcApplyTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamNotifyNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantAsk : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantAsk();
  virtual ~TeamRpcAgreeApplicantAsk();

  TeamRpcAgreeApplicantAsk(const TeamRpcAgreeApplicantAsk& from);

  inline TeamRpcAgreeApplicantAsk& operator=(const TeamRpcAgreeApplicantAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantAsk& default_instance();

  void Swap(TeamRpcAgreeApplicantAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantAsk& from);
  void MergeFrom(const TeamRpcAgreeApplicantAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantReply : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantReply();
  virtual ~TeamRpcAgreeApplicantReply();

  TeamRpcAgreeApplicantReply(const TeamRpcAgreeApplicantReply& from);

  inline TeamRpcAgreeApplicantReply& operator=(const TeamRpcAgreeApplicantReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantReply& default_instance();

  void Swap(TeamRpcAgreeApplicantReply* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantReply& from);
  void MergeFrom(const TeamRpcAgreeApplicantReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantNotifyNotify();
  virtual ~TeamRpcAgreeApplicantNotifyNotify();

  TeamRpcAgreeApplicantNotifyNotify(const TeamRpcAgreeApplicantNotifyNotify& from);

  inline TeamRpcAgreeApplicantNotifyNotify& operator=(const TeamRpcAgreeApplicantNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantNotifyNotify& default_instance();

  void Swap(TeamRpcAgreeApplicantNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantNotifyNotify& from);
  void MergeFrom(const TeamRpcAgreeApplicantNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamInfo Team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantNotifyNotify)
 private:
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcTeamInfoNotify : public ::google::protobuf::Message {
 public:
  TeamRpcTeamInfoNotify();
  virtual ~TeamRpcTeamInfoNotify();

  TeamRpcTeamInfoNotify(const TeamRpcTeamInfoNotify& from);

  inline TeamRpcTeamInfoNotify& operator=(const TeamRpcTeamInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcTeamInfoNotify& default_instance();

  void Swap(TeamRpcTeamInfoNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcTeamInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcTeamInfoNotify& from);
  void MergeFrom(const TeamRpcTeamInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamInfo Team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // optional int32 FollowTeamLeader = 2 [default = -1];
  inline bool has_followteamleader() const;
  inline void clear_followteamleader();
  static const int kFollowTeamLeaderFieldNumber = 2;
  inline ::google::protobuf::int32 followteamleader() const;
  inline void set_followteamleader(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcTeamInfoNotify)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_followteamleader();
  inline void clear_has_followteamleader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;
  ::google::protobuf::int32 followteamleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcTeamInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcUpdateTeamMemInfoNotify : public ::google::protobuf::Message {
 public:
  TeamRpcUpdateTeamMemInfoNotify();
  virtual ~TeamRpcUpdateTeamMemInfoNotify();

  TeamRpcUpdateTeamMemInfoNotify(const TeamRpcUpdateTeamMemInfoNotify& from);

  inline TeamRpcUpdateTeamMemInfoNotify& operator=(const TeamRpcUpdateTeamMemInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcUpdateTeamMemInfoNotify& default_instance();

  void Swap(TeamRpcUpdateTeamMemInfoNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcUpdateTeamMemInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcUpdateTeamMemInfoNotify& from);
  void MergeFrom(const TeamRpcUpdateTeamMemInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcUpdateTeamMemInfoNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcUpdateTeamMemInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcFollowTeamLeaderAsk : public ::google::protobuf::Message {
 public:
  TeamRpcFollowTeamLeaderAsk();
  virtual ~TeamRpcFollowTeamLeaderAsk();

  TeamRpcFollowTeamLeaderAsk(const TeamRpcFollowTeamLeaderAsk& from);

  inline TeamRpcFollowTeamLeaderAsk& operator=(const TeamRpcFollowTeamLeaderAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcFollowTeamLeaderAsk& default_instance();

  void Swap(TeamRpcFollowTeamLeaderAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcFollowTeamLeaderAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcFollowTeamLeaderAsk& from);
  void MergeFrom(const TeamRpcFollowTeamLeaderAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 FollowTeamLeader = 1 [default = -1];
  inline bool has_followteamleader() const;
  inline void clear_followteamleader();
  static const int kFollowTeamLeaderFieldNumber = 1;
  inline ::google::protobuf::int32 followteamleader() const;
  inline void set_followteamleader(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcFollowTeamLeaderAsk)
 private:
  inline void set_has_followteamleader();
  inline void clear_has_followteamleader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 followteamleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcFollowTeamLeaderAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcFollowTeamLeaderReply : public ::google::protobuf::Message {
 public:
  TeamRpcFollowTeamLeaderReply();
  virtual ~TeamRpcFollowTeamLeaderReply();

  TeamRpcFollowTeamLeaderReply(const TeamRpcFollowTeamLeaderReply& from);

  inline TeamRpcFollowTeamLeaderReply& operator=(const TeamRpcFollowTeamLeaderReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcFollowTeamLeaderReply& default_instance();

  void Swap(TeamRpcFollowTeamLeaderReply* other);

  // implements Message ----------------------------------------------

  TeamRpcFollowTeamLeaderReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcFollowTeamLeaderReply& from);
  void MergeFrom(const TeamRpcFollowTeamLeaderReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 FollowTeamLeader = 2 [default = -1];
  inline bool has_followteamleader() const;
  inline void clear_followteamleader();
  static const int kFollowTeamLeaderFieldNumber = 2;
  inline ::google::protobuf::int32 followteamleader() const;
  inline void set_followteamleader(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcFollowTeamLeaderReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_followteamleader();
  inline void clear_has_followteamleader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 followteamleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcFollowTeamLeaderReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSummonMemberAsk : public ::google::protobuf::Message {
 public:
  TeamRpcSummonMemberAsk();
  virtual ~TeamRpcSummonMemberAsk();

  TeamRpcSummonMemberAsk(const TeamRpcSummonMemberAsk& from);

  inline TeamRpcSummonMemberAsk& operator=(const TeamRpcSummonMemberAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSummonMemberAsk& default_instance();

  void Swap(TeamRpcSummonMemberAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcSummonMemberAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSummonMemberAsk& from);
  void MergeFrom(const TeamRpcSummonMemberAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcSummonMemberAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSummonMemberAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSummonMemberReply : public ::google::protobuf::Message {
 public:
  TeamRpcSummonMemberReply();
  virtual ~TeamRpcSummonMemberReply();

  TeamRpcSummonMemberReply(const TeamRpcSummonMemberReply& from);

  inline TeamRpcSummonMemberReply& operator=(const TeamRpcSummonMemberReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSummonMemberReply& default_instance();

  void Swap(TeamRpcSummonMemberReply* other);

  // implements Message ----------------------------------------------

  TeamRpcSummonMemberReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSummonMemberReply& from);
  void MergeFrom(const TeamRpcSummonMemberReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcSummonMemberReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSummonMemberReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSummonMemberNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcSummonMemberNotifyNotify();
  virtual ~TeamRpcSummonMemberNotifyNotify();

  TeamRpcSummonMemberNotifyNotify(const TeamRpcSummonMemberNotifyNotify& from);

  inline TeamRpcSummonMemberNotifyNotify& operator=(const TeamRpcSummonMemberNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSummonMemberNotifyNotify& default_instance();

  void Swap(TeamRpcSummonMemberNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcSummonMemberNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSummonMemberNotifyNotify& from);
  void MergeFrom(const TeamRpcSummonMemberNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcSummonMemberNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSummonMemberNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangeTeamTargetReply : public ::google::protobuf::Message {
 public:
  TeamRpcChangeTeamTargetReply();
  virtual ~TeamRpcChangeTeamTargetReply();

  TeamRpcChangeTeamTargetReply(const TeamRpcChangeTeamTargetReply& from);

  inline TeamRpcChangeTeamTargetReply& operator=(const TeamRpcChangeTeamTargetReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangeTeamTargetReply& default_instance();

  void Swap(TeamRpcChangeTeamTargetReply* other);

  // implements Message ----------------------------------------------

  TeamRpcChangeTeamTargetReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangeTeamTargetReply& from);
  void MergeFrom(const TeamRpcChangeTeamTargetReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TeamTarget TeamTarget = 2;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamTargetFieldNumber = 2;
  inline const ::TeamTarget& teamtarget() const;
  inline ::TeamTarget* mutable_teamtarget();
  inline ::TeamTarget* release_teamtarget();
  inline void set_allocated_teamtarget(::TeamTarget* teamtarget);

  // @@protoc_insertion_point(class_scope:TeamRpcChangeTeamTargetReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamTarget* teamtarget_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangeTeamTargetReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangeTeamTargetAsk : public ::google::protobuf::Message {
 public:
  TeamRpcChangeTeamTargetAsk();
  virtual ~TeamRpcChangeTeamTargetAsk();

  TeamRpcChangeTeamTargetAsk(const TeamRpcChangeTeamTargetAsk& from);

  inline TeamRpcChangeTeamTargetAsk& operator=(const TeamRpcChangeTeamTargetAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangeTeamTargetAsk& default_instance();

  void Swap(TeamRpcChangeTeamTargetAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcChangeTeamTargetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangeTeamTargetAsk& from);
  void MergeFrom(const TeamRpcChangeTeamTargetAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TargetType = 2 [default = -1];
  inline bool has_targettype() const;
  inline void clear_targettype();
  static const int kTargetTypeFieldNumber = 2;
  inline ::google::protobuf::int32 targettype() const;
  inline void set_targettype(::google::protobuf::int32 value);

  // optional int32 Id = 3 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 MinLevel = 4 [default = -1];
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 4;
  inline ::google::protobuf::int32 minlevel() const;
  inline void set_minlevel(::google::protobuf::int32 value);

  // optional int32 MaxLevel = 5 [default = -1];
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 5;
  inline ::google::protobuf::int32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::int32 value);

  // repeated int32 Function = 6;
  inline int function_size() const;
  inline void clear_function();
  static const int kFunctionFieldNumber = 6;
  inline ::google::protobuf::int32 function(int index) const;
  inline void set_function(int index, ::google::protobuf::int32 value);
  inline void add_function(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      function() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_function();

  // @@protoc_insertion_point(class_scope:TeamRpcChangeTeamTargetAsk)
 private:
  inline void set_has_targettype();
  inline void clear_has_targettype();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_minlevel();
  inline void clear_has_minlevel();
  inline void set_has_maxlevel();
  inline void clear_has_maxlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 targettype_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 minlevel_;
  ::google::protobuf::int32 maxlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > function_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangeTeamTargetAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangeTeamTargetNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcChangeTeamTargetNotifyNotify();
  virtual ~TeamRpcChangeTeamTargetNotifyNotify();

  TeamRpcChangeTeamTargetNotifyNotify(const TeamRpcChangeTeamTargetNotifyNotify& from);

  inline TeamRpcChangeTeamTargetNotifyNotify& operator=(const TeamRpcChangeTeamTargetNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangeTeamTargetNotifyNotify& default_instance();

  void Swap(TeamRpcChangeTeamTargetNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcChangeTeamTargetNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangeTeamTargetNotifyNotify& from);
  void MergeFrom(const TeamRpcChangeTeamTargetNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamTarget TeamTarget = 1;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamTargetFieldNumber = 1;
  inline const ::TeamTarget& teamtarget() const;
  inline ::TeamTarget* mutable_teamtarget();
  inline ::TeamTarget* release_teamtarget();
  inline void set_allocated_teamtarget(::TeamTarget* teamtarget);

  // @@protoc_insertion_point(class_scope:TeamRpcChangeTeamTargetNotifyNotify)
 private:
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamTarget* teamtarget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangeTeamTargetNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangTeamTypeAsk : public ::google::protobuf::Message {
 public:
  TeamRpcChangTeamTypeAsk();
  virtual ~TeamRpcChangTeamTypeAsk();

  TeamRpcChangTeamTypeAsk(const TeamRpcChangTeamTypeAsk& from);

  inline TeamRpcChangTeamTypeAsk& operator=(const TeamRpcChangTeamTypeAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangTeamTypeAsk& default_instance();

  void Swap(TeamRpcChangTeamTypeAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcChangTeamTypeAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangTeamTypeAsk& from);
  void MergeFrom(const TeamRpcChangTeamTypeAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TeamType = 1 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 1;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcChangTeamTypeAsk)
 private:
  inline void set_has_teamtype();
  inline void clear_has_teamtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangTeamTypeAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangTeamTypeReply : public ::google::protobuf::Message {
 public:
  TeamRpcChangTeamTypeReply();
  virtual ~TeamRpcChangTeamTypeReply();

  TeamRpcChangTeamTypeReply(const TeamRpcChangTeamTypeReply& from);

  inline TeamRpcChangTeamTypeReply& operator=(const TeamRpcChangTeamTypeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangTeamTypeReply& default_instance();

  void Swap(TeamRpcChangTeamTypeReply* other);

  // implements Message ----------------------------------------------

  TeamRpcChangTeamTypeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangTeamTypeReply& from);
  void MergeFrom(const TeamRpcChangTeamTypeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 TeamType = 2 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 2;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // optional .TeamTarget TeamTarget = 3;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamTargetFieldNumber = 3;
  inline const ::TeamTarget& teamtarget() const;
  inline ::TeamTarget* mutable_teamtarget();
  inline ::TeamTarget* release_teamtarget();
  inline void set_allocated_teamtarget(::TeamTarget* teamtarget);

  // @@protoc_insertion_point(class_scope:TeamRpcChangTeamTypeReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamtype();
  inline void clear_has_teamtype();
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 teamtype_;
  ::TeamTarget* teamtarget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangTeamTypeReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcChangeTeamTypeNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcChangeTeamTypeNotifyNotify();
  virtual ~TeamRpcChangeTeamTypeNotifyNotify();

  TeamRpcChangeTeamTypeNotifyNotify(const TeamRpcChangeTeamTypeNotifyNotify& from);

  inline TeamRpcChangeTeamTypeNotifyNotify& operator=(const TeamRpcChangeTeamTypeNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcChangeTeamTypeNotifyNotify& default_instance();

  void Swap(TeamRpcChangeTeamTypeNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcChangeTeamTypeNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcChangeTeamTypeNotifyNotify& from);
  void MergeFrom(const TeamRpcChangeTeamTypeNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TeamType = 1 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 1;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // optional .TeamTarget TeamTarget = 2;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamTargetFieldNumber = 2;
  inline const ::TeamTarget& teamtarget() const;
  inline ::TeamTarget* mutable_teamtarget();
  inline ::TeamTarget* release_teamtarget();
  inline void set_allocated_teamtarget(::TeamTarget* teamtarget);

  // @@protoc_insertion_point(class_scope:TeamRpcChangeTeamTypeNotifyNotify)
 private:
  inline void set_has_teamtype();
  inline void clear_has_teamtype();
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamTarget* teamtarget_;
  ::google::protobuf::int32 teamtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcChangeTeamTypeNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcInviteTeamMemberAsk : public ::google::protobuf::Message {
 public:
  TeamRpcInviteTeamMemberAsk();
  virtual ~TeamRpcInviteTeamMemberAsk();

  TeamRpcInviteTeamMemberAsk(const TeamRpcInviteTeamMemberAsk& from);

  inline TeamRpcInviteTeamMemberAsk& operator=(const TeamRpcInviteTeamMemberAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcInviteTeamMemberAsk& default_instance();

  void Swap(TeamRpcInviteTeamMemberAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcInviteTeamMemberAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcInviteTeamMemberAsk& from);
  void MergeFrom(const TeamRpcInviteTeamMemberAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 RoleId = 1;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::uint64 value);
  inline void add_roleid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleid();

  // @@protoc_insertion_point(class_scope:TeamRpcInviteTeamMemberAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcInviteTeamMemberAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcInviteTeamMemberReply : public ::google::protobuf::Message {
 public:
  TeamRpcInviteTeamMemberReply();
  virtual ~TeamRpcInviteTeamMemberReply();

  TeamRpcInviteTeamMemberReply(const TeamRpcInviteTeamMemberReply& from);

  inline TeamRpcInviteTeamMemberReply& operator=(const TeamRpcInviteTeamMemberReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcInviteTeamMemberReply& default_instance();

  void Swap(TeamRpcInviteTeamMemberReply* other);

  // implements Message ----------------------------------------------

  TeamRpcInviteTeamMemberReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcInviteTeamMemberReply& from);
  void MergeFrom(const TeamRpcInviteTeamMemberReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated uint64 RoleId = 2;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::uint64 value);
  inline void add_roleid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleid();

  // @@protoc_insertion_point(class_scope:TeamRpcInviteTeamMemberReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcInviteTeamMemberReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcInviteTeamMemberNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcInviteTeamMemberNotifyNotify();
  virtual ~TeamRpcInviteTeamMemberNotifyNotify();

  TeamRpcInviteTeamMemberNotifyNotify(const TeamRpcInviteTeamMemberNotifyNotify& from);

  inline TeamRpcInviteTeamMemberNotifyNotify& operator=(const TeamRpcInviteTeamMemberNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcInviteTeamMemberNotifyNotify& default_instance();

  void Swap(TeamRpcInviteTeamMemberNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcInviteTeamMemberNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcInviteTeamMemberNotifyNotify& from);
  void MergeFrom(const TeamRpcInviteTeamMemberNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional int32 IsLeader = 5 [default = -1];
  inline bool has_isleader() const;
  inline void clear_isleader();
  static const int kIsLeaderFieldNumber = 5;
  inline ::google::protobuf::int32 isleader() const;
  inline void set_isleader(::google::protobuf::int32 value);

  // optional .TeamMemberInfo InviteMemberInfo = 6;
  inline bool has_invitememberinfo() const;
  inline void clear_invitememberinfo();
  static const int kInviteMemberInfoFieldNumber = 6;
  inline const ::TeamMemberInfo& invitememberinfo() const;
  inline ::TeamMemberInfo* mutable_invitememberinfo();
  inline ::TeamMemberInfo* release_invitememberinfo();
  inline void set_allocated_invitememberinfo(::TeamMemberInfo* invitememberinfo);

  // @@protoc_insertion_point(class_scope:TeamRpcInviteTeamMemberNotifyNotify)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_isleader();
  inline void clear_has_isleader();
  inline void set_has_invitememberinfo();
  inline void clear_has_invitememberinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::TeamMemberInfo* invitememberinfo_;
  ::google::protobuf::int32 isleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcInviteTeamMemberNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyListNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcApplyListNotifyNotify();
  virtual ~TeamRpcApplyListNotifyNotify();

  TeamRpcApplyListNotifyNotify(const TeamRpcApplyListNotifyNotify& from);

  inline TeamRpcApplyListNotifyNotify& operator=(const TeamRpcApplyListNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyListNotifyNotify& default_instance();

  void Swap(TeamRpcApplyListNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyListNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyListNotifyNotify& from);
  void MergeFrom(const TeamRpcApplyListNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TeamMemberInfo ApplyList = 1;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 1;
  inline const ::TeamMemberInfo& applylist(int index) const;
  inline ::TeamMemberInfo* mutable_applylist(int index);
  inline ::TeamMemberInfo* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::TeamMemberInfo >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TeamMemberInfo >*
      mutable_applylist();

  // @@protoc_insertion_point(class_scope:TeamRpcApplyListNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TeamMemberInfo > applylist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyListNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeJoinTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeJoinTeamAsk();
  virtual ~TeamRpcAgreeJoinTeamAsk();

  TeamRpcAgreeJoinTeamAsk(const TeamRpcAgreeJoinTeamAsk& from);

  inline TeamRpcAgreeJoinTeamAsk& operator=(const TeamRpcAgreeJoinTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeJoinTeamAsk& default_instance();

  void Swap(TeamRpcAgreeJoinTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeJoinTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeJoinTeamAsk& from);
  void MergeFrom(const TeamRpcAgreeJoinTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional int32 IsLeader = 2 [default = -1];
  inline bool has_isleader() const;
  inline void clear_isleader();
  static const int kIsLeaderFieldNumber = 2;
  inline ::google::protobuf::int32 isleader() const;
  inline void set_isleader(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeJoinTeamAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_isleader();
  inline void clear_has_isleader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::int32 isleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeJoinTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeJoinTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeJoinTeamReply();
  virtual ~TeamRpcAgreeJoinTeamReply();

  TeamRpcAgreeJoinTeamReply(const TeamRpcAgreeJoinTeamReply& from);

  inline TeamRpcAgreeJoinTeamReply& operator=(const TeamRpcAgreeJoinTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeJoinTeamReply& default_instance();

  void Swap(TeamRpcAgreeJoinTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeJoinTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeJoinTeamReply& from);
  void MergeFrom(const TeamRpcAgreeJoinTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeJoinTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeJoinTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcRefuseMemberAsk : public ::google::protobuf::Message {
 public:
  TeamRpcRefuseMemberAsk();
  virtual ~TeamRpcRefuseMemberAsk();

  TeamRpcRefuseMemberAsk(const TeamRpcRefuseMemberAsk& from);

  inline TeamRpcRefuseMemberAsk& operator=(const TeamRpcRefuseMemberAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcRefuseMemberAsk& default_instance();

  void Swap(TeamRpcRefuseMemberAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcRefuseMemberAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcRefuseMemberAsk& from);
  void MergeFrom(const TeamRpcRefuseMemberAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcRefuseMemberAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcRefuseMemberAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcRefuseMemberReply : public ::google::protobuf::Message {
 public:
  TeamRpcRefuseMemberReply();
  virtual ~TeamRpcRefuseMemberReply();

  TeamRpcRefuseMemberReply(const TeamRpcRefuseMemberReply& from);

  inline TeamRpcRefuseMemberReply& operator=(const TeamRpcRefuseMemberReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcRefuseMemberReply& default_instance();

  void Swap(TeamRpcRefuseMemberReply* other);

  // implements Message ----------------------------------------------

  TeamRpcRefuseMemberReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcRefuseMemberReply& from);
  void MergeFrom(const TeamRpcRefuseMemberReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcRefuseMemberReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcRefuseMemberReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcClearApplyListReply : public ::google::protobuf::Message {
 public:
  TeamRpcClearApplyListReply();
  virtual ~TeamRpcClearApplyListReply();

  TeamRpcClearApplyListReply(const TeamRpcClearApplyListReply& from);

  inline TeamRpcClearApplyListReply& operator=(const TeamRpcClearApplyListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcClearApplyListReply& default_instance();

  void Swap(TeamRpcClearApplyListReply* other);

  // implements Message ----------------------------------------------

  TeamRpcClearApplyListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcClearApplyListReply& from);
  void MergeFrom(const TeamRpcClearApplyListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcClearApplyListReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcClearApplyListReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcClearApplyListAsk : public ::google::protobuf::Message {
 public:
  TeamRpcClearApplyListAsk();
  virtual ~TeamRpcClearApplyListAsk();

  TeamRpcClearApplyListAsk(const TeamRpcClearApplyListAsk& from);

  inline TeamRpcClearApplyListAsk& operator=(const TeamRpcClearApplyListAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcClearApplyListAsk& default_instance();

  void Swap(TeamRpcClearApplyListAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcClearApplyListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcClearApplyListAsk& from);
  void MergeFrom(const TeamRpcClearApplyListAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcClearApplyListAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcClearApplyListAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcNoTeamInviteAsk : public ::google::protobuf::Message {
 public:
  TeamRpcNoTeamInviteAsk();
  virtual ~TeamRpcNoTeamInviteAsk();

  TeamRpcNoTeamInviteAsk(const TeamRpcNoTeamInviteAsk& from);

  inline TeamRpcNoTeamInviteAsk& operator=(const TeamRpcNoTeamInviteAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcNoTeamInviteAsk& default_instance();

  void Swap(TeamRpcNoTeamInviteAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcNoTeamInviteAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcNoTeamInviteAsk& from);
  void MergeFrom(const TeamRpcNoTeamInviteAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TeamType = 1 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 1;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // optional .TeamTarget TTarget = 2;
  inline bool has_ttarget() const;
  inline void clear_ttarget();
  static const int kTTargetFieldNumber = 2;
  inline const ::TeamTarget& ttarget() const;
  inline ::TeamTarget* mutable_ttarget();
  inline ::TeamTarget* release_ttarget();
  inline void set_allocated_ttarget(::TeamTarget* ttarget);

  // optional uint64 InviteRoleId = 3 [default = 0];
  inline bool has_inviteroleid() const;
  inline void clear_inviteroleid();
  static const int kInviteRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 inviteroleid() const;
  inline void set_inviteroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcNoTeamInviteAsk)
 private:
  inline void set_has_teamtype();
  inline void clear_has_teamtype();
  inline void set_has_ttarget();
  inline void clear_has_ttarget();
  inline void set_has_inviteroleid();
  inline void clear_has_inviteroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamTarget* ttarget_;
  ::google::protobuf::uint64 inviteroleid_;
  ::google::protobuf::int32 teamtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcNoTeamInviteAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcNoTeamInviteReply : public ::google::protobuf::Message {
 public:
  TeamRpcNoTeamInviteReply();
  virtual ~TeamRpcNoTeamInviteReply();

  TeamRpcNoTeamInviteReply(const TeamRpcNoTeamInviteReply& from);

  inline TeamRpcNoTeamInviteReply& operator=(const TeamRpcNoTeamInviteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcNoTeamInviteReply& default_instance();

  void Swap(TeamRpcNoTeamInviteReply* other);

  // implements Message ----------------------------------------------

  TeamRpcNoTeamInviteReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcNoTeamInviteReply& from);
  void MergeFrom(const TeamRpcNoTeamInviteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TeamInfo Team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcNoTeamInviteReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcNoTeamInviteReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcRejectInviteAsk : public ::google::protobuf::Message {
 public:
  TeamRpcRejectInviteAsk();
  virtual ~TeamRpcRejectInviteAsk();

  TeamRpcRejectInviteAsk(const TeamRpcRejectInviteAsk& from);

  inline TeamRpcRejectInviteAsk& operator=(const TeamRpcRejectInviteAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcRejectInviteAsk& default_instance();

  void Swap(TeamRpcRejectInviteAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcRejectInviteAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcRejectInviteAsk& from);
  void MergeFrom(const TeamRpcRejectInviteAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 3 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:TeamRpcRejectInviteAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcRejectInviteAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcRejectInviteReply : public ::google::protobuf::Message {
 public:
  TeamRpcRejectInviteReply();
  virtual ~TeamRpcRejectInviteReply();

  TeamRpcRejectInviteReply(const TeamRpcRejectInviteReply& from);

  inline TeamRpcRejectInviteReply& operator=(const TeamRpcRejectInviteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcRejectInviteReply& default_instance();

  void Swap(TeamRpcRejectInviteReply* other);

  // implements Message ----------------------------------------------

  TeamRpcRejectInviteReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcRejectInviteReply& from);
  void MergeFrom(const TeamRpcRejectInviteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcRejectInviteReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcRejectInviteReply* default_instance_;
};
// ===================================================================


// ===================================================================

// TeamRpcCreateTeamAsk

// optional int32 TeamType = 2 [default = -1];
inline bool TeamRpcCreateTeamAsk::has_teamtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcCreateTeamAsk::set_has_teamtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcCreateTeamAsk::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcCreateTeamAsk::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcCreateTeamAsk::teamtype() const {
  return teamtype_;
}
inline void TeamRpcCreateTeamAsk::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// optional .TeamTarget TTarget = 6;
inline bool TeamRpcCreateTeamAsk::has_ttarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcCreateTeamAsk::set_has_ttarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcCreateTeamAsk::clear_has_ttarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcCreateTeamAsk::clear_ttarget() {
  if (ttarget_ != NULL) ttarget_->::TeamTarget::Clear();
  clear_has_ttarget();
}
inline const ::TeamTarget& TeamRpcCreateTeamAsk::ttarget() const {
  return ttarget_ != NULL ? *ttarget_ : *default_instance_->ttarget_;
}
inline ::TeamTarget* TeamRpcCreateTeamAsk::mutable_ttarget() {
  set_has_ttarget();
  if (ttarget_ == NULL) ttarget_ = new ::TeamTarget;
  return ttarget_;
}
inline ::TeamTarget* TeamRpcCreateTeamAsk::release_ttarget() {
  clear_has_ttarget();
  ::TeamTarget* temp = ttarget_;
  ttarget_ = NULL;
  return temp;
}
inline void TeamRpcCreateTeamAsk::set_allocated_ttarget(::TeamTarget* ttarget) {
  delete ttarget_;
  ttarget_ = ttarget;
  if (ttarget) {
    set_has_ttarget();
  } else {
    clear_has_ttarget();
  }
}

// -------------------------------------------------------------------

// TeamRpcCreateTeamReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcCreateTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcCreateTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcCreateTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcCreateTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcCreateTeamReply::result() const {
  return result_;
}
inline void TeamRpcCreateTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TeamInfo Team = 2;
inline bool TeamRpcCreateTeamReply::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcCreateTeamReply::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcCreateTeamReply::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcCreateTeamReply::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcCreateTeamReply::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcCreateTeamReply::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcCreateTeamReply::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcCreateTeamReply::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcLeaveTeamAsk

// -------------------------------------------------------------------

// TeamRpcLeaveTeamReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcLeaveTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcLeaveTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcLeaveTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcLeaveTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcLeaveTeamReply::result() const {
  return result_;
}
inline void TeamRpcLeaveTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool TeamRpcAppointTeamLeaderAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAppointTeamLeaderAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAppointTeamLeaderAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAppointTeamLeaderAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcAppointTeamLeaderAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcAppointTeamLeaderAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcAppointTeamLeaderReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAppointTeamLeaderReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcAppointTeamLeaderReply::result() const {
  return result_;
}
inline void TeamRpcAppointTeamLeaderReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 NewLeaderId = 2 [default = 0];
inline bool TeamRpcAppointTeamLeaderReply::has_newleaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcAppointTeamLeaderReply::set_has_newleaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_has_newleaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_newleaderid() {
  newleaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderid();
}
inline ::google::protobuf::uint64 TeamRpcAppointTeamLeaderReply::newleaderid() const {
  return newleaderid_;
}
inline void TeamRpcAppointTeamLeaderReply::set_newleaderid(::google::protobuf::uint64 value) {
  set_has_newleaderid();
  newleaderid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcNewLeaderNotify

// optional uint64 Newleaderroleid = 1 [default = 0];
inline bool TeamRpcNewLeaderNotify::has_newleaderroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcNewLeaderNotify::set_has_newleaderroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcNewLeaderNotify::clear_has_newleaderroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcNewLeaderNotify::clear_newleaderroleid() {
  newleaderroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderroleid();
}
inline ::google::protobuf::uint64 TeamRpcNewLeaderNotify::newleaderroleid() const {
  return newleaderroleid_;
}
inline void TeamRpcNewLeaderNotify::set_newleaderroleid(::google::protobuf::uint64 value) {
  set_has_newleaderroleid();
  newleaderroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcKickMemberAsk

// optional uint64 KickMemberRoleId = 1 [default = 0];
inline bool TeamRpcKickMemberAsk::has_kickmemberroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberAsk::set_has_kickmemberroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberAsk::clear_has_kickmemberroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberAsk::clear_kickmemberroleid() {
  kickmemberroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickmemberroleid();
}
inline ::google::protobuf::uint64 TeamRpcKickMemberAsk::kickmemberroleid() const {
  return kickmemberroleid_;
}
inline void TeamRpcKickMemberAsk::set_kickmemberroleid(::google::protobuf::uint64 value) {
  set_has_kickmemberroleid();
  kickmemberroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcKickMemberReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcKickMemberReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcKickMemberReply::result() const {
  return result_;
}
inline void TeamRpcKickMemberReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcDissmissTeamAsk

// -------------------------------------------------------------------

// TeamRpcDissmissTeamReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcDissmissTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcDissmissTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcDissmissTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcDissmissTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcDissmissTeamReply::result() const {
  return result_;
}
inline void TeamRpcDissmissTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderNotify

// -------------------------------------------------------------------

// TeamRpcKickMemberNotifyNotify

// optional uint64 KickedMemberRoleId = 1 [default = 0];
inline bool TeamRpcKickMemberNotifyNotify::has_kickedmemberroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberNotifyNotify::set_has_kickedmemberroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberNotifyNotify::clear_has_kickedmemberroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberNotifyNotify::clear_kickedmemberroleid() {
  kickedmemberroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickedmemberroleid();
}
inline ::google::protobuf::uint64 TeamRpcKickMemberNotifyNotify::kickedmemberroleid() const {
  return kickedmemberroleid_;
}
inline void TeamRpcKickMemberNotifyNotify::set_kickedmemberroleid(::google::protobuf::uint64 value) {
  set_has_kickedmemberroleid();
  kickedmemberroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcLeaveTeamNotifyNotify

// optional uint64 RoleId = 1 [default = 0];
inline bool TeamRpcLeaveTeamNotifyNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcLeaveTeamNotifyNotify::roleid() const {
  return roleid_;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint64 NewLeaderRoleId = 2 [default = 0];
inline bool TeamRpcLeaveTeamNotifyNotify::has_newleaderroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_has_newleaderroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_has_newleaderroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_newleaderroleid() {
  newleaderroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderroleid();
}
inline ::google::protobuf::uint64 TeamRpcLeaveTeamNotifyNotify::newleaderroleid() const {
  return newleaderroleid_;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_newleaderroleid(::google::protobuf::uint64 value) {
  set_has_newleaderroleid();
  newleaderroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcJoinTeamNotifyNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcJoinTeamNotifyNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcJoinTeamNotifyNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcJoinTeamNotifyNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamNotifyNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamNotifyNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamNotifyNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// optional .TeamInfo Team = 2;
inline bool TeamRpcJoinTeamNotifyNotify::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcJoinTeamNotifyNotify::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcJoinTeamNotifyNotify::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcJoinTeamNotifyNotify::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcJoinTeamNotifyNotify::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamNotifyNotify::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcDissmissTeamNotifyNotify

// -------------------------------------------------------------------

// TeamRpcSurroundingTeamAsk

// optional int32 TargetGroupId = 2 [default = -1];
inline bool TeamRpcSurroundingTeamAsk::has_targetgroupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcSurroundingTeamAsk::set_has_targetgroupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcSurroundingTeamAsk::clear_has_targetgroupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcSurroundingTeamAsk::clear_targetgroupid() {
  targetgroupid_ = -1;
  clear_has_targetgroupid();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamAsk::targetgroupid() const {
  return targetgroupid_;
}
inline void TeamRpcSurroundingTeamAsk::set_targetgroupid(::google::protobuf::int32 value) {
  set_has_targetgroupid();
  targetgroupid_ = value;
}

// optional int32 TargetGroup = 3 [default = 0];
inline bool TeamRpcSurroundingTeamAsk::has_targetgroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcSurroundingTeamAsk::set_has_targetgroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcSurroundingTeamAsk::clear_has_targetgroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcSurroundingTeamAsk::clear_targetgroup() {
  targetgroup_ = 0;
  clear_has_targetgroup();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamAsk::targetgroup() const {
  return targetgroup_;
}
inline void TeamRpcSurroundingTeamAsk::set_targetgroup(::google::protobuf::int32 value) {
  set_has_targetgroup();
  targetgroup_ = value;
}

// -------------------------------------------------------------------

// TeamRpcSurroundingTeamReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcSurroundingTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcSurroundingTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcSurroundingTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcSurroundingTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamReply::result() const {
  return result_;
}
inline void TeamRpcSurroundingTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .TeamInfo TeamsInfo = 2;
inline int TeamRpcSurroundingTeamReply::teamsinfo_size() const {
  return teamsinfo_.size();
}
inline void TeamRpcSurroundingTeamReply::clear_teamsinfo() {
  teamsinfo_.Clear();
}
inline const ::TeamInfo& TeamRpcSurroundingTeamReply::teamsinfo(int index) const {
  return teamsinfo_.Get(index);
}
inline ::TeamInfo* TeamRpcSurroundingTeamReply::mutable_teamsinfo(int index) {
  return teamsinfo_.Mutable(index);
}
inline ::TeamInfo* TeamRpcSurroundingTeamReply::add_teamsinfo() {
  return teamsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TeamInfo >&
TeamRpcSurroundingTeamReply::teamsinfo() const {
  return teamsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::TeamInfo >*
TeamRpcSurroundingTeamReply::mutable_teamsinfo() {
  return &teamsinfo_;
}

// optional int32 TargetGroupId = 5 [default = -1];
inline bool TeamRpcSurroundingTeamReply::has_targetgroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcSurroundingTeamReply::set_has_targetgroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcSurroundingTeamReply::clear_has_targetgroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcSurroundingTeamReply::clear_targetgroupid() {
  targetgroupid_ = -1;
  clear_has_targetgroupid();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamReply::targetgroupid() const {
  return targetgroupid_;
}
inline void TeamRpcSurroundingTeamReply::set_targetgroupid(::google::protobuf::int32 value) {
  set_has_targetgroupid();
  targetgroupid_ = value;
}

// optional int32 TargetGroup = 6 [default = 0];
inline bool TeamRpcSurroundingTeamReply::has_targetgroup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRpcSurroundingTeamReply::set_has_targetgroup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRpcSurroundingTeamReply::clear_has_targetgroup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRpcSurroundingTeamReply::clear_targetgroup() {
  targetgroup_ = 0;
  clear_has_targetgroup();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamReply::targetgroup() const {
  return targetgroup_;
}
inline void TeamRpcSurroundingTeamReply::set_targetgroup(::google::protobuf::int32 value) {
  set_has_targetgroup();
  targetgroup_ = value;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamAsk

// optional uint64 TeamId = 1 [default = 0];
inline bool TeamRpcApplyTeamAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamAsk::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRpcApplyTeamAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcApplyTeamAsk::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcApplyTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcApplyTeamReply::result() const {
  return result_;
}
inline void TeamRpcApplyTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 TeamId = 2 [default = 0];
inline bool TeamRpcApplyTeamReply::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcApplyTeamReply::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcApplyTeamReply::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcApplyTeamReply::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRpcApplyTeamReply::teamid() const {
  return teamid_;
}
inline void TeamRpcApplyTeamReply::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamNotifyNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcApplyTeamNotifyNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamNotifyNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamNotifyNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamNotifyNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcApplyTeamNotifyNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcApplyTeamNotifyNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcApplyTeamNotifyNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcApplyTeamNotifyNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantAsk

// optional uint64 RoleId = 2 [default = 0];
inline bool TeamRpcAgreeApplicantAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcAgreeApplicantAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcAgreeApplicantAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantReply

// optional int32 Result = 1 [default = -9999];
inline bool TeamRpcAgreeApplicantReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcAgreeApplicantReply::result() const {
  return result_;
}
inline void TeamRpcAgreeApplicantReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantNotifyNotify

// optional .TeamInfo Team = 1;
inline bool TeamRpcAgreeApplicantNotifyNotify::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantNotifyNotify::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantNotifyNotify::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantNotifyNotify::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcAgreeApplicantNotifyNotify::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcAgreeApplicantNotifyNotify::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcAgreeApplicantNotifyNotify::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcAgreeApplicantNotifyNotify::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcTeamInfoNotify

// optional .TeamInfo Team = 1;
inline bool TeamRpcTeamInfoNotify::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcTeamInfoNotify::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcTeamInfoNotify::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcTeamInfoNotify::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcTeamInfoNotify::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcTeamInfoNotify::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcTeamInfoNotify::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcTeamInfoNotify::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// optional int32 FollowTeamLeader = 2 [default = -1];
inline bool TeamRpcTeamInfoNotify::has_followteamleader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcTeamInfoNotify::set_has_followteamleader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcTeamInfoNotify::clear_has_followteamleader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcTeamInfoNotify::clear_followteamleader() {
  followteamleader_ = -1;
  clear_has_followteamleader();
}
inline ::google::protobuf::int32 TeamRpcTeamInfoNotify::followteamleader() const {
  return followteamleader_;
}
inline void TeamRpcTeamInfoNotify::set_followteamleader(::google::protobuf::int32 value) {
  set_has_followteamleader();
  followteamleader_ = value;
}

// -------------------------------------------------------------------

// TeamRpcUpdateTeamMemInfoNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcUpdateTeamMemInfoNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcUpdateTeamMemInfoNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcUpdateTeamMemInfoNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcUpdateTeamMemInfoNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcUpdateTeamMemInfoNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcUpdateTeamMemInfoNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcUpdateTeamMemInfoNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcUpdateTeamMemInfoNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// -------------------------------------------------------------------

// TeamRpcFollowTeamLeaderAsk

// optional int32 FollowTeamLeader = 1 [default = -1];
inline bool TeamRpcFollowTeamLeaderAsk::has_followteamleader() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcFollowTeamLeaderAsk::set_has_followteamleader() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcFollowTeamLeaderAsk::clear_has_followteamleader() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcFollowTeamLeaderAsk::clear_followteamleader() {
  followteamleader_ = -1;
  clear_has_followteamleader();
}
inline ::google::protobuf::int32 TeamRpcFollowTeamLeaderAsk::followteamleader() const {
  return followteamleader_;
}
inline void TeamRpcFollowTeamLeaderAsk::set_followteamleader(::google::protobuf::int32 value) {
  set_has_followteamleader();
  followteamleader_ = value;
}

// -------------------------------------------------------------------

// TeamRpcFollowTeamLeaderReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcFollowTeamLeaderReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcFollowTeamLeaderReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcFollowTeamLeaderReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcFollowTeamLeaderReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcFollowTeamLeaderReply::result() const {
  return result_;
}
inline void TeamRpcFollowTeamLeaderReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 FollowTeamLeader = 2 [default = -1];
inline bool TeamRpcFollowTeamLeaderReply::has_followteamleader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcFollowTeamLeaderReply::set_has_followteamleader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcFollowTeamLeaderReply::clear_has_followteamleader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcFollowTeamLeaderReply::clear_followteamleader() {
  followteamleader_ = -1;
  clear_has_followteamleader();
}
inline ::google::protobuf::int32 TeamRpcFollowTeamLeaderReply::followteamleader() const {
  return followteamleader_;
}
inline void TeamRpcFollowTeamLeaderReply::set_followteamleader(::google::protobuf::int32 value) {
  set_has_followteamleader();
  followteamleader_ = value;
}

// -------------------------------------------------------------------

// TeamRpcSummonMemberAsk

// -------------------------------------------------------------------

// TeamRpcSummonMemberReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcSummonMemberReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcSummonMemberReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcSummonMemberReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcSummonMemberReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcSummonMemberReply::result() const {
  return result_;
}
inline void TeamRpcSummonMemberReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcSummonMemberNotifyNotify

// -------------------------------------------------------------------

// TeamRpcChangeTeamTargetReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcChangeTeamTargetReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangeTeamTargetReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangeTeamTargetReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangeTeamTargetReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetReply::result() const {
  return result_;
}
inline void TeamRpcChangeTeamTargetReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TeamTarget TeamTarget = 2;
inline bool TeamRpcChangeTeamTargetReply::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcChangeTeamTargetReply::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcChangeTeamTargetReply::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcChangeTeamTargetReply::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::TeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::TeamTarget& TeamRpcChangeTeamTargetReply::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTargetReply::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::TeamTarget;
  return teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTargetReply::release_teamtarget() {
  clear_has_teamtarget();
  ::TeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}
inline void TeamRpcChangeTeamTargetReply::set_allocated_teamtarget(::TeamTarget* teamtarget) {
  delete teamtarget_;
  teamtarget_ = teamtarget;
  if (teamtarget) {
    set_has_teamtarget();
  } else {
    clear_has_teamtarget();
  }
}

// -------------------------------------------------------------------

// TeamRpcChangeTeamTargetAsk

// optional int32 TargetType = 2 [default = -1];
inline bool TeamRpcChangeTeamTargetAsk::has_targettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangeTeamTargetAsk::set_has_targettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_has_targettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_targettype() {
  targettype_ = -1;
  clear_has_targettype();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetAsk::targettype() const {
  return targettype_;
}
inline void TeamRpcChangeTeamTargetAsk::set_targettype(::google::protobuf::int32 value) {
  set_has_targettype();
  targettype_ = value;
}

// optional int32 Id = 3 [default = -1];
inline bool TeamRpcChangeTeamTargetAsk::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcChangeTeamTargetAsk::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetAsk::id() const {
  return id_;
}
inline void TeamRpcChangeTeamTargetAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 MinLevel = 4 [default = -1];
inline bool TeamRpcChangeTeamTargetAsk::has_minlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcChangeTeamTargetAsk::set_has_minlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_has_minlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_minlevel() {
  minlevel_ = -1;
  clear_has_minlevel();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetAsk::minlevel() const {
  return minlevel_;
}
inline void TeamRpcChangeTeamTargetAsk::set_minlevel(::google::protobuf::int32 value) {
  set_has_minlevel();
  minlevel_ = value;
}

// optional int32 MaxLevel = 5 [default = -1];
inline bool TeamRpcChangeTeamTargetAsk::has_maxlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRpcChangeTeamTargetAsk::set_has_maxlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_has_maxlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRpcChangeTeamTargetAsk::clear_maxlevel() {
  maxlevel_ = -1;
  clear_has_maxlevel();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetAsk::maxlevel() const {
  return maxlevel_;
}
inline void TeamRpcChangeTeamTargetAsk::set_maxlevel(::google::protobuf::int32 value) {
  set_has_maxlevel();
  maxlevel_ = value;
}

// repeated int32 Function = 6;
inline int TeamRpcChangeTeamTargetAsk::function_size() const {
  return function_.size();
}
inline void TeamRpcChangeTeamTargetAsk::clear_function() {
  function_.Clear();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTargetAsk::function(int index) const {
  return function_.Get(index);
}
inline void TeamRpcChangeTeamTargetAsk::set_function(int index, ::google::protobuf::int32 value) {
  function_.Set(index, value);
}
inline void TeamRpcChangeTeamTargetAsk::add_function(::google::protobuf::int32 value) {
  function_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TeamRpcChangeTeamTargetAsk::function() const {
  return function_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TeamRpcChangeTeamTargetAsk::mutable_function() {
  return &function_;
}

// -------------------------------------------------------------------

// TeamRpcChangeTeamTargetNotifyNotify

// optional .TeamTarget TeamTarget = 1;
inline bool TeamRpcChangeTeamTargetNotifyNotify::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangeTeamTargetNotifyNotify::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangeTeamTargetNotifyNotify::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangeTeamTargetNotifyNotify::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::TeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::TeamTarget& TeamRpcChangeTeamTargetNotifyNotify::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTargetNotifyNotify::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::TeamTarget;
  return teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTargetNotifyNotify::release_teamtarget() {
  clear_has_teamtarget();
  ::TeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}
inline void TeamRpcChangeTeamTargetNotifyNotify::set_allocated_teamtarget(::TeamTarget* teamtarget) {
  delete teamtarget_;
  teamtarget_ = teamtarget;
  if (teamtarget) {
    set_has_teamtarget();
  } else {
    clear_has_teamtarget();
  }
}

// -------------------------------------------------------------------

// TeamRpcChangTeamTypeAsk

// optional int32 TeamType = 1 [default = -1];
inline bool TeamRpcChangTeamTypeAsk::has_teamtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangTeamTypeAsk::set_has_teamtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangTeamTypeAsk::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangTeamTypeAsk::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcChangTeamTypeAsk::teamtype() const {
  return teamtype_;
}
inline void TeamRpcChangTeamTypeAsk::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// -------------------------------------------------------------------

// TeamRpcChangTeamTypeReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcChangTeamTypeReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangTeamTypeReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangTeamTypeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangTeamTypeReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcChangTeamTypeReply::result() const {
  return result_;
}
inline void TeamRpcChangTeamTypeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 TeamType = 2 [default = -1];
inline bool TeamRpcChangTeamTypeReply::has_teamtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcChangTeamTypeReply::set_has_teamtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcChangTeamTypeReply::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcChangTeamTypeReply::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcChangTeamTypeReply::teamtype() const {
  return teamtype_;
}
inline void TeamRpcChangTeamTypeReply::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// optional .TeamTarget TeamTarget = 3;
inline bool TeamRpcChangTeamTypeReply::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcChangTeamTypeReply::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcChangTeamTypeReply::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcChangTeamTypeReply::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::TeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::TeamTarget& TeamRpcChangTeamTypeReply::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::TeamTarget* TeamRpcChangTeamTypeReply::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::TeamTarget;
  return teamtarget_;
}
inline ::TeamTarget* TeamRpcChangTeamTypeReply::release_teamtarget() {
  clear_has_teamtarget();
  ::TeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}
inline void TeamRpcChangTeamTypeReply::set_allocated_teamtarget(::TeamTarget* teamtarget) {
  delete teamtarget_;
  teamtarget_ = teamtarget;
  if (teamtarget) {
    set_has_teamtarget();
  } else {
    clear_has_teamtarget();
  }
}

// -------------------------------------------------------------------

// TeamRpcChangeTeamTypeNotifyNotify

// optional int32 TeamType = 1 [default = -1];
inline bool TeamRpcChangeTeamTypeNotifyNotify::has_teamtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::set_has_teamtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcChangeTeamTypeNotifyNotify::teamtype() const {
  return teamtype_;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// optional .TeamTarget TeamTarget = 2;
inline bool TeamRpcChangeTeamTypeNotifyNotify::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::TeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::TeamTarget& TeamRpcChangeTeamTypeNotifyNotify::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTypeNotifyNotify::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::TeamTarget;
  return teamtarget_;
}
inline ::TeamTarget* TeamRpcChangeTeamTypeNotifyNotify::release_teamtarget() {
  clear_has_teamtarget();
  ::TeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}
inline void TeamRpcChangeTeamTypeNotifyNotify::set_allocated_teamtarget(::TeamTarget* teamtarget) {
  delete teamtarget_;
  teamtarget_ = teamtarget;
  if (teamtarget) {
    set_has_teamtarget();
  } else {
    clear_has_teamtarget();
  }
}

// -------------------------------------------------------------------

// TeamRpcInviteTeamMemberAsk

// repeated uint64 RoleId = 1;
inline int TeamRpcInviteTeamMemberAsk::roleid_size() const {
  return roleid_.size();
}
inline void TeamRpcInviteTeamMemberAsk::clear_roleid() {
  roleid_.Clear();
}
inline ::google::protobuf::uint64 TeamRpcInviteTeamMemberAsk::roleid(int index) const {
  return roleid_.Get(index);
}
inline void TeamRpcInviteTeamMemberAsk::set_roleid(int index, ::google::protobuf::uint64 value) {
  roleid_.Set(index, value);
}
inline void TeamRpcInviteTeamMemberAsk::add_roleid(::google::protobuf::uint64 value) {
  roleid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamRpcInviteTeamMemberAsk::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamRpcInviteTeamMemberAsk::mutable_roleid() {
  return &roleid_;
}

// -------------------------------------------------------------------

// TeamRpcInviteTeamMemberReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcInviteTeamMemberReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcInviteTeamMemberReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcInviteTeamMemberReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcInviteTeamMemberReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcInviteTeamMemberReply::result() const {
  return result_;
}
inline void TeamRpcInviteTeamMemberReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated uint64 RoleId = 2;
inline int TeamRpcInviteTeamMemberReply::roleid_size() const {
  return roleid_.size();
}
inline void TeamRpcInviteTeamMemberReply::clear_roleid() {
  roleid_.Clear();
}
inline ::google::protobuf::uint64 TeamRpcInviteTeamMemberReply::roleid(int index) const {
  return roleid_.Get(index);
}
inline void TeamRpcInviteTeamMemberReply::set_roleid(int index, ::google::protobuf::uint64 value) {
  roleid_.Set(index, value);
}
inline void TeamRpcInviteTeamMemberReply::add_roleid(::google::protobuf::uint64 value) {
  roleid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamRpcInviteTeamMemberReply::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamRpcInviteTeamMemberReply::mutable_roleid() {
  return &roleid_;
}

// -------------------------------------------------------------------

// TeamRpcInviteTeamMemberNotifyNotify

// optional uint64 TeamId = 1 [default = 0];
inline bool TeamRpcInviteTeamMemberNotifyNotify::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRpcInviteTeamMemberNotifyNotify::teamid() const {
  return teamid_;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 IsLeader = 5 [default = -1];
inline bool TeamRpcInviteTeamMemberNotifyNotify::has_isleader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_has_isleader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_has_isleader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_isleader() {
  isleader_ = -1;
  clear_has_isleader();
}
inline ::google::protobuf::int32 TeamRpcInviteTeamMemberNotifyNotify::isleader() const {
  return isleader_;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_isleader(::google::protobuf::int32 value) {
  set_has_isleader();
  isleader_ = value;
}

// optional .TeamMemberInfo InviteMemberInfo = 6;
inline bool TeamRpcInviteTeamMemberNotifyNotify::has_invitememberinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_has_invitememberinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_has_invitememberinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::clear_invitememberinfo() {
  if (invitememberinfo_ != NULL) invitememberinfo_->::TeamMemberInfo::Clear();
  clear_has_invitememberinfo();
}
inline const ::TeamMemberInfo& TeamRpcInviteTeamMemberNotifyNotify::invitememberinfo() const {
  return invitememberinfo_ != NULL ? *invitememberinfo_ : *default_instance_->invitememberinfo_;
}
inline ::TeamMemberInfo* TeamRpcInviteTeamMemberNotifyNotify::mutable_invitememberinfo() {
  set_has_invitememberinfo();
  if (invitememberinfo_ == NULL) invitememberinfo_ = new ::TeamMemberInfo;
  return invitememberinfo_;
}
inline ::TeamMemberInfo* TeamRpcInviteTeamMemberNotifyNotify::release_invitememberinfo() {
  clear_has_invitememberinfo();
  ::TeamMemberInfo* temp = invitememberinfo_;
  invitememberinfo_ = NULL;
  return temp;
}
inline void TeamRpcInviteTeamMemberNotifyNotify::set_allocated_invitememberinfo(::TeamMemberInfo* invitememberinfo) {
  delete invitememberinfo_;
  invitememberinfo_ = invitememberinfo;
  if (invitememberinfo) {
    set_has_invitememberinfo();
  } else {
    clear_has_invitememberinfo();
  }
}

// -------------------------------------------------------------------

// TeamRpcApplyListNotifyNotify

// repeated .TeamMemberInfo ApplyList = 1;
inline int TeamRpcApplyListNotifyNotify::applylist_size() const {
  return applylist_.size();
}
inline void TeamRpcApplyListNotifyNotify::clear_applylist() {
  applylist_.Clear();
}
inline const ::TeamMemberInfo& TeamRpcApplyListNotifyNotify::applylist(int index) const {
  return applylist_.Get(index);
}
inline ::TeamMemberInfo* TeamRpcApplyListNotifyNotify::mutable_applylist(int index) {
  return applylist_.Mutable(index);
}
inline ::TeamMemberInfo* TeamRpcApplyListNotifyNotify::add_applylist() {
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TeamMemberInfo >&
TeamRpcApplyListNotifyNotify::applylist() const {
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TeamMemberInfo >*
TeamRpcApplyListNotifyNotify::mutable_applylist() {
  return &applylist_;
}

// -------------------------------------------------------------------

// TeamRpcAgreeJoinTeamAsk

// optional uint64 TeamId = 1 [default = 0];
inline bool TeamRpcAgreeJoinTeamAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeJoinTeamAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeJoinTeamAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeJoinTeamAsk::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TeamRpcAgreeJoinTeamAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcAgreeJoinTeamAsk::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 IsLeader = 2 [default = -1];
inline bool TeamRpcAgreeJoinTeamAsk::has_isleader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcAgreeJoinTeamAsk::set_has_isleader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcAgreeJoinTeamAsk::clear_has_isleader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcAgreeJoinTeamAsk::clear_isleader() {
  isleader_ = -1;
  clear_has_isleader();
}
inline ::google::protobuf::int32 TeamRpcAgreeJoinTeamAsk::isleader() const {
  return isleader_;
}
inline void TeamRpcAgreeJoinTeamAsk::set_isleader(::google::protobuf::int32 value) {
  set_has_isleader();
  isleader_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAgreeJoinTeamReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcAgreeJoinTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeJoinTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeJoinTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeJoinTeamReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcAgreeJoinTeamReply::result() const {
  return result_;
}
inline void TeamRpcAgreeJoinTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcRefuseMemberAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool TeamRpcRefuseMemberAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcRefuseMemberAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcRefuseMemberAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcRefuseMemberAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcRefuseMemberAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcRefuseMemberAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcRefuseMemberReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcRefuseMemberReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcRefuseMemberReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcRefuseMemberReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcRefuseMemberReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcRefuseMemberReply::result() const {
  return result_;
}
inline void TeamRpcRefuseMemberReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcClearApplyListReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcClearApplyListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcClearApplyListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcClearApplyListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcClearApplyListReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcClearApplyListReply::result() const {
  return result_;
}
inline void TeamRpcClearApplyListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcClearApplyListAsk

// -------------------------------------------------------------------

// TeamRpcNoTeamInviteAsk

// optional int32 TeamType = 1 [default = -1];
inline bool TeamRpcNoTeamInviteAsk::has_teamtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcNoTeamInviteAsk::set_has_teamtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcNoTeamInviteAsk::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcNoTeamInviteAsk::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcNoTeamInviteAsk::teamtype() const {
  return teamtype_;
}
inline void TeamRpcNoTeamInviteAsk::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// optional .TeamTarget TTarget = 2;
inline bool TeamRpcNoTeamInviteAsk::has_ttarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcNoTeamInviteAsk::set_has_ttarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcNoTeamInviteAsk::clear_has_ttarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcNoTeamInviteAsk::clear_ttarget() {
  if (ttarget_ != NULL) ttarget_->::TeamTarget::Clear();
  clear_has_ttarget();
}
inline const ::TeamTarget& TeamRpcNoTeamInviteAsk::ttarget() const {
  return ttarget_ != NULL ? *ttarget_ : *default_instance_->ttarget_;
}
inline ::TeamTarget* TeamRpcNoTeamInviteAsk::mutable_ttarget() {
  set_has_ttarget();
  if (ttarget_ == NULL) ttarget_ = new ::TeamTarget;
  return ttarget_;
}
inline ::TeamTarget* TeamRpcNoTeamInviteAsk::release_ttarget() {
  clear_has_ttarget();
  ::TeamTarget* temp = ttarget_;
  ttarget_ = NULL;
  return temp;
}
inline void TeamRpcNoTeamInviteAsk::set_allocated_ttarget(::TeamTarget* ttarget) {
  delete ttarget_;
  ttarget_ = ttarget;
  if (ttarget) {
    set_has_ttarget();
  } else {
    clear_has_ttarget();
  }
}

// optional uint64 InviteRoleId = 3 [default = 0];
inline bool TeamRpcNoTeamInviteAsk::has_inviteroleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcNoTeamInviteAsk::set_has_inviteroleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcNoTeamInviteAsk::clear_has_inviteroleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcNoTeamInviteAsk::clear_inviteroleid() {
  inviteroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_inviteroleid();
}
inline ::google::protobuf::uint64 TeamRpcNoTeamInviteAsk::inviteroleid() const {
  return inviteroleid_;
}
inline void TeamRpcNoTeamInviteAsk::set_inviteroleid(::google::protobuf::uint64 value) {
  set_has_inviteroleid();
  inviteroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcNoTeamInviteReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcNoTeamInviteReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcNoTeamInviteReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcNoTeamInviteReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcNoTeamInviteReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcNoTeamInviteReply::result() const {
  return result_;
}
inline void TeamRpcNoTeamInviteReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TeamInfo Team = 2;
inline bool TeamRpcNoTeamInviteReply::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcNoTeamInviteReply::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcNoTeamInviteReply::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcNoTeamInviteReply::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcNoTeamInviteReply::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcNoTeamInviteReply::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcNoTeamInviteReply::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcNoTeamInviteReply::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcRejectInviteAsk

// optional uint64 RoleId = 3 [default = 0];
inline bool TeamRpcRejectInviteAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcRejectInviteAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcRejectInviteAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcRejectInviteAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcRejectInviteAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcRejectInviteAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string Name = 4;
inline bool TeamRpcRejectInviteAsk::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcRejectInviteAsk::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcRejectInviteAsk::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcRejectInviteAsk::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamRpcRejectInviteAsk::name() const {
  return *name_;
}
inline void TeamRpcRejectInviteAsk::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamRpcRejectInviteAsk::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamRpcRejectInviteAsk::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TeamRpcRejectInviteAsk::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TeamRpcRejectInviteAsk::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TeamRpcRejectInviteAsk::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TeamRpcRejectInviteReply

// optional int32 Result = 1 [default = -1];
inline bool TeamRpcRejectInviteReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcRejectInviteReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcRejectInviteReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcRejectInviteReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcRejectInviteReply::result() const {
  return result_;
}
inline void TeamRpcRejectInviteReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TeamRpc_2eproto__INCLUDED
