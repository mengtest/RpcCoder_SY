// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EventRpc.proto

#ifndef PROTOBUF_EventRpc_2eproto__INCLUDED
#define PROTOBUF_EventRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EventRpc_2eproto();
void protobuf_AssignDesc_EventRpc_2eproto();
void protobuf_ShutdownFile_EventRpc_2eproto();

class EventRpcMoveNotify;
class EventRpcStopMoveNotify;
class EventRpcObjAttrChangeNotify;
class EventRpcCoinChangeNotify;
class EventRpcMovePosNotify;

// ===================================================================

class EventRpcMoveNotify : public ::google::protobuf::Message {
 public:
  EventRpcMoveNotify();
  virtual ~EventRpcMoveNotify();

  EventRpcMoveNotify(const EventRpcMoveNotify& from);

  inline EventRpcMoveNotify& operator=(const EventRpcMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventRpcMoveNotify& default_instance();

  void Swap(EventRpcMoveNotify* other);

  // implements Message ----------------------------------------------

  EventRpcMoveNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventRpcMoveNotify& from);
  void MergeFrom(const EventRpcMoveNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ObjId = 1 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional .Vector3 Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3& pos() const;
  inline ::Vector3* mutable_pos();
  inline ::Vector3* release_pos();
  inline void set_allocated_pos(::Vector3* pos);

  // optional float Dir = 3 [default = -1];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // @@protoc_insertion_point(class_scope:EventRpcMoveNotify)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Vector3* pos_;
  ::google::protobuf::int32 objid_;
  float dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_EventRpc_2eproto();
  friend void protobuf_AssignDesc_EventRpc_2eproto();
  friend void protobuf_ShutdownFile_EventRpc_2eproto();

  void InitAsDefaultInstance();
  static EventRpcMoveNotify* default_instance_;
};
// -------------------------------------------------------------------

class EventRpcStopMoveNotify : public ::google::protobuf::Message {
 public:
  EventRpcStopMoveNotify();
  virtual ~EventRpcStopMoveNotify();

  EventRpcStopMoveNotify(const EventRpcStopMoveNotify& from);

  inline EventRpcStopMoveNotify& operator=(const EventRpcStopMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventRpcStopMoveNotify& default_instance();

  void Swap(EventRpcStopMoveNotify* other);

  // implements Message ----------------------------------------------

  EventRpcStopMoveNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventRpcStopMoveNotify& from);
  void MergeFrom(const EventRpcStopMoveNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ObjId = 1 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional .Vector3Int Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3Int& pos() const;
  inline ::Vector3Int* mutable_pos();
  inline ::Vector3Int* release_pos();
  inline void set_allocated_pos(::Vector3Int* pos);

  // optional float Dir = 3 [default = -1];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline float dir() const;
  inline void set_dir(float value);

  // optional int32 Type = 5 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EventRpcStopMoveNotify)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Vector3Int* pos_;
  ::google::protobuf::int32 objid_;
  float dir_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_EventRpc_2eproto();
  friend void protobuf_AssignDesc_EventRpc_2eproto();
  friend void protobuf_ShutdownFile_EventRpc_2eproto();

  void InitAsDefaultInstance();
  static EventRpcStopMoveNotify* default_instance_;
};
// -------------------------------------------------------------------

class EventRpcObjAttrChangeNotify : public ::google::protobuf::Message {
 public:
  EventRpcObjAttrChangeNotify();
  virtual ~EventRpcObjAttrChangeNotify();

  EventRpcObjAttrChangeNotify(const EventRpcObjAttrChangeNotify& from);

  inline EventRpcObjAttrChangeNotify& operator=(const EventRpcObjAttrChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventRpcObjAttrChangeNotify& default_instance();

  void Swap(EventRpcObjAttrChangeNotify* other);

  // implements Message ----------------------------------------------

  EventRpcObjAttrChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventRpcObjAttrChangeNotify& from);
  void MergeFrom(const EventRpcObjAttrChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float Speed = 1 [default = -1];
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 1;
  inline float speed() const;
  inline void set_speed(float value);

  // optional int64 Hp = 2 [default = -1];
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int32 Status = 3 [default = -1];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 ConfigId = 4 [default = -1];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigIdFieldNumber = 4;
  inline ::google::protobuf::int32 configid() const;
  inline void set_configid(::google::protobuf::int32 value);

  // optional int32 ObjId = 5 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 5;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EventRpcObjAttrChangeNotify)
 private:
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_configid();
  inline void clear_has_configid();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hp_;
  float speed_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_EventRpc_2eproto();
  friend void protobuf_AssignDesc_EventRpc_2eproto();
  friend void protobuf_ShutdownFile_EventRpc_2eproto();

  void InitAsDefaultInstance();
  static EventRpcObjAttrChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class EventRpcCoinChangeNotify : public ::google::protobuf::Message {
 public:
  EventRpcCoinChangeNotify();
  virtual ~EventRpcCoinChangeNotify();

  EventRpcCoinChangeNotify(const EventRpcCoinChangeNotify& from);

  inline EventRpcCoinChangeNotify& operator=(const EventRpcCoinChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventRpcCoinChangeNotify& default_instance();

  void Swap(EventRpcCoinChangeNotify* other);

  // implements Message ----------------------------------------------

  EventRpcCoinChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventRpcCoinChangeNotify& from);
  void MergeFrom(const EventRpcCoinChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2 [default = -1];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EventRpcCoinChangeNotify)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_EventRpc_2eproto();
  friend void protobuf_AssignDesc_EventRpc_2eproto();
  friend void protobuf_ShutdownFile_EventRpc_2eproto();

  void InitAsDefaultInstance();
  static EventRpcCoinChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class EventRpcMovePosNotify : public ::google::protobuf::Message {
 public:
  EventRpcMovePosNotify();
  virtual ~EventRpcMovePosNotify();

  EventRpcMovePosNotify(const EventRpcMovePosNotify& from);

  inline EventRpcMovePosNotify& operator=(const EventRpcMovePosNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventRpcMovePosNotify& default_instance();

  void Swap(EventRpcMovePosNotify* other);

  // implements Message ----------------------------------------------

  EventRpcMovePosNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventRpcMovePosNotify& from);
  void MergeFrom(const EventRpcMovePosNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ObjId = 1 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // repeated .Vector3Int PosList = 3;
  inline int poslist_size() const;
  inline void clear_poslist();
  static const int kPosListFieldNumber = 3;
  inline const ::Vector3Int& poslist(int index) const;
  inline ::Vector3Int* mutable_poslist(int index);
  inline ::Vector3Int* add_poslist();
  inline const ::google::protobuf::RepeatedPtrField< ::Vector3Int >&
      poslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Vector3Int >*
      mutable_poslist();

  // optional float Dir = 4 [default = -1];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline float dir() const;
  inline void set_dir(float value);

  // optional bool IsAllowChangeRunAnimation = 5 [default = true];
  inline bool has_isallowchangerunanimation() const;
  inline void clear_isallowchangerunanimation();
  static const int kIsAllowChangeRunAnimationFieldNumber = 5;
  inline bool isallowchangerunanimation() const;
  inline void set_isallowchangerunanimation(bool value);

  // optional int32 Follow = 6 [default = -1];
  inline bool has_follow() const;
  inline void clear_follow();
  static const int kFollowFieldNumber = 6;
  inline ::google::protobuf::int32 follow() const;
  inline void set_follow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EventRpcMovePosNotify)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_isallowchangerunanimation();
  inline void clear_has_isallowchangerunanimation();
  inline void set_has_follow();
  inline void clear_has_follow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Vector3Int > poslist_;
  ::google::protobuf::int32 objid_;
  float dir_;
  bool isallowchangerunanimation_;
  ::google::protobuf::int32 follow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_EventRpc_2eproto();
  friend void protobuf_AssignDesc_EventRpc_2eproto();
  friend void protobuf_ShutdownFile_EventRpc_2eproto();

  void InitAsDefaultInstance();
  static EventRpcMovePosNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// EventRpcMoveNotify

// optional int32 ObjId = 1 [default = -1];
inline bool EventRpcMoveNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventRpcMoveNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventRpcMoveNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventRpcMoveNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 EventRpcMoveNotify::objid() const {
  return objid_;
}
inline void EventRpcMoveNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional .Vector3 Pos = 2;
inline bool EventRpcMoveNotify::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventRpcMoveNotify::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventRpcMoveNotify::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventRpcMoveNotify::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3::Clear();
  clear_has_pos();
}
inline const ::Vector3& EventRpcMoveNotify::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3* EventRpcMoveNotify::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3;
  return pos_;
}
inline ::Vector3* EventRpcMoveNotify::release_pos() {
  clear_has_pos();
  ::Vector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EventRpcMoveNotify::set_allocated_pos(::Vector3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional float Dir = 3 [default = -1];
inline bool EventRpcMoveNotify::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventRpcMoveNotify::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventRpcMoveNotify::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventRpcMoveNotify::clear_dir() {
  dir_ = -1;
  clear_has_dir();
}
inline float EventRpcMoveNotify::dir() const {
  return dir_;
}
inline void EventRpcMoveNotify::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// EventRpcStopMoveNotify

// optional int32 ObjId = 1 [default = -1];
inline bool EventRpcStopMoveNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventRpcStopMoveNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventRpcStopMoveNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventRpcStopMoveNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 EventRpcStopMoveNotify::objid() const {
  return objid_;
}
inline void EventRpcStopMoveNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional .Vector3Int Pos = 2;
inline bool EventRpcStopMoveNotify::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventRpcStopMoveNotify::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventRpcStopMoveNotify::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventRpcStopMoveNotify::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Int::Clear();
  clear_has_pos();
}
inline const ::Vector3Int& EventRpcStopMoveNotify::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Int* EventRpcStopMoveNotify::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Int;
  return pos_;
}
inline ::Vector3Int* EventRpcStopMoveNotify::release_pos() {
  clear_has_pos();
  ::Vector3Int* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EventRpcStopMoveNotify::set_allocated_pos(::Vector3Int* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional float Dir = 3 [default = -1];
inline bool EventRpcStopMoveNotify::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventRpcStopMoveNotify::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventRpcStopMoveNotify::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventRpcStopMoveNotify::clear_dir() {
  dir_ = -1;
  clear_has_dir();
}
inline float EventRpcStopMoveNotify::dir() const {
  return dir_;
}
inline void EventRpcStopMoveNotify::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional int32 Type = 5 [default = -1];
inline bool EventRpcStopMoveNotify::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventRpcStopMoveNotify::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventRpcStopMoveNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventRpcStopMoveNotify::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 EventRpcStopMoveNotify::type() const {
  return type_;
}
inline void EventRpcStopMoveNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// EventRpcObjAttrChangeNotify

// optional float Speed = 1 [default = -1];
inline bool EventRpcObjAttrChangeNotify::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventRpcObjAttrChangeNotify::set_has_speed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventRpcObjAttrChangeNotify::clear_has_speed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventRpcObjAttrChangeNotify::clear_speed() {
  speed_ = -1;
  clear_has_speed();
}
inline float EventRpcObjAttrChangeNotify::speed() const {
  return speed_;
}
inline void EventRpcObjAttrChangeNotify::set_speed(float value) {
  set_has_speed();
  speed_ = value;
}

// optional int64 Hp = 2 [default = -1];
inline bool EventRpcObjAttrChangeNotify::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventRpcObjAttrChangeNotify::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventRpcObjAttrChangeNotify::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventRpcObjAttrChangeNotify::clear_hp() {
  hp_ = GOOGLE_LONGLONG(-1);
  clear_has_hp();
}
inline ::google::protobuf::int64 EventRpcObjAttrChangeNotify::hp() const {
  return hp_;
}
inline void EventRpcObjAttrChangeNotify::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int32 Status = 3 [default = -1];
inline bool EventRpcObjAttrChangeNotify::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventRpcObjAttrChangeNotify::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventRpcObjAttrChangeNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventRpcObjAttrChangeNotify::clear_status() {
  status_ = -1;
  clear_has_status();
}
inline ::google::protobuf::int32 EventRpcObjAttrChangeNotify::status() const {
  return status_;
}
inline void EventRpcObjAttrChangeNotify::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 ConfigId = 4 [default = -1];
inline bool EventRpcObjAttrChangeNotify::has_configid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventRpcObjAttrChangeNotify::set_has_configid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventRpcObjAttrChangeNotify::clear_has_configid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventRpcObjAttrChangeNotify::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 EventRpcObjAttrChangeNotify::configid() const {
  return configid_;
}
inline void EventRpcObjAttrChangeNotify::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
}

// optional int32 ObjId = 5 [default = -1];
inline bool EventRpcObjAttrChangeNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EventRpcObjAttrChangeNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EventRpcObjAttrChangeNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EventRpcObjAttrChangeNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 EventRpcObjAttrChangeNotify::objid() const {
  return objid_;
}
inline void EventRpcObjAttrChangeNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// -------------------------------------------------------------------

// EventRpcCoinChangeNotify

// optional int32 Type = 1 [default = -1];
inline bool EventRpcCoinChangeNotify::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventRpcCoinChangeNotify::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventRpcCoinChangeNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventRpcCoinChangeNotify::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 EventRpcCoinChangeNotify::type() const {
  return type_;
}
inline void EventRpcCoinChangeNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2 [default = -1];
inline bool EventRpcCoinChangeNotify::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventRpcCoinChangeNotify::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventRpcCoinChangeNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventRpcCoinChangeNotify::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline ::google::protobuf::int32 EventRpcCoinChangeNotify::value() const {
  return value_;
}
inline void EventRpcCoinChangeNotify::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// EventRpcMovePosNotify

// optional int32 ObjId = 1 [default = -1];
inline bool EventRpcMovePosNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventRpcMovePosNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventRpcMovePosNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventRpcMovePosNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 EventRpcMovePosNotify::objid() const {
  return objid_;
}
inline void EventRpcMovePosNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// repeated .Vector3Int PosList = 3;
inline int EventRpcMovePosNotify::poslist_size() const {
  return poslist_.size();
}
inline void EventRpcMovePosNotify::clear_poslist() {
  poslist_.Clear();
}
inline const ::Vector3Int& EventRpcMovePosNotify::poslist(int index) const {
  return poslist_.Get(index);
}
inline ::Vector3Int* EventRpcMovePosNotify::mutable_poslist(int index) {
  return poslist_.Mutable(index);
}
inline ::Vector3Int* EventRpcMovePosNotify::add_poslist() {
  return poslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Vector3Int >&
EventRpcMovePosNotify::poslist() const {
  return poslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Vector3Int >*
EventRpcMovePosNotify::mutable_poslist() {
  return &poslist_;
}

// optional float Dir = 4 [default = -1];
inline bool EventRpcMovePosNotify::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventRpcMovePosNotify::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventRpcMovePosNotify::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventRpcMovePosNotify::clear_dir() {
  dir_ = -1;
  clear_has_dir();
}
inline float EventRpcMovePosNotify::dir() const {
  return dir_;
}
inline void EventRpcMovePosNotify::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional bool IsAllowChangeRunAnimation = 5 [default = true];
inline bool EventRpcMovePosNotify::has_isallowchangerunanimation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventRpcMovePosNotify::set_has_isallowchangerunanimation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventRpcMovePosNotify::clear_has_isallowchangerunanimation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventRpcMovePosNotify::clear_isallowchangerunanimation() {
  isallowchangerunanimation_ = true;
  clear_has_isallowchangerunanimation();
}
inline bool EventRpcMovePosNotify::isallowchangerunanimation() const {
  return isallowchangerunanimation_;
}
inline void EventRpcMovePosNotify::set_isallowchangerunanimation(bool value) {
  set_has_isallowchangerunanimation();
  isallowchangerunanimation_ = value;
}

// optional int32 Follow = 6 [default = -1];
inline bool EventRpcMovePosNotify::has_follow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EventRpcMovePosNotify::set_has_follow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EventRpcMovePosNotify::clear_has_follow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EventRpcMovePosNotify::clear_follow() {
  follow_ = -1;
  clear_has_follow();
}
inline ::google::protobuf::int32 EventRpcMovePosNotify::follow() const {
  return follow_;
}
inline void EventRpcMovePosNotify::set_follow(::google::protobuf::int32 value) {
  set_has_follow();
  follow_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EventRpc_2eproto__INCLUDED
