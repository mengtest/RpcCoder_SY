// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneRpc.proto

#ifndef PROTOBUF_SceneRpc_2eproto__INCLUDED
#define PROTOBUF_SceneRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneRpc_2eproto();
void protobuf_AssignDesc_SceneRpc_2eproto();
void protobuf_ShutdownFile_SceneRpc_2eproto();

class SceneRpcLoadSceneCompleteAsk;
class SceneRpcLoadSceneCompleteReply;
class SceneRpcDeletePlayerNotify;
class SceneRpcConnectGameServerAsk;
class SceneRpcConnectGameServerReply;
class SceneRpcCreateObjNotify;
class SceneRpcSurroundingHumanAsk;
class SceneRpcSurroundingHumanReply;
class SceneRpcCEnterSceneNotify;
class SceneRpcSEnterSceneNotify;
class SceneRpcObjDieNotify;
class SceneRpcCollide_ChangeSceneAsk;
class SceneRpcCollide_ChangeSceneReply;
class SceneRpcEnterMirrorAsk;
class SceneRpcEnterMirrorReply;
class SceneRpcSEnterMirrorSceneNotify;
class SceneRpcExitMirrorSceneAsk;
class SceneRpcExitMirrorSceneReply;
class SceneRpcChangeSceneLeaveNotify;
class SceneRpcChangeLineAsk;
class SceneRpcChangeLineReply;
class SceneRpcPingAsk;
class SceneRpcPingReply;
class SceneRpcSyncSceneLineStatsNotify;
class SceneRpcLogOutGameAsk;
class SceneRpcLogOutGameReply;
class SceneRpcKickOutGameNotify;
class SceneRpcShowFilmFinishAsk;
class SceneRpcShowFilmFinishReply;
class SceneRpcSpecObjPosAsk;
class SceneRpcSpecObjPosReply;

// ===================================================================

class SceneRpcLoadSceneCompleteAsk : public ::google::protobuf::Message {
 public:
  SceneRpcLoadSceneCompleteAsk();
  virtual ~SceneRpcLoadSceneCompleteAsk();

  SceneRpcLoadSceneCompleteAsk(const SceneRpcLoadSceneCompleteAsk& from);

  inline SceneRpcLoadSceneCompleteAsk& operator=(const SceneRpcLoadSceneCompleteAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcLoadSceneCompleteAsk& default_instance();

  void Swap(SceneRpcLoadSceneCompleteAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcLoadSceneCompleteAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcLoadSceneCompleteAsk& from);
  void MergeFrom(const SceneRpcLoadSceneCompleteAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional int32 SceneId = 2 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcLoadSceneCompleteAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcLoadSceneCompleteAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcLoadSceneCompleteReply : public ::google::protobuf::Message {
 public:
  SceneRpcLoadSceneCompleteReply();
  virtual ~SceneRpcLoadSceneCompleteReply();

  SceneRpcLoadSceneCompleteReply(const SceneRpcLoadSceneCompleteReply& from);

  inline SceneRpcLoadSceneCompleteReply& operator=(const SceneRpcLoadSceneCompleteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcLoadSceneCompleteReply& default_instance();

  void Swap(SceneRpcLoadSceneCompleteReply* other);

  // implements Message ----------------------------------------------

  SceneRpcLoadSceneCompleteReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcLoadSceneCompleteReply& from);
  void MergeFrom(const SceneRpcLoadSceneCompleteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 ObjId = 3 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 3;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional .Vector3 Pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::Vector3& pos() const;
  inline ::Vector3* mutable_pos();
  inline ::Vector3* release_pos();
  inline void set_allocated_pos(::Vector3* pos);

  // optional float Dir = 5 [default = -1];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline float dir() const;
  inline void set_dir(float value);

  // optional bytes ObjData = 6;
  inline bool has_objdata() const;
  inline void clear_objdata();
  static const int kObjDataFieldNumber = 6;
  inline const ::std::string& objdata() const;
  inline void set_objdata(const ::std::string& value);
  inline void set_objdata(const char* value);
  inline void set_objdata(const void* value, size_t size);
  inline ::std::string* mutable_objdata();
  inline ::std::string* release_objdata();
  inline void set_allocated_objdata(::std::string* objdata);

  // @@protoc_insertion_point(class_scope:SceneRpcLoadSceneCompleteReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_objdata();
  inline void clear_has_objdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 objid_;
  ::Vector3* pos_;
  ::std::string* objdata_;
  float dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcLoadSceneCompleteReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcDeletePlayerNotify : public ::google::protobuf::Message {
 public:
  SceneRpcDeletePlayerNotify();
  virtual ~SceneRpcDeletePlayerNotify();

  SceneRpcDeletePlayerNotify(const SceneRpcDeletePlayerNotify& from);

  inline SceneRpcDeletePlayerNotify& operator=(const SceneRpcDeletePlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcDeletePlayerNotify& default_instance();

  void Swap(SceneRpcDeletePlayerNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcDeletePlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcDeletePlayerNotify& from);
  void MergeFrom(const SceneRpcDeletePlayerNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ObjDeleteInfo Delete_list = 4;
  inline int delete_list_size() const;
  inline void clear_delete_list();
  static const int kDeleteListFieldNumber = 4;
  inline const ::ObjDeleteInfo& delete_list(int index) const;
  inline ::ObjDeleteInfo* mutable_delete_list(int index);
  inline ::ObjDeleteInfo* add_delete_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjDeleteInfo >&
      delete_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjDeleteInfo >*
      mutable_delete_list();

  // @@protoc_insertion_point(class_scope:SceneRpcDeletePlayerNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ObjDeleteInfo > delete_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcDeletePlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcConnectGameServerAsk : public ::google::protobuf::Message {
 public:
  SceneRpcConnectGameServerAsk();
  virtual ~SceneRpcConnectGameServerAsk();

  SceneRpcConnectGameServerAsk(const SceneRpcConnectGameServerAsk& from);

  inline SceneRpcConnectGameServerAsk& operator=(const SceneRpcConnectGameServerAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcConnectGameServerAsk& default_instance();

  void Swap(SceneRpcConnectGameServerAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcConnectGameServerAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcConnectGameServerAsk& from);
  void MergeFrom(const SceneRpcConnectGameServerAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional string Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional int32 SceneID = 3 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional int32 LineID = 4 [default = -1];
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 4;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcConnectGameServerAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_lineid();
  inline void clear_has_lineid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::std::string* key_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 lineid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcConnectGameServerAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcConnectGameServerReply : public ::google::protobuf::Message {
 public:
  SceneRpcConnectGameServerReply();
  virtual ~SceneRpcConnectGameServerReply();

  SceneRpcConnectGameServerReply(const SceneRpcConnectGameServerReply& from);

  inline SceneRpcConnectGameServerReply& operator=(const SceneRpcConnectGameServerReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcConnectGameServerReply& default_instance();

  void Swap(SceneRpcConnectGameServerReply* other);

  // implements Message ----------------------------------------------

  SceneRpcConnectGameServerReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcConnectGameServerReply& from);
  void MergeFrom(const SceneRpcConnectGameServerReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional int32 SceneId = 3 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional int32 MapId = 5 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 5;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcConnectGameServerReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcConnectGameServerReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcCreateObjNotify : public ::google::protobuf::Message {
 public:
  SceneRpcCreateObjNotify();
  virtual ~SceneRpcCreateObjNotify();

  SceneRpcCreateObjNotify(const SceneRpcCreateObjNotify& from);

  inline SceneRpcCreateObjNotify& operator=(const SceneRpcCreateObjNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcCreateObjNotify& default_instance();

  void Swap(SceneRpcCreateObjNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcCreateObjNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcCreateObjNotify& from);
  void MergeFrom(const SceneRpcCreateObjNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ObjCreateInfo Create_list = 14;
  inline int create_list_size() const;
  inline void clear_create_list();
  static const int kCreateListFieldNumber = 14;
  inline const ::ObjCreateInfo& create_list(int index) const;
  inline ::ObjCreateInfo* mutable_create_list(int index);
  inline ::ObjCreateInfo* add_create_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjCreateInfo >&
      create_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjCreateInfo >*
      mutable_create_list();

  // @@protoc_insertion_point(class_scope:SceneRpcCreateObjNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ObjCreateInfo > create_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcCreateObjNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSurroundingHumanAsk : public ::google::protobuf::Message {
 public:
  SceneRpcSurroundingHumanAsk();
  virtual ~SceneRpcSurroundingHumanAsk();

  SceneRpcSurroundingHumanAsk(const SceneRpcSurroundingHumanAsk& from);

  inline SceneRpcSurroundingHumanAsk& operator=(const SceneRpcSurroundingHumanAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSurroundingHumanAsk& default_instance();

  void Swap(SceneRpcSurroundingHumanAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcSurroundingHumanAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSurroundingHumanAsk& from);
  void MergeFrom(const SceneRpcSurroundingHumanAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcSurroundingHumanAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSurroundingHumanAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSurroundingHumanReply : public ::google::protobuf::Message {
 public:
  SceneRpcSurroundingHumanReply();
  virtual ~SceneRpcSurroundingHumanReply();

  SceneRpcSurroundingHumanReply(const SceneRpcSurroundingHumanReply& from);

  inline SceneRpcSurroundingHumanReply& operator=(const SceneRpcSurroundingHumanReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSurroundingHumanReply& default_instance();

  void Swap(SceneRpcSurroundingHumanReply* other);

  // implements Message ----------------------------------------------

  SceneRpcSurroundingHumanReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSurroundingHumanReply& from);
  void MergeFrom(const SceneRpcSurroundingHumanReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .CharacterInfo RoleList = 2;
  inline int rolelist_size() const;
  inline void clear_rolelist();
  static const int kRoleListFieldNumber = 2;
  inline const ::CharacterInfo& rolelist(int index) const;
  inline ::CharacterInfo* mutable_rolelist(int index);
  inline ::CharacterInfo* add_rolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
      rolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
      mutable_rolelist();

  // @@protoc_insertion_point(class_scope:SceneRpcSurroundingHumanReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CharacterInfo > rolelist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSurroundingHumanReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcCEnterSceneNotify : public ::google::protobuf::Message {
 public:
  SceneRpcCEnterSceneNotify();
  virtual ~SceneRpcCEnterSceneNotify();

  SceneRpcCEnterSceneNotify(const SceneRpcCEnterSceneNotify& from);

  inline SceneRpcCEnterSceneNotify& operator=(const SceneRpcCEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcCEnterSceneNotify& default_instance();

  void Swap(SceneRpcCEnterSceneNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcCEnterSceneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcCEnterSceneNotify& from);
  void MergeFrom(const SceneRpcCEnterSceneNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SceneId = 3 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional int32 MapId = 6 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 6;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 LineId = 7 [default = -1];
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIdFieldNumber = 7;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcCEnterSceneNotify)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_lineid();
  inline void clear_has_lineid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 lineid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcCEnterSceneNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSEnterSceneNotify : public ::google::protobuf::Message {
 public:
  SceneRpcSEnterSceneNotify();
  virtual ~SceneRpcSEnterSceneNotify();

  SceneRpcSEnterSceneNotify(const SceneRpcSEnterSceneNotify& from);

  inline SceneRpcSEnterSceneNotify& operator=(const SceneRpcSEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSEnterSceneNotify& default_instance();

  void Swap(SceneRpcSEnterSceneNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcSEnterSceneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSEnterSceneNotify& from);
  void MergeFrom(const SceneRpcSEnterSceneNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 SceneId = 8 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 8;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional int32 SceneConfigId = 9 [default = -1];
  inline bool has_sceneconfigid() const;
  inline void clear_sceneconfigid();
  static const int kSceneConfigIdFieldNumber = 9;
  inline ::google::protobuf::int32 sceneconfigid() const;
  inline void set_sceneconfigid(::google::protobuf::int32 value);

  // optional int32 MapId = 10 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 10;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional uint64 RoleId = 11 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 11;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional int32 DungeonConfigId = 12 [default = -1];
  inline bool has_dungeonconfigid() const;
  inline void clear_dungeonconfigid();
  static const int kDungeonConfigIdFieldNumber = 12;
  inline ::google::protobuf::int32 dungeonconfigid() const;
  inline void set_dungeonconfigid(::google::protobuf::int32 value);

  // optional int32 LineId = 14 [default = -1];
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIdFieldNumber = 14;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // repeated .IntPair TypeConfig = 18;
  inline int typeconfig_size() const;
  inline void clear_typeconfig();
  static const int kTypeConfigFieldNumber = 18;
  inline const ::IntPair& typeconfig(int index) const;
  inline ::IntPair* mutable_typeconfig(int index);
  inline ::IntPair* add_typeconfig();
  inline const ::google::protobuf::RepeatedPtrField< ::IntPair >&
      typeconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::IntPair >*
      mutable_typeconfig();

  // @@protoc_insertion_point(class_scope:SceneRpcSEnterSceneNotify)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_sceneconfigid();
  inline void clear_has_sceneconfigid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_dungeonconfigid();
  inline void clear_has_dungeonconfigid();
  inline void set_has_lineid();
  inline void clear_has_lineid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 sceneconfigid_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 dungeonconfigid_;
  ::google::protobuf::int32 lineid_;
  ::google::protobuf::RepeatedPtrField< ::IntPair > typeconfig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSEnterSceneNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcObjDieNotify : public ::google::protobuf::Message {
 public:
  SceneRpcObjDieNotify();
  virtual ~SceneRpcObjDieNotify();

  SceneRpcObjDieNotify(const SceneRpcObjDieNotify& from);

  inline SceneRpcObjDieNotify& operator=(const SceneRpcObjDieNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcObjDieNotify& default_instance();

  void Swap(SceneRpcObjDieNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcObjDieNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcObjDieNotify& from);
  void MergeFrom(const SceneRpcObjDieNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ObjId = 1 [default = -1];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional int32 RespawnTime = 2 [default = -1];
  inline bool has_respawntime() const;
  inline void clear_respawntime();
  static const int kRespawnTimeFieldNumber = 2;
  inline ::google::protobuf::int32 respawntime() const;
  inline void set_respawntime(::google::protobuf::int32 value);

  // optional int32 ConfigId = 3 [default = -1];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigIdFieldNumber = 3;
  inline ::google::protobuf::int32 configid() const;
  inline void set_configid(::google::protobuf::int32 value);

  // optional int32 ObjType = 4 [default = -1];
  inline bool has_objtype() const;
  inline void clear_objtype();
  static const int kObjTypeFieldNumber = 4;
  inline ::google::protobuf::int32 objtype() const;
  inline void set_objtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcObjDieNotify)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_respawntime();
  inline void clear_has_respawntime();
  inline void set_has_configid();
  inline void clear_has_configid();
  inline void set_has_objtype();
  inline void clear_has_objtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 respawntime_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 objtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcObjDieNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcCollide_ChangeSceneAsk : public ::google::protobuf::Message {
 public:
  SceneRpcCollide_ChangeSceneAsk();
  virtual ~SceneRpcCollide_ChangeSceneAsk();

  SceneRpcCollide_ChangeSceneAsk(const SceneRpcCollide_ChangeSceneAsk& from);

  inline SceneRpcCollide_ChangeSceneAsk& operator=(const SceneRpcCollide_ChangeSceneAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcCollide_ChangeSceneAsk& default_instance();

  void Swap(SceneRpcCollide_ChangeSceneAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcCollide_ChangeSceneAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcCollide_ChangeSceneAsk& from);
  void MergeFrom(const SceneRpcCollide_ChangeSceneAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Collide_id = 1 [default = -1];
  inline bool has_collide_id() const;
  inline void clear_collide_id();
  static const int kCollideIdFieldNumber = 1;
  inline ::google::protobuf::int32 collide_id() const;
  inline void set_collide_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcCollide_ChangeSceneAsk)
 private:
  inline void set_has_collide_id();
  inline void clear_has_collide_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 collide_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcCollide_ChangeSceneAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcCollide_ChangeSceneReply : public ::google::protobuf::Message {
 public:
  SceneRpcCollide_ChangeSceneReply();
  virtual ~SceneRpcCollide_ChangeSceneReply();

  SceneRpcCollide_ChangeSceneReply(const SceneRpcCollide_ChangeSceneReply& from);

  inline SceneRpcCollide_ChangeSceneReply& operator=(const SceneRpcCollide_ChangeSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcCollide_ChangeSceneReply& default_instance();

  void Swap(SceneRpcCollide_ChangeSceneReply* other);

  // implements Message ----------------------------------------------

  SceneRpcCollide_ChangeSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcCollide_ChangeSceneReply& from);
  void MergeFrom(const SceneRpcCollide_ChangeSceneReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcCollide_ChangeSceneReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcCollide_ChangeSceneReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcEnterMirrorAsk : public ::google::protobuf::Message {
 public:
  SceneRpcEnterMirrorAsk();
  virtual ~SceneRpcEnterMirrorAsk();

  SceneRpcEnterMirrorAsk(const SceneRpcEnterMirrorAsk& from);

  inline SceneRpcEnterMirrorAsk& operator=(const SceneRpcEnterMirrorAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcEnterMirrorAsk& default_instance();

  void Swap(SceneRpcEnterMirrorAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcEnterMirrorAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcEnterMirrorAsk& from);
  void MergeFrom(const SceneRpcEnterMirrorAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MirrorID = 1 [default = -1];
  inline bool has_mirrorid() const;
  inline void clear_mirrorid();
  static const int kMirrorIDFieldNumber = 1;
  inline ::google::protobuf::int32 mirrorid() const;
  inline void set_mirrorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcEnterMirrorAsk)
 private:
  inline void set_has_mirrorid();
  inline void clear_has_mirrorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mirrorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcEnterMirrorAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcEnterMirrorReply : public ::google::protobuf::Message {
 public:
  SceneRpcEnterMirrorReply();
  virtual ~SceneRpcEnterMirrorReply();

  SceneRpcEnterMirrorReply(const SceneRpcEnterMirrorReply& from);

  inline SceneRpcEnterMirrorReply& operator=(const SceneRpcEnterMirrorReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcEnterMirrorReply& default_instance();

  void Swap(SceneRpcEnterMirrorReply* other);

  // implements Message ----------------------------------------------

  SceneRpcEnterMirrorReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcEnterMirrorReply& from);
  void MergeFrom(const SceneRpcEnterMirrorReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcEnterMirrorReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcEnterMirrorReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSEnterMirrorSceneNotify : public ::google::protobuf::Message {
 public:
  SceneRpcSEnterMirrorSceneNotify();
  virtual ~SceneRpcSEnterMirrorSceneNotify();

  SceneRpcSEnterMirrorSceneNotify(const SceneRpcSEnterMirrorSceneNotify& from);

  inline SceneRpcSEnterMirrorSceneNotify& operator=(const SceneRpcSEnterMirrorSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSEnterMirrorSceneNotify& default_instance();

  void Swap(SceneRpcSEnterMirrorSceneNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcSEnterMirrorSceneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSEnterMirrorSceneNotify& from);
  void MergeFrom(const SceneRpcSEnterMirrorSceneNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MapID = 1 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 MirrorID = 2 [default = -1];
  inline bool has_mirrorid() const;
  inline void clear_mirrorid();
  static const int kMirrorIDFieldNumber = 2;
  inline ::google::protobuf::int32 mirrorid() const;
  inline void set_mirrorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcSEnterMirrorSceneNotify)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mirrorid();
  inline void clear_has_mirrorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 mirrorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSEnterMirrorSceneNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcExitMirrorSceneAsk : public ::google::protobuf::Message {
 public:
  SceneRpcExitMirrorSceneAsk();
  virtual ~SceneRpcExitMirrorSceneAsk();

  SceneRpcExitMirrorSceneAsk(const SceneRpcExitMirrorSceneAsk& from);

  inline SceneRpcExitMirrorSceneAsk& operator=(const SceneRpcExitMirrorSceneAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcExitMirrorSceneAsk& default_instance();

  void Swap(SceneRpcExitMirrorSceneAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcExitMirrorSceneAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcExitMirrorSceneAsk& from);
  void MergeFrom(const SceneRpcExitMirrorSceneAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcExitMirrorSceneAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcExitMirrorSceneAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcExitMirrorSceneReply : public ::google::protobuf::Message {
 public:
  SceneRpcExitMirrorSceneReply();
  virtual ~SceneRpcExitMirrorSceneReply();

  SceneRpcExitMirrorSceneReply(const SceneRpcExitMirrorSceneReply& from);

  inline SceneRpcExitMirrorSceneReply& operator=(const SceneRpcExitMirrorSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcExitMirrorSceneReply& default_instance();

  void Swap(SceneRpcExitMirrorSceneReply* other);

  // implements Message ----------------------------------------------

  SceneRpcExitMirrorSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcExitMirrorSceneReply& from);
  void MergeFrom(const SceneRpcExitMirrorSceneReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcExitMirrorSceneReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcExitMirrorSceneReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcChangeSceneLeaveNotify : public ::google::protobuf::Message {
 public:
  SceneRpcChangeSceneLeaveNotify();
  virtual ~SceneRpcChangeSceneLeaveNotify();

  SceneRpcChangeSceneLeaveNotify(const SceneRpcChangeSceneLeaveNotify& from);

  inline SceneRpcChangeSceneLeaveNotify& operator=(const SceneRpcChangeSceneLeaveNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcChangeSceneLeaveNotify& default_instance();

  void Swap(SceneRpcChangeSceneLeaveNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcChangeSceneLeaveNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcChangeSceneLeaveNotify& from);
  void MergeFrom(const SceneRpcChangeSceneLeaveNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TargetLineID = 1 [default = -1];
  inline bool has_targetlineid() const;
  inline void clear_targetlineid();
  static const int kTargetLineIDFieldNumber = 1;
  inline ::google::protobuf::int32 targetlineid() const;
  inline void set_targetlineid(::google::protobuf::int32 value);

  // optional int32 TargetMapID = 2 [default = -1];
  inline bool has_targetmapid() const;
  inline void clear_targetmapid();
  static const int kTargetMapIDFieldNumber = 2;
  inline ::google::protobuf::int32 targetmapid() const;
  inline void set_targetmapid(::google::protobuf::int32 value);

  // optional uint64 RoleID = 4 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional int32 CopyID = 5 [default = -1];
  inline bool has_copyid() const;
  inline void clear_copyid();
  static const int kCopyIDFieldNumber = 5;
  inline ::google::protobuf::int32 copyid() const;
  inline void set_copyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcChangeSceneLeaveNotify)
 private:
  inline void set_has_targetlineid();
  inline void clear_has_targetlineid();
  inline void set_has_targetmapid();
  inline void clear_has_targetmapid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_copyid();
  inline void clear_has_copyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 targetlineid_;
  ::google::protobuf::int32 targetmapid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 copyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcChangeSceneLeaveNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcChangeLineAsk : public ::google::protobuf::Message {
 public:
  SceneRpcChangeLineAsk();
  virtual ~SceneRpcChangeLineAsk();

  SceneRpcChangeLineAsk(const SceneRpcChangeLineAsk& from);

  inline SceneRpcChangeLineAsk& operator=(const SceneRpcChangeLineAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcChangeLineAsk& default_instance();

  void Swap(SceneRpcChangeLineAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcChangeLineAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcChangeLineAsk& from);
  void MergeFrom(const SceneRpcChangeLineAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 LineID = 1 [default = -1];
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // optional int32 MapID = 2 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcChangeLineAsk)
 private:
  inline void set_has_lineid();
  inline void clear_has_lineid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lineid_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcChangeLineAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcChangeLineReply : public ::google::protobuf::Message {
 public:
  SceneRpcChangeLineReply();
  virtual ~SceneRpcChangeLineReply();

  SceneRpcChangeLineReply(const SceneRpcChangeLineReply& from);

  inline SceneRpcChangeLineReply& operator=(const SceneRpcChangeLineReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcChangeLineReply& default_instance();

  void Swap(SceneRpcChangeLineReply* other);

  // implements Message ----------------------------------------------

  SceneRpcChangeLineReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcChangeLineReply& from);
  void MergeFrom(const SceneRpcChangeLineReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 LineID = 2 [default = -1];
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // optional int32 MapID = 3 [default = -1];
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional uint64 RoleID = 4 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SceneRpcChangeLineReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lineid();
  inline void clear_has_lineid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 lineid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcChangeLineReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcPingAsk : public ::google::protobuf::Message {
 public:
  SceneRpcPingAsk();
  virtual ~SceneRpcPingAsk();

  SceneRpcPingAsk(const SceneRpcPingAsk& from);

  inline SceneRpcPingAsk& operator=(const SceneRpcPingAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcPingAsk& default_instance();

  void Swap(SceneRpcPingAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcPingAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcPingAsk& from);
  void MergeFrom(const SceneRpcPingAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcPingAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcPingAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcPingReply : public ::google::protobuf::Message {
 public:
  SceneRpcPingReply();
  virtual ~SceneRpcPingReply();

  SceneRpcPingReply(const SceneRpcPingReply& from);

  inline SceneRpcPingReply& operator=(const SceneRpcPingReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcPingReply& default_instance();

  void Swap(SceneRpcPingReply* other);

  // implements Message ----------------------------------------------

  SceneRpcPingReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcPingReply& from);
  void MergeFrom(const SceneRpcPingReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcPingReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcPingReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSyncSceneLineStatsNotify : public ::google::protobuf::Message {
 public:
  SceneRpcSyncSceneLineStatsNotify();
  virtual ~SceneRpcSyncSceneLineStatsNotify();

  SceneRpcSyncSceneLineStatsNotify(const SceneRpcSyncSceneLineStatsNotify& from);

  inline SceneRpcSyncSceneLineStatsNotify& operator=(const SceneRpcSyncSceneLineStatsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSyncSceneLineStatsNotify& default_instance();

  void Swap(SceneRpcSyncSceneLineStatsNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcSyncSceneLineStatsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSyncSceneLineStatsNotify& from);
  void MergeFrom(const SceneRpcSyncSceneLineStatsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SceneStats Scene_stats = 1;
  inline bool has_scene_stats() const;
  inline void clear_scene_stats();
  static const int kSceneStatsFieldNumber = 1;
  inline const ::SceneStats& scene_stats() const;
  inline ::SceneStats* mutable_scene_stats();
  inline ::SceneStats* release_scene_stats();
  inline void set_allocated_scene_stats(::SceneStats* scene_stats);

  // optional int32 Player_lineId = 2 [default = -1];
  inline bool has_player_lineid() const;
  inline void clear_player_lineid();
  static const int kPlayerLineIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_lineid() const;
  inline void set_player_lineid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcSyncSceneLineStatsNotify)
 private:
  inline void set_has_scene_stats();
  inline void clear_has_scene_stats();
  inline void set_has_player_lineid();
  inline void clear_has_player_lineid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SceneStats* scene_stats_;
  ::google::protobuf::int32 player_lineid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSyncSceneLineStatsNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcLogOutGameAsk : public ::google::protobuf::Message {
 public:
  SceneRpcLogOutGameAsk();
  virtual ~SceneRpcLogOutGameAsk();

  SceneRpcLogOutGameAsk(const SceneRpcLogOutGameAsk& from);

  inline SceneRpcLogOutGameAsk& operator=(const SceneRpcLogOutGameAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcLogOutGameAsk& default_instance();

  void Swap(SceneRpcLogOutGameAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcLogOutGameAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcLogOutGameAsk& from);
  void MergeFrom(const SceneRpcLogOutGameAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcLogOutGameAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcLogOutGameAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcLogOutGameReply : public ::google::protobuf::Message {
 public:
  SceneRpcLogOutGameReply();
  virtual ~SceneRpcLogOutGameReply();

  SceneRpcLogOutGameReply(const SceneRpcLogOutGameReply& from);

  inline SceneRpcLogOutGameReply& operator=(const SceneRpcLogOutGameReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcLogOutGameReply& default_instance();

  void Swap(SceneRpcLogOutGameReply* other);

  // implements Message ----------------------------------------------

  SceneRpcLogOutGameReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcLogOutGameReply& from);
  void MergeFrom(const SceneRpcLogOutGameReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcLogOutGameReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcLogOutGameReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcKickOutGameNotify : public ::google::protobuf::Message {
 public:
  SceneRpcKickOutGameNotify();
  virtual ~SceneRpcKickOutGameNotify();

  SceneRpcKickOutGameNotify(const SceneRpcKickOutGameNotify& from);

  inline SceneRpcKickOutGameNotify& operator=(const SceneRpcKickOutGameNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcKickOutGameNotify& default_instance();

  void Swap(SceneRpcKickOutGameNotify* other);

  // implements Message ----------------------------------------------

  SceneRpcKickOutGameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcKickOutGameNotify& from);
  void MergeFrom(const SceneRpcKickOutGameNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Kick_reason = 1;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 1;
  inline const ::std::string& kick_reason() const;
  inline void set_kick_reason(const ::std::string& value);
  inline void set_kick_reason(const char* value);
  inline void set_kick_reason(const char* value, size_t size);
  inline ::std::string* mutable_kick_reason();
  inline ::std::string* release_kick_reason();
  inline void set_allocated_kick_reason(::std::string* kick_reason);

  // optional int32 Reason_id = 2 [default = -1];
  inline bool has_reason_id() const;
  inline void clear_reason_id();
  static const int kReasonIdFieldNumber = 2;
  inline ::google::protobuf::int32 reason_id() const;
  inline void set_reason_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcKickOutGameNotify)
 private:
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  inline void set_has_reason_id();
  inline void clear_has_reason_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* kick_reason_;
  ::google::protobuf::int32 reason_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcKickOutGameNotify* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcShowFilmFinishAsk : public ::google::protobuf::Message {
 public:
  SceneRpcShowFilmFinishAsk();
  virtual ~SceneRpcShowFilmFinishAsk();

  SceneRpcShowFilmFinishAsk(const SceneRpcShowFilmFinishAsk& from);

  inline SceneRpcShowFilmFinishAsk& operator=(const SceneRpcShowFilmFinishAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcShowFilmFinishAsk& default_instance();

  void Swap(SceneRpcShowFilmFinishAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcShowFilmFinishAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcShowFilmFinishAsk& from);
  void MergeFrom(const SceneRpcShowFilmFinishAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcShowFilmFinishAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcShowFilmFinishAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcShowFilmFinishReply : public ::google::protobuf::Message {
 public:
  SceneRpcShowFilmFinishReply();
  virtual ~SceneRpcShowFilmFinishReply();

  SceneRpcShowFilmFinishReply(const SceneRpcShowFilmFinishReply& from);

  inline SceneRpcShowFilmFinishReply& operator=(const SceneRpcShowFilmFinishReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcShowFilmFinishReply& default_instance();

  void Swap(SceneRpcShowFilmFinishReply* other);

  // implements Message ----------------------------------------------

  SceneRpcShowFilmFinishReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcShowFilmFinishReply& from);
  void MergeFrom(const SceneRpcShowFilmFinishReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneRpcShowFilmFinishReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcShowFilmFinishReply* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSpecObjPosAsk : public ::google::protobuf::Message {
 public:
  SceneRpcSpecObjPosAsk();
  virtual ~SceneRpcSpecObjPosAsk();

  SceneRpcSpecObjPosAsk(const SceneRpcSpecObjPosAsk& from);

  inline SceneRpcSpecObjPosAsk& operator=(const SceneRpcSpecObjPosAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSpecObjPosAsk& default_instance();

  void Swap(SceneRpcSpecObjPosAsk* other);

  // implements Message ----------------------------------------------

  SceneRpcSpecObjPosAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSpecObjPosAsk& from);
  void MergeFrom(const SceneRpcSpecObjPosAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SceneRpcSpecObjPosAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSpecObjPosAsk* default_instance_;
};
// -------------------------------------------------------------------

class SceneRpcSpecObjPosReply : public ::google::protobuf::Message {
 public:
  SceneRpcSpecObjPosReply();
  virtual ~SceneRpcSpecObjPosReply();

  SceneRpcSpecObjPosReply(const SceneRpcSpecObjPosReply& from);

  inline SceneRpcSpecObjPosReply& operator=(const SceneRpcSpecObjPosReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRpcSpecObjPosReply& default_instance();

  void Swap(SceneRpcSpecObjPosReply* other);

  // implements Message ----------------------------------------------

  SceneRpcSpecObjPosReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRpcSpecObjPosReply& from);
  void MergeFrom(const SceneRpcSpecObjPosReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ObjPosInfo PosInfos = 2;
  inline int posinfos_size() const;
  inline void clear_posinfos();
  static const int kPosInfosFieldNumber = 2;
  inline const ::ObjPosInfo& posinfos(int index) const;
  inline ::ObjPosInfo* mutable_posinfos(int index);
  inline ::ObjPosInfo* add_posinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjPosInfo >&
      posinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjPosInfo >*
      mutable_posinfos();

  // @@protoc_insertion_point(class_scope:SceneRpcSpecObjPosReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ObjPosInfo > posinfos_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneRpc_2eproto();
  friend void protobuf_AssignDesc_SceneRpc_2eproto();
  friend void protobuf_ShutdownFile_SceneRpc_2eproto();

  void InitAsDefaultInstance();
  static SceneRpcSpecObjPosReply* default_instance_;
};
// ===================================================================


// ===================================================================

// SceneRpcLoadSceneCompleteAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool SceneRpcLoadSceneCompleteAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcLoadSceneCompleteAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcLoadSceneCompleteAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcLoadSceneCompleteAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcLoadSceneCompleteAsk::roleid() const {
  return roleid_;
}
inline void SceneRpcLoadSceneCompleteAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 SceneId = 2 [default = -1];
inline bool SceneRpcLoadSceneCompleteAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcLoadSceneCompleteAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcLoadSceneCompleteAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcLoadSceneCompleteAsk::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 SceneRpcLoadSceneCompleteAsk::sceneid() const {
  return sceneid_;
}
inline void SceneRpcLoadSceneCompleteAsk::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcLoadSceneCompleteReply

// optional int32 Result = 1 [default = -9999];
inline bool SceneRpcLoadSceneCompleteReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcLoadSceneCompleteReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcLoadSceneCompleteReply::result() const {
  return result_;
}
inline void SceneRpcLoadSceneCompleteReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 ObjId = 3 [default = -1];
inline bool SceneRpcLoadSceneCompleteReply::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcLoadSceneCompleteReply::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 SceneRpcLoadSceneCompleteReply::objid() const {
  return objid_;
}
inline void SceneRpcLoadSceneCompleteReply::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional .Vector3 Pos = 4;
inline bool SceneRpcLoadSceneCompleteReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcLoadSceneCompleteReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3::Clear();
  clear_has_pos();
}
inline const ::Vector3& SceneRpcLoadSceneCompleteReply::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3* SceneRpcLoadSceneCompleteReply::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3;
  return pos_;
}
inline ::Vector3* SceneRpcLoadSceneCompleteReply::release_pos() {
  clear_has_pos();
  ::Vector3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SceneRpcLoadSceneCompleteReply::set_allocated_pos(::Vector3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional float Dir = 5 [default = -1];
inline bool SceneRpcLoadSceneCompleteReply::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcLoadSceneCompleteReply::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_dir() {
  dir_ = -1;
  clear_has_dir();
}
inline float SceneRpcLoadSceneCompleteReply::dir() const {
  return dir_;
}
inline void SceneRpcLoadSceneCompleteReply::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional bytes ObjData = 6;
inline bool SceneRpcLoadSceneCompleteReply::has_objdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneRpcLoadSceneCompleteReply::set_has_objdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_has_objdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneRpcLoadSceneCompleteReply::clear_objdata() {
  if (objdata_ != &::google::protobuf::internal::kEmptyString) {
    objdata_->clear();
  }
  clear_has_objdata();
}
inline const ::std::string& SceneRpcLoadSceneCompleteReply::objdata() const {
  return *objdata_;
}
inline void SceneRpcLoadSceneCompleteReply::set_objdata(const ::std::string& value) {
  set_has_objdata();
  if (objdata_ == &::google::protobuf::internal::kEmptyString) {
    objdata_ = new ::std::string;
  }
  objdata_->assign(value);
}
inline void SceneRpcLoadSceneCompleteReply::set_objdata(const char* value) {
  set_has_objdata();
  if (objdata_ == &::google::protobuf::internal::kEmptyString) {
    objdata_ = new ::std::string;
  }
  objdata_->assign(value);
}
inline void SceneRpcLoadSceneCompleteReply::set_objdata(const void* value, size_t size) {
  set_has_objdata();
  if (objdata_ == &::google::protobuf::internal::kEmptyString) {
    objdata_ = new ::std::string;
  }
  objdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SceneRpcLoadSceneCompleteReply::mutable_objdata() {
  set_has_objdata();
  if (objdata_ == &::google::protobuf::internal::kEmptyString) {
    objdata_ = new ::std::string;
  }
  return objdata_;
}
inline ::std::string* SceneRpcLoadSceneCompleteReply::release_objdata() {
  clear_has_objdata();
  if (objdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = objdata_;
    objdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SceneRpcLoadSceneCompleteReply::set_allocated_objdata(::std::string* objdata) {
  if (objdata_ != &::google::protobuf::internal::kEmptyString) {
    delete objdata_;
  }
  if (objdata) {
    set_has_objdata();
    objdata_ = objdata;
  } else {
    clear_has_objdata();
    objdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SceneRpcDeletePlayerNotify

// repeated .ObjDeleteInfo Delete_list = 4;
inline int SceneRpcDeletePlayerNotify::delete_list_size() const {
  return delete_list_.size();
}
inline void SceneRpcDeletePlayerNotify::clear_delete_list() {
  delete_list_.Clear();
}
inline const ::ObjDeleteInfo& SceneRpcDeletePlayerNotify::delete_list(int index) const {
  return delete_list_.Get(index);
}
inline ::ObjDeleteInfo* SceneRpcDeletePlayerNotify::mutable_delete_list(int index) {
  return delete_list_.Mutable(index);
}
inline ::ObjDeleteInfo* SceneRpcDeletePlayerNotify::add_delete_list() {
  return delete_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjDeleteInfo >&
SceneRpcDeletePlayerNotify::delete_list() const {
  return delete_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjDeleteInfo >*
SceneRpcDeletePlayerNotify::mutable_delete_list() {
  return &delete_list_;
}

// -------------------------------------------------------------------

// SceneRpcConnectGameServerAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool SceneRpcConnectGameServerAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcConnectGameServerAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcConnectGameServerAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcConnectGameServerAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcConnectGameServerAsk::roleid() const {
  return roleid_;
}
inline void SceneRpcConnectGameServerAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string Key = 2;
inline bool SceneRpcConnectGameServerAsk::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcConnectGameServerAsk::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcConnectGameServerAsk::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcConnectGameServerAsk::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SceneRpcConnectGameServerAsk::key() const {
  return *key_;
}
inline void SceneRpcConnectGameServerAsk::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SceneRpcConnectGameServerAsk::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SceneRpcConnectGameServerAsk::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SceneRpcConnectGameServerAsk::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SceneRpcConnectGameServerAsk::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SceneRpcConnectGameServerAsk::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 SceneID = 3 [default = -1];
inline bool SceneRpcConnectGameServerAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcConnectGameServerAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcConnectGameServerAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcConnectGameServerAsk::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 SceneRpcConnectGameServerAsk::sceneid() const {
  return sceneid_;
}
inline void SceneRpcConnectGameServerAsk::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 LineID = 4 [default = -1];
inline bool SceneRpcConnectGameServerAsk::has_lineid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcConnectGameServerAsk::set_has_lineid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcConnectGameServerAsk::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcConnectGameServerAsk::clear_lineid() {
  lineid_ = -1;
  clear_has_lineid();
}
inline ::google::protobuf::int32 SceneRpcConnectGameServerAsk::lineid() const {
  return lineid_;
}
inline void SceneRpcConnectGameServerAsk::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcConnectGameServerReply

// optional int32 Result = 1 [default = -9999];
inline bool SceneRpcConnectGameServerReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcConnectGameServerReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcConnectGameServerReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcConnectGameServerReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcConnectGameServerReply::result() const {
  return result_;
}
inline void SceneRpcConnectGameServerReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool SceneRpcConnectGameServerReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcConnectGameServerReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcConnectGameServerReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcConnectGameServerReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcConnectGameServerReply::roleid() const {
  return roleid_;
}
inline void SceneRpcConnectGameServerReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 SceneId = 3 [default = -1];
inline bool SceneRpcConnectGameServerReply::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcConnectGameServerReply::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcConnectGameServerReply::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcConnectGameServerReply::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 SceneRpcConnectGameServerReply::sceneid() const {
  return sceneid_;
}
inline void SceneRpcConnectGameServerReply::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 MapId = 5 [default = -1];
inline bool SceneRpcConnectGameServerReply::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcConnectGameServerReply::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcConnectGameServerReply::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcConnectGameServerReply::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcConnectGameServerReply::mapid() const {
  return mapid_;
}
inline void SceneRpcConnectGameServerReply::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcCreateObjNotify

// repeated .ObjCreateInfo Create_list = 14;
inline int SceneRpcCreateObjNotify::create_list_size() const {
  return create_list_.size();
}
inline void SceneRpcCreateObjNotify::clear_create_list() {
  create_list_.Clear();
}
inline const ::ObjCreateInfo& SceneRpcCreateObjNotify::create_list(int index) const {
  return create_list_.Get(index);
}
inline ::ObjCreateInfo* SceneRpcCreateObjNotify::mutable_create_list(int index) {
  return create_list_.Mutable(index);
}
inline ::ObjCreateInfo* SceneRpcCreateObjNotify::add_create_list() {
  return create_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjCreateInfo >&
SceneRpcCreateObjNotify::create_list() const {
  return create_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjCreateInfo >*
SceneRpcCreateObjNotify::mutable_create_list() {
  return &create_list_;
}

// -------------------------------------------------------------------

// SceneRpcSurroundingHumanAsk

// -------------------------------------------------------------------

// SceneRpcSurroundingHumanReply

// optional int32 Result = 1 [default = -9999];
inline bool SceneRpcSurroundingHumanReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcSurroundingHumanReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcSurroundingHumanReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcSurroundingHumanReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcSurroundingHumanReply::result() const {
  return result_;
}
inline void SceneRpcSurroundingHumanReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .CharacterInfo RoleList = 2;
inline int SceneRpcSurroundingHumanReply::rolelist_size() const {
  return rolelist_.size();
}
inline void SceneRpcSurroundingHumanReply::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::CharacterInfo& SceneRpcSurroundingHumanReply::rolelist(int index) const {
  return rolelist_.Get(index);
}
inline ::CharacterInfo* SceneRpcSurroundingHumanReply::mutable_rolelist(int index) {
  return rolelist_.Mutable(index);
}
inline ::CharacterInfo* SceneRpcSurroundingHumanReply::add_rolelist() {
  return rolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
SceneRpcSurroundingHumanReply::rolelist() const {
  return rolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
SceneRpcSurroundingHumanReply::mutable_rolelist() {
  return &rolelist_;
}

// -------------------------------------------------------------------

// SceneRpcCEnterSceneNotify

// optional int32 SceneId = 3 [default = -1];
inline bool SceneRpcCEnterSceneNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcCEnterSceneNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcCEnterSceneNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcCEnterSceneNotify::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 SceneRpcCEnterSceneNotify::sceneid() const {
  return sceneid_;
}
inline void SceneRpcCEnterSceneNotify::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 MapId = 6 [default = -1];
inline bool SceneRpcCEnterSceneNotify::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcCEnterSceneNotify::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcCEnterSceneNotify::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcCEnterSceneNotify::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcCEnterSceneNotify::mapid() const {
  return mapid_;
}
inline void SceneRpcCEnterSceneNotify::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 LineId = 7 [default = -1];
inline bool SceneRpcCEnterSceneNotify::has_lineid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcCEnterSceneNotify::set_has_lineid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcCEnterSceneNotify::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcCEnterSceneNotify::clear_lineid() {
  lineid_ = -1;
  clear_has_lineid();
}
inline ::google::protobuf::int32 SceneRpcCEnterSceneNotify::lineid() const {
  return lineid_;
}
inline void SceneRpcCEnterSceneNotify::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcSEnterSceneNotify

// optional int32 Result = 1 [default = -9999];
inline bool SceneRpcSEnterSceneNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcSEnterSceneNotify::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::result() const {
  return result_;
}
inline void SceneRpcSEnterSceneNotify::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 SceneId = 8 [default = -1];
inline bool SceneRpcSEnterSceneNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcSEnterSceneNotify::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::sceneid() const {
  return sceneid_;
}
inline void SceneRpcSEnterSceneNotify::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 SceneConfigId = 9 [default = -1];
inline bool SceneRpcSEnterSceneNotify::has_sceneconfigid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_sceneconfigid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_sceneconfigid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcSEnterSceneNotify::clear_sceneconfigid() {
  sceneconfigid_ = -1;
  clear_has_sceneconfigid();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::sceneconfigid() const {
  return sceneconfigid_;
}
inline void SceneRpcSEnterSceneNotify::set_sceneconfigid(::google::protobuf::int32 value) {
  set_has_sceneconfigid();
  sceneconfigid_ = value;
}

// optional int32 MapId = 10 [default = -1];
inline bool SceneRpcSEnterSceneNotify::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcSEnterSceneNotify::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::mapid() const {
  return mapid_;
}
inline void SceneRpcSEnterSceneNotify::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint64 RoleId = 11 [default = 0];
inline bool SceneRpcSEnterSceneNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneRpcSEnterSceneNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcSEnterSceneNotify::roleid() const {
  return roleid_;
}
inline void SceneRpcSEnterSceneNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 DungeonConfigId = 12 [default = -1];
inline bool SceneRpcSEnterSceneNotify::has_dungeonconfigid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_dungeonconfigid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_dungeonconfigid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SceneRpcSEnterSceneNotify::clear_dungeonconfigid() {
  dungeonconfigid_ = -1;
  clear_has_dungeonconfigid();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::dungeonconfigid() const {
  return dungeonconfigid_;
}
inline void SceneRpcSEnterSceneNotify::set_dungeonconfigid(::google::protobuf::int32 value) {
  set_has_dungeonconfigid();
  dungeonconfigid_ = value;
}

// optional int32 LineId = 14 [default = -1];
inline bool SceneRpcSEnterSceneNotify::has_lineid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SceneRpcSEnterSceneNotify::set_has_lineid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SceneRpcSEnterSceneNotify::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SceneRpcSEnterSceneNotify::clear_lineid() {
  lineid_ = -1;
  clear_has_lineid();
}
inline ::google::protobuf::int32 SceneRpcSEnterSceneNotify::lineid() const {
  return lineid_;
}
inline void SceneRpcSEnterSceneNotify::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// repeated .IntPair TypeConfig = 18;
inline int SceneRpcSEnterSceneNotify::typeconfig_size() const {
  return typeconfig_.size();
}
inline void SceneRpcSEnterSceneNotify::clear_typeconfig() {
  typeconfig_.Clear();
}
inline const ::IntPair& SceneRpcSEnterSceneNotify::typeconfig(int index) const {
  return typeconfig_.Get(index);
}
inline ::IntPair* SceneRpcSEnterSceneNotify::mutable_typeconfig(int index) {
  return typeconfig_.Mutable(index);
}
inline ::IntPair* SceneRpcSEnterSceneNotify::add_typeconfig() {
  return typeconfig_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IntPair >&
SceneRpcSEnterSceneNotify::typeconfig() const {
  return typeconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::IntPair >*
SceneRpcSEnterSceneNotify::mutable_typeconfig() {
  return &typeconfig_;
}

// -------------------------------------------------------------------

// SceneRpcObjDieNotify

// optional int32 ObjId = 1 [default = -1];
inline bool SceneRpcObjDieNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcObjDieNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcObjDieNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcObjDieNotify::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 SceneRpcObjDieNotify::objid() const {
  return objid_;
}
inline void SceneRpcObjDieNotify::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional int32 RespawnTime = 2 [default = -1];
inline bool SceneRpcObjDieNotify::has_respawntime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcObjDieNotify::set_has_respawntime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcObjDieNotify::clear_has_respawntime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcObjDieNotify::clear_respawntime() {
  respawntime_ = -1;
  clear_has_respawntime();
}
inline ::google::protobuf::int32 SceneRpcObjDieNotify::respawntime() const {
  return respawntime_;
}
inline void SceneRpcObjDieNotify::set_respawntime(::google::protobuf::int32 value) {
  set_has_respawntime();
  respawntime_ = value;
}

// optional int32 ConfigId = 3 [default = -1];
inline bool SceneRpcObjDieNotify::has_configid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcObjDieNotify::set_has_configid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcObjDieNotify::clear_has_configid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcObjDieNotify::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 SceneRpcObjDieNotify::configid() const {
  return configid_;
}
inline void SceneRpcObjDieNotify::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
}

// optional int32 ObjType = 4 [default = -1];
inline bool SceneRpcObjDieNotify::has_objtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcObjDieNotify::set_has_objtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcObjDieNotify::clear_has_objtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcObjDieNotify::clear_objtype() {
  objtype_ = -1;
  clear_has_objtype();
}
inline ::google::protobuf::int32 SceneRpcObjDieNotify::objtype() const {
  return objtype_;
}
inline void SceneRpcObjDieNotify::set_objtype(::google::protobuf::int32 value) {
  set_has_objtype();
  objtype_ = value;
}

// -------------------------------------------------------------------

// SceneRpcCollide_ChangeSceneAsk

// optional int32 Collide_id = 1 [default = -1];
inline bool SceneRpcCollide_ChangeSceneAsk::has_collide_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcCollide_ChangeSceneAsk::set_has_collide_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcCollide_ChangeSceneAsk::clear_has_collide_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcCollide_ChangeSceneAsk::clear_collide_id() {
  collide_id_ = -1;
  clear_has_collide_id();
}
inline ::google::protobuf::int32 SceneRpcCollide_ChangeSceneAsk::collide_id() const {
  return collide_id_;
}
inline void SceneRpcCollide_ChangeSceneAsk::set_collide_id(::google::protobuf::int32 value) {
  set_has_collide_id();
  collide_id_ = value;
}

// -------------------------------------------------------------------

// SceneRpcCollide_ChangeSceneReply

// optional int32 Result = 1 [default = -9999];
inline bool SceneRpcCollide_ChangeSceneReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcCollide_ChangeSceneReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcCollide_ChangeSceneReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcCollide_ChangeSceneReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcCollide_ChangeSceneReply::result() const {
  return result_;
}
inline void SceneRpcCollide_ChangeSceneReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcEnterMirrorAsk

// optional int32 MirrorID = 1 [default = -1];
inline bool SceneRpcEnterMirrorAsk::has_mirrorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcEnterMirrorAsk::set_has_mirrorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcEnterMirrorAsk::clear_has_mirrorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcEnterMirrorAsk::clear_mirrorid() {
  mirrorid_ = -1;
  clear_has_mirrorid();
}
inline ::google::protobuf::int32 SceneRpcEnterMirrorAsk::mirrorid() const {
  return mirrorid_;
}
inline void SceneRpcEnterMirrorAsk::set_mirrorid(::google::protobuf::int32 value) {
  set_has_mirrorid();
  mirrorid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcEnterMirrorReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcEnterMirrorReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcEnterMirrorReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcEnterMirrorReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcEnterMirrorReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcEnterMirrorReply::result() const {
  return result_;
}
inline void SceneRpcEnterMirrorReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcSEnterMirrorSceneNotify

// optional int32 MapID = 1 [default = -1];
inline bool SceneRpcSEnterMirrorSceneNotify::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcSEnterMirrorSceneNotify::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcSEnterMirrorSceneNotify::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcSEnterMirrorSceneNotify::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcSEnterMirrorSceneNotify::mapid() const {
  return mapid_;
}
inline void SceneRpcSEnterMirrorSceneNotify::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 MirrorID = 2 [default = -1];
inline bool SceneRpcSEnterMirrorSceneNotify::has_mirrorid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcSEnterMirrorSceneNotify::set_has_mirrorid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcSEnterMirrorSceneNotify::clear_has_mirrorid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcSEnterMirrorSceneNotify::clear_mirrorid() {
  mirrorid_ = -1;
  clear_has_mirrorid();
}
inline ::google::protobuf::int32 SceneRpcSEnterMirrorSceneNotify::mirrorid() const {
  return mirrorid_;
}
inline void SceneRpcSEnterMirrorSceneNotify::set_mirrorid(::google::protobuf::int32 value) {
  set_has_mirrorid();
  mirrorid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcExitMirrorSceneAsk

// -------------------------------------------------------------------

// SceneRpcExitMirrorSceneReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcExitMirrorSceneReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcExitMirrorSceneReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcExitMirrorSceneReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcExitMirrorSceneReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcExitMirrorSceneReply::result() const {
  return result_;
}
inline void SceneRpcExitMirrorSceneReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcChangeSceneLeaveNotify

// optional int32 TargetLineID = 1 [default = -1];
inline bool SceneRpcChangeSceneLeaveNotify::has_targetlineid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcChangeSceneLeaveNotify::set_has_targetlineid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_has_targetlineid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_targetlineid() {
  targetlineid_ = -1;
  clear_has_targetlineid();
}
inline ::google::protobuf::int32 SceneRpcChangeSceneLeaveNotify::targetlineid() const {
  return targetlineid_;
}
inline void SceneRpcChangeSceneLeaveNotify::set_targetlineid(::google::protobuf::int32 value) {
  set_has_targetlineid();
  targetlineid_ = value;
}

// optional int32 TargetMapID = 2 [default = -1];
inline bool SceneRpcChangeSceneLeaveNotify::has_targetmapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcChangeSceneLeaveNotify::set_has_targetmapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_has_targetmapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_targetmapid() {
  targetmapid_ = -1;
  clear_has_targetmapid();
}
inline ::google::protobuf::int32 SceneRpcChangeSceneLeaveNotify::targetmapid() const {
  return targetmapid_;
}
inline void SceneRpcChangeSceneLeaveNotify::set_targetmapid(::google::protobuf::int32 value) {
  set_has_targetmapid();
  targetmapid_ = value;
}

// optional uint64 RoleID = 4 [default = 0];
inline bool SceneRpcChangeSceneLeaveNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcChangeSceneLeaveNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcChangeSceneLeaveNotify::roleid() const {
  return roleid_;
}
inline void SceneRpcChangeSceneLeaveNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 CopyID = 5 [default = -1];
inline bool SceneRpcChangeSceneLeaveNotify::has_copyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcChangeSceneLeaveNotify::set_has_copyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_has_copyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcChangeSceneLeaveNotify::clear_copyid() {
  copyid_ = -1;
  clear_has_copyid();
}
inline ::google::protobuf::int32 SceneRpcChangeSceneLeaveNotify::copyid() const {
  return copyid_;
}
inline void SceneRpcChangeSceneLeaveNotify::set_copyid(::google::protobuf::int32 value) {
  set_has_copyid();
  copyid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcChangeLineAsk

// optional int32 LineID = 1 [default = -1];
inline bool SceneRpcChangeLineAsk::has_lineid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcChangeLineAsk::set_has_lineid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcChangeLineAsk::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcChangeLineAsk::clear_lineid() {
  lineid_ = -1;
  clear_has_lineid();
}
inline ::google::protobuf::int32 SceneRpcChangeLineAsk::lineid() const {
  return lineid_;
}
inline void SceneRpcChangeLineAsk::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// optional int32 MapID = 2 [default = -1];
inline bool SceneRpcChangeLineAsk::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcChangeLineAsk::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcChangeLineAsk::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcChangeLineAsk::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcChangeLineAsk::mapid() const {
  return mapid_;
}
inline void SceneRpcChangeLineAsk::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcChangeLineReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcChangeLineReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcChangeLineReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcChangeLineReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcChangeLineReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcChangeLineReply::result() const {
  return result_;
}
inline void SceneRpcChangeLineReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 LineID = 2 [default = -1];
inline bool SceneRpcChangeLineReply::has_lineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcChangeLineReply::set_has_lineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcChangeLineReply::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcChangeLineReply::clear_lineid() {
  lineid_ = -1;
  clear_has_lineid();
}
inline ::google::protobuf::int32 SceneRpcChangeLineReply::lineid() const {
  return lineid_;
}
inline void SceneRpcChangeLineReply::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// optional int32 MapID = 3 [default = -1];
inline bool SceneRpcChangeLineReply::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneRpcChangeLineReply::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneRpcChangeLineReply::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneRpcChangeLineReply::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SceneRpcChangeLineReply::mapid() const {
  return mapid_;
}
inline void SceneRpcChangeLineReply::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint64 RoleID = 4 [default = 0];
inline bool SceneRpcChangeLineReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneRpcChangeLineReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneRpcChangeLineReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneRpcChangeLineReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 SceneRpcChangeLineReply::roleid() const {
  return roleid_;
}
inline void SceneRpcChangeLineReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcPingAsk

// -------------------------------------------------------------------

// SceneRpcPingReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcPingReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcPingReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcPingReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcPingReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcPingReply::result() const {
  return result_;
}
inline void SceneRpcPingReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcSyncSceneLineStatsNotify

// optional .SceneStats Scene_stats = 1;
inline bool SceneRpcSyncSceneLineStatsNotify::has_scene_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcSyncSceneLineStatsNotify::set_has_scene_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcSyncSceneLineStatsNotify::clear_has_scene_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcSyncSceneLineStatsNotify::clear_scene_stats() {
  if (scene_stats_ != NULL) scene_stats_->::SceneStats::Clear();
  clear_has_scene_stats();
}
inline const ::SceneStats& SceneRpcSyncSceneLineStatsNotify::scene_stats() const {
  return scene_stats_ != NULL ? *scene_stats_ : *default_instance_->scene_stats_;
}
inline ::SceneStats* SceneRpcSyncSceneLineStatsNotify::mutable_scene_stats() {
  set_has_scene_stats();
  if (scene_stats_ == NULL) scene_stats_ = new ::SceneStats;
  return scene_stats_;
}
inline ::SceneStats* SceneRpcSyncSceneLineStatsNotify::release_scene_stats() {
  clear_has_scene_stats();
  ::SceneStats* temp = scene_stats_;
  scene_stats_ = NULL;
  return temp;
}
inline void SceneRpcSyncSceneLineStatsNotify::set_allocated_scene_stats(::SceneStats* scene_stats) {
  delete scene_stats_;
  scene_stats_ = scene_stats;
  if (scene_stats) {
    set_has_scene_stats();
  } else {
    clear_has_scene_stats();
  }
}

// optional int32 Player_lineId = 2 [default = -1];
inline bool SceneRpcSyncSceneLineStatsNotify::has_player_lineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcSyncSceneLineStatsNotify::set_has_player_lineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcSyncSceneLineStatsNotify::clear_has_player_lineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcSyncSceneLineStatsNotify::clear_player_lineid() {
  player_lineid_ = -1;
  clear_has_player_lineid();
}
inline ::google::protobuf::int32 SceneRpcSyncSceneLineStatsNotify::player_lineid() const {
  return player_lineid_;
}
inline void SceneRpcSyncSceneLineStatsNotify::set_player_lineid(::google::protobuf::int32 value) {
  set_has_player_lineid();
  player_lineid_ = value;
}

// -------------------------------------------------------------------

// SceneRpcLogOutGameAsk

// -------------------------------------------------------------------

// SceneRpcLogOutGameReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcLogOutGameReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcLogOutGameReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcLogOutGameReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcLogOutGameReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcLogOutGameReply::result() const {
  return result_;
}
inline void SceneRpcLogOutGameReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcKickOutGameNotify

// optional string Kick_reason = 1;
inline bool SceneRpcKickOutGameNotify::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcKickOutGameNotify::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcKickOutGameNotify::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcKickOutGameNotify::clear_kick_reason() {
  if (kick_reason_ != &::google::protobuf::internal::kEmptyString) {
    kick_reason_->clear();
  }
  clear_has_kick_reason();
}
inline const ::std::string& SceneRpcKickOutGameNotify::kick_reason() const {
  return *kick_reason_;
}
inline void SceneRpcKickOutGameNotify::set_kick_reason(const ::std::string& value) {
  set_has_kick_reason();
  if (kick_reason_ == &::google::protobuf::internal::kEmptyString) {
    kick_reason_ = new ::std::string;
  }
  kick_reason_->assign(value);
}
inline void SceneRpcKickOutGameNotify::set_kick_reason(const char* value) {
  set_has_kick_reason();
  if (kick_reason_ == &::google::protobuf::internal::kEmptyString) {
    kick_reason_ = new ::std::string;
  }
  kick_reason_->assign(value);
}
inline void SceneRpcKickOutGameNotify::set_kick_reason(const char* value, size_t size) {
  set_has_kick_reason();
  if (kick_reason_ == &::google::protobuf::internal::kEmptyString) {
    kick_reason_ = new ::std::string;
  }
  kick_reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SceneRpcKickOutGameNotify::mutable_kick_reason() {
  set_has_kick_reason();
  if (kick_reason_ == &::google::protobuf::internal::kEmptyString) {
    kick_reason_ = new ::std::string;
  }
  return kick_reason_;
}
inline ::std::string* SceneRpcKickOutGameNotify::release_kick_reason() {
  clear_has_kick_reason();
  if (kick_reason_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = kick_reason_;
    kick_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SceneRpcKickOutGameNotify::set_allocated_kick_reason(::std::string* kick_reason) {
  if (kick_reason_ != &::google::protobuf::internal::kEmptyString) {
    delete kick_reason_;
  }
  if (kick_reason) {
    set_has_kick_reason();
    kick_reason_ = kick_reason;
  } else {
    clear_has_kick_reason();
    kick_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 Reason_id = 2 [default = -1];
inline bool SceneRpcKickOutGameNotify::has_reason_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneRpcKickOutGameNotify::set_has_reason_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneRpcKickOutGameNotify::clear_has_reason_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneRpcKickOutGameNotify::clear_reason_id() {
  reason_id_ = -1;
  clear_has_reason_id();
}
inline ::google::protobuf::int32 SceneRpcKickOutGameNotify::reason_id() const {
  return reason_id_;
}
inline void SceneRpcKickOutGameNotify::set_reason_id(::google::protobuf::int32 value) {
  set_has_reason_id();
  reason_id_ = value;
}

// -------------------------------------------------------------------

// SceneRpcShowFilmFinishAsk

// -------------------------------------------------------------------

// SceneRpcShowFilmFinishReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcShowFilmFinishReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcShowFilmFinishReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcShowFilmFinishReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcShowFilmFinishReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcShowFilmFinishReply::result() const {
  return result_;
}
inline void SceneRpcShowFilmFinishReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SceneRpcSpecObjPosAsk

// -------------------------------------------------------------------

// SceneRpcSpecObjPosReply

// optional int32 Result = 1 [default = -1];
inline bool SceneRpcSpecObjPosReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneRpcSpecObjPosReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneRpcSpecObjPosReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneRpcSpecObjPosReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 SceneRpcSpecObjPosReply::result() const {
  return result_;
}
inline void SceneRpcSpecObjPosReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .ObjPosInfo PosInfos = 2;
inline int SceneRpcSpecObjPosReply::posinfos_size() const {
  return posinfos_.size();
}
inline void SceneRpcSpecObjPosReply::clear_posinfos() {
  posinfos_.Clear();
}
inline const ::ObjPosInfo& SceneRpcSpecObjPosReply::posinfos(int index) const {
  return posinfos_.Get(index);
}
inline ::ObjPosInfo* SceneRpcSpecObjPosReply::mutable_posinfos(int index) {
  return posinfos_.Mutable(index);
}
inline ::ObjPosInfo* SceneRpcSpecObjPosReply::add_posinfos() {
  return posinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjPosInfo >&
SceneRpcSpecObjPosReply::posinfos() const {
  return posinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjPosInfo >*
SceneRpcSpecObjPosReply::mutable_posinfos() {
  return &posinfos_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneRpc_2eproto__INCLUDED
