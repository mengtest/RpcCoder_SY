// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchRpc.proto

#ifndef PROTOBUF_MatchRpc_2eproto__INCLUDED
#define PROTOBUF_MatchRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MatchRpc_2eproto();
void protobuf_AssignDesc_MatchRpc_2eproto();
void protobuf_ShutdownFile_MatchRpc_2eproto();

class MatchRpcAutoMatchAsk;
class MatchRpcAutoMatchReply;
class MatchRpcCancelMatchAsk;
class MatchRpcCancelMatchReply;
class MatchRpcCancelMatchNotifyNotify;
class MatchRpcPrepareRoomNotify;
class MatchRpcReadyAsk;
class MatchRpcReadyReply;
class MatchRpcCancelReadyAsk;
class MatchRpcCancelReadyReply;
class MatchRpcRoomCancelNotify;
class MatchRpcMemberReadyNotify;

// ===================================================================

class MatchRpcAutoMatchAsk : public ::google::protobuf::Message {
 public:
  MatchRpcAutoMatchAsk();
  virtual ~MatchRpcAutoMatchAsk();

  MatchRpcAutoMatchAsk(const MatchRpcAutoMatchAsk& from);

  inline MatchRpcAutoMatchAsk& operator=(const MatchRpcAutoMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcAutoMatchAsk& default_instance();

  void Swap(MatchRpcAutoMatchAsk* other);

  // implements Message ----------------------------------------------

  MatchRpcAutoMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcAutoMatchAsk& from);
  void MergeFrom(const MatchRpcAutoMatchAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlayerMatchData MatchInfo = 1;
  inline bool has_matchinfo() const;
  inline void clear_matchinfo();
  static const int kMatchInfoFieldNumber = 1;
  inline const ::PlayerMatchData& matchinfo() const;
  inline ::PlayerMatchData* mutable_matchinfo();
  inline ::PlayerMatchData* release_matchinfo();
  inline void set_allocated_matchinfo(::PlayerMatchData* matchinfo);

  // @@protoc_insertion_point(class_scope:MatchRpcAutoMatchAsk)
 private:
  inline void set_has_matchinfo();
  inline void clear_has_matchinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PlayerMatchData* matchinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcAutoMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcAutoMatchReply : public ::google::protobuf::Message {
 public:
  MatchRpcAutoMatchReply();
  virtual ~MatchRpcAutoMatchReply();

  MatchRpcAutoMatchReply(const MatchRpcAutoMatchReply& from);

  inline MatchRpcAutoMatchReply& operator=(const MatchRpcAutoMatchReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcAutoMatchReply& default_instance();

  void Swap(MatchRpcAutoMatchReply* other);

  // implements Message ----------------------------------------------

  MatchRpcAutoMatchReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcAutoMatchReply& from);
  void MergeFrom(const MatchRpcAutoMatchReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .PlayerMatchData MatchInfo = 2;
  inline bool has_matchinfo() const;
  inline void clear_matchinfo();
  static const int kMatchInfoFieldNumber = 2;
  inline const ::PlayerMatchData& matchinfo() const;
  inline ::PlayerMatchData* mutable_matchinfo();
  inline ::PlayerMatchData* release_matchinfo();
  inline void set_allocated_matchinfo(::PlayerMatchData* matchinfo);

  // @@protoc_insertion_point(class_scope:MatchRpcAutoMatchReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_matchinfo();
  inline void clear_has_matchinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PlayerMatchData* matchinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcAutoMatchReply* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcCancelMatchAsk : public ::google::protobuf::Message {
 public:
  MatchRpcCancelMatchAsk();
  virtual ~MatchRpcCancelMatchAsk();

  MatchRpcCancelMatchAsk(const MatchRpcCancelMatchAsk& from);

  inline MatchRpcCancelMatchAsk& operator=(const MatchRpcCancelMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcCancelMatchAsk& default_instance();

  void Swap(MatchRpcCancelMatchAsk* other);

  // implements Message ----------------------------------------------

  MatchRpcCancelMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcCancelMatchAsk& from);
  void MergeFrom(const MatchRpcCancelMatchAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchRpcCancelMatchAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcCancelMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcCancelMatchReply : public ::google::protobuf::Message {
 public:
  MatchRpcCancelMatchReply();
  virtual ~MatchRpcCancelMatchReply();

  MatchRpcCancelMatchReply(const MatchRpcCancelMatchReply& from);

  inline MatchRpcCancelMatchReply& operator=(const MatchRpcCancelMatchReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcCancelMatchReply& default_instance();

  void Swap(MatchRpcCancelMatchReply* other);

  // implements Message ----------------------------------------------

  MatchRpcCancelMatchReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcCancelMatchReply& from);
  void MergeFrom(const MatchRpcCancelMatchReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MatchRpcCancelMatchReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcCancelMatchReply* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcCancelMatchNotifyNotify : public ::google::protobuf::Message {
 public:
  MatchRpcCancelMatchNotifyNotify();
  virtual ~MatchRpcCancelMatchNotifyNotify();

  MatchRpcCancelMatchNotifyNotify(const MatchRpcCancelMatchNotifyNotify& from);

  inline MatchRpcCancelMatchNotifyNotify& operator=(const MatchRpcCancelMatchNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcCancelMatchNotifyNotify& default_instance();

  void Swap(MatchRpcCancelMatchNotifyNotify* other);

  // implements Message ----------------------------------------------

  MatchRpcCancelMatchNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcCancelMatchNotifyNotify& from);
  void MergeFrom(const MatchRpcCancelMatchNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchRpcCancelMatchNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcCancelMatchNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcPrepareRoomNotify : public ::google::protobuf::Message {
 public:
  MatchRpcPrepareRoomNotify();
  virtual ~MatchRpcPrepareRoomNotify();

  MatchRpcPrepareRoomNotify(const MatchRpcPrepareRoomNotify& from);

  inline MatchRpcPrepareRoomNotify& operator=(const MatchRpcPrepareRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcPrepareRoomNotify& default_instance();

  void Swap(MatchRpcPrepareRoomNotify* other);

  // implements Message ----------------------------------------------

  MatchRpcPrepareRoomNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcPrepareRoomNotify& from);
  void MergeFrom(const MatchRpcPrepareRoomNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PBMatchRoom ReadyRoom = 1;
  inline bool has_readyroom() const;
  inline void clear_readyroom();
  static const int kReadyRoomFieldNumber = 1;
  inline const ::PBMatchRoom& readyroom() const;
  inline ::PBMatchRoom* mutable_readyroom();
  inline ::PBMatchRoom* release_readyroom();
  inline void set_allocated_readyroom(::PBMatchRoom* readyroom);

  // @@protoc_insertion_point(class_scope:MatchRpcPrepareRoomNotify)
 private:
  inline void set_has_readyroom();
  inline void clear_has_readyroom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBMatchRoom* readyroom_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcPrepareRoomNotify* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcReadyAsk : public ::google::protobuf::Message {
 public:
  MatchRpcReadyAsk();
  virtual ~MatchRpcReadyAsk();

  MatchRpcReadyAsk(const MatchRpcReadyAsk& from);

  inline MatchRpcReadyAsk& operator=(const MatchRpcReadyAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcReadyAsk& default_instance();

  void Swap(MatchRpcReadyAsk* other);

  // implements Message ----------------------------------------------

  MatchRpcReadyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcReadyAsk& from);
  void MergeFrom(const MatchRpcReadyAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MatchType = 1 [default = -1];
  inline bool has_matchtype() const;
  inline void clear_matchtype();
  static const int kMatchTypeFieldNumber = 1;
  inline ::google::protobuf::int32 matchtype() const;
  inline void set_matchtype(::google::protobuf::int32 value);

  // optional uint64 RoomId = 2 [default = 0];
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MatchRpcReadyAsk)
 private:
  inline void set_has_matchtype();
  inline void clear_has_matchtype();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 matchtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcReadyAsk* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcReadyReply : public ::google::protobuf::Message {
 public:
  MatchRpcReadyReply();
  virtual ~MatchRpcReadyReply();

  MatchRpcReadyReply(const MatchRpcReadyReply& from);

  inline MatchRpcReadyReply& operator=(const MatchRpcReadyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcReadyReply& default_instance();

  void Swap(MatchRpcReadyReply* other);

  // implements Message ----------------------------------------------

  MatchRpcReadyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcReadyReply& from);
  void MergeFrom(const MatchRpcReadyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MatchRpcReadyReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcReadyReply* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcCancelReadyAsk : public ::google::protobuf::Message {
 public:
  MatchRpcCancelReadyAsk();
  virtual ~MatchRpcCancelReadyAsk();

  MatchRpcCancelReadyAsk(const MatchRpcCancelReadyAsk& from);

  inline MatchRpcCancelReadyAsk& operator=(const MatchRpcCancelReadyAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcCancelReadyAsk& default_instance();

  void Swap(MatchRpcCancelReadyAsk* other);

  // implements Message ----------------------------------------------

  MatchRpcCancelReadyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcCancelReadyAsk& from);
  void MergeFrom(const MatchRpcCancelReadyAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MatchType = 1 [default = -1];
  inline bool has_matchtype() const;
  inline void clear_matchtype();
  static const int kMatchTypeFieldNumber = 1;
  inline ::google::protobuf::int32 matchtype() const;
  inline void set_matchtype(::google::protobuf::int32 value);

  // optional uint64 RoomId = 2 [default = 0];
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MatchRpcCancelReadyAsk)
 private:
  inline void set_has_matchtype();
  inline void clear_has_matchtype();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 matchtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcCancelReadyAsk* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcCancelReadyReply : public ::google::protobuf::Message {
 public:
  MatchRpcCancelReadyReply();
  virtual ~MatchRpcCancelReadyReply();

  MatchRpcCancelReadyReply(const MatchRpcCancelReadyReply& from);

  inline MatchRpcCancelReadyReply& operator=(const MatchRpcCancelReadyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcCancelReadyReply& default_instance();

  void Swap(MatchRpcCancelReadyReply* other);

  // implements Message ----------------------------------------------

  MatchRpcCancelReadyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcCancelReadyReply& from);
  void MergeFrom(const MatchRpcCancelReadyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MatchRpcCancelReadyReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcCancelReadyReply* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcRoomCancelNotify : public ::google::protobuf::Message {
 public:
  MatchRpcRoomCancelNotify();
  virtual ~MatchRpcRoomCancelNotify();

  MatchRpcRoomCancelNotify(const MatchRpcRoomCancelNotify& from);

  inline MatchRpcRoomCancelNotify& operator=(const MatchRpcRoomCancelNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcRoomCancelNotify& default_instance();

  void Swap(MatchRpcRoomCancelNotify* other);

  // implements Message ----------------------------------------------

  MatchRpcRoomCancelNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcRoomCancelNotify& from);
  void MergeFrom(const MatchRpcRoomCancelNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchRpcRoomCancelNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcRoomCancelNotify* default_instance_;
};
// -------------------------------------------------------------------

class MatchRpcMemberReadyNotify : public ::google::protobuf::Message {
 public:
  MatchRpcMemberReadyNotify();
  virtual ~MatchRpcMemberReadyNotify();

  MatchRpcMemberReadyNotify(const MatchRpcMemberReadyNotify& from);

  inline MatchRpcMemberReadyNotify& operator=(const MatchRpcMemberReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRpcMemberReadyNotify& default_instance();

  void Swap(MatchRpcMemberReadyNotify* other);

  // implements Message ----------------------------------------------

  MatchRpcMemberReadyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRpcMemberReadyNotify& from);
  void MergeFrom(const MatchRpcMemberReadyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MatchRpcMemberReadyNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MatchRpc_2eproto();
  friend void protobuf_AssignDesc_MatchRpc_2eproto();
  friend void protobuf_ShutdownFile_MatchRpc_2eproto();

  void InitAsDefaultInstance();
  static MatchRpcMemberReadyNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// MatchRpcAutoMatchAsk

// optional .PlayerMatchData MatchInfo = 1;
inline bool MatchRpcAutoMatchAsk::has_matchinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcAutoMatchAsk::set_has_matchinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcAutoMatchAsk::clear_has_matchinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcAutoMatchAsk::clear_matchinfo() {
  if (matchinfo_ != NULL) matchinfo_->::PlayerMatchData::Clear();
  clear_has_matchinfo();
}
inline const ::PlayerMatchData& MatchRpcAutoMatchAsk::matchinfo() const {
  return matchinfo_ != NULL ? *matchinfo_ : *default_instance_->matchinfo_;
}
inline ::PlayerMatchData* MatchRpcAutoMatchAsk::mutable_matchinfo() {
  set_has_matchinfo();
  if (matchinfo_ == NULL) matchinfo_ = new ::PlayerMatchData;
  return matchinfo_;
}
inline ::PlayerMatchData* MatchRpcAutoMatchAsk::release_matchinfo() {
  clear_has_matchinfo();
  ::PlayerMatchData* temp = matchinfo_;
  matchinfo_ = NULL;
  return temp;
}
inline void MatchRpcAutoMatchAsk::set_allocated_matchinfo(::PlayerMatchData* matchinfo) {
  delete matchinfo_;
  matchinfo_ = matchinfo;
  if (matchinfo) {
    set_has_matchinfo();
  } else {
    clear_has_matchinfo();
  }
}

// -------------------------------------------------------------------

// MatchRpcAutoMatchReply

// optional int32 Result = 1 [default = -1];
inline bool MatchRpcAutoMatchReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcAutoMatchReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcAutoMatchReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcAutoMatchReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MatchRpcAutoMatchReply::result() const {
  return result_;
}
inline void MatchRpcAutoMatchReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .PlayerMatchData MatchInfo = 2;
inline bool MatchRpcAutoMatchReply::has_matchinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRpcAutoMatchReply::set_has_matchinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRpcAutoMatchReply::clear_has_matchinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRpcAutoMatchReply::clear_matchinfo() {
  if (matchinfo_ != NULL) matchinfo_->::PlayerMatchData::Clear();
  clear_has_matchinfo();
}
inline const ::PlayerMatchData& MatchRpcAutoMatchReply::matchinfo() const {
  return matchinfo_ != NULL ? *matchinfo_ : *default_instance_->matchinfo_;
}
inline ::PlayerMatchData* MatchRpcAutoMatchReply::mutable_matchinfo() {
  set_has_matchinfo();
  if (matchinfo_ == NULL) matchinfo_ = new ::PlayerMatchData;
  return matchinfo_;
}
inline ::PlayerMatchData* MatchRpcAutoMatchReply::release_matchinfo() {
  clear_has_matchinfo();
  ::PlayerMatchData* temp = matchinfo_;
  matchinfo_ = NULL;
  return temp;
}
inline void MatchRpcAutoMatchReply::set_allocated_matchinfo(::PlayerMatchData* matchinfo) {
  delete matchinfo_;
  matchinfo_ = matchinfo;
  if (matchinfo) {
    set_has_matchinfo();
  } else {
    clear_has_matchinfo();
  }
}

// -------------------------------------------------------------------

// MatchRpcCancelMatchAsk

// -------------------------------------------------------------------

// MatchRpcCancelMatchReply

// optional int32 Result = 1 [default = -1];
inline bool MatchRpcCancelMatchReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcCancelMatchReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcCancelMatchReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcCancelMatchReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MatchRpcCancelMatchReply::result() const {
  return result_;
}
inline void MatchRpcCancelMatchReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MatchRpcCancelMatchNotifyNotify

// -------------------------------------------------------------------

// MatchRpcPrepareRoomNotify

// optional .PBMatchRoom ReadyRoom = 1;
inline bool MatchRpcPrepareRoomNotify::has_readyroom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcPrepareRoomNotify::set_has_readyroom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcPrepareRoomNotify::clear_has_readyroom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcPrepareRoomNotify::clear_readyroom() {
  if (readyroom_ != NULL) readyroom_->::PBMatchRoom::Clear();
  clear_has_readyroom();
}
inline const ::PBMatchRoom& MatchRpcPrepareRoomNotify::readyroom() const {
  return readyroom_ != NULL ? *readyroom_ : *default_instance_->readyroom_;
}
inline ::PBMatchRoom* MatchRpcPrepareRoomNotify::mutable_readyroom() {
  set_has_readyroom();
  if (readyroom_ == NULL) readyroom_ = new ::PBMatchRoom;
  return readyroom_;
}
inline ::PBMatchRoom* MatchRpcPrepareRoomNotify::release_readyroom() {
  clear_has_readyroom();
  ::PBMatchRoom* temp = readyroom_;
  readyroom_ = NULL;
  return temp;
}
inline void MatchRpcPrepareRoomNotify::set_allocated_readyroom(::PBMatchRoom* readyroom) {
  delete readyroom_;
  readyroom_ = readyroom;
  if (readyroom) {
    set_has_readyroom();
  } else {
    clear_has_readyroom();
  }
}

// -------------------------------------------------------------------

// MatchRpcReadyAsk

// optional int32 MatchType = 1 [default = -1];
inline bool MatchRpcReadyAsk::has_matchtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcReadyAsk::set_has_matchtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcReadyAsk::clear_has_matchtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcReadyAsk::clear_matchtype() {
  matchtype_ = -1;
  clear_has_matchtype();
}
inline ::google::protobuf::int32 MatchRpcReadyAsk::matchtype() const {
  return matchtype_;
}
inline void MatchRpcReadyAsk::set_matchtype(::google::protobuf::int32 value) {
  set_has_matchtype();
  matchtype_ = value;
}

// optional uint64 RoomId = 2 [default = 0];
inline bool MatchRpcReadyAsk::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRpcReadyAsk::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRpcReadyAsk::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRpcReadyAsk::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 MatchRpcReadyAsk::roomid() const {
  return roomid_;
}
inline void MatchRpcReadyAsk::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// MatchRpcReadyReply

// optional int32 Result = 1 [default = -1];
inline bool MatchRpcReadyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcReadyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcReadyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcReadyReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MatchRpcReadyReply::result() const {
  return result_;
}
inline void MatchRpcReadyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool MatchRpcReadyReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRpcReadyReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRpcReadyReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRpcReadyReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MatchRpcReadyReply::roleid() const {
  return roleid_;
}
inline void MatchRpcReadyReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// MatchRpcCancelReadyAsk

// optional int32 MatchType = 1 [default = -1];
inline bool MatchRpcCancelReadyAsk::has_matchtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcCancelReadyAsk::set_has_matchtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcCancelReadyAsk::clear_has_matchtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcCancelReadyAsk::clear_matchtype() {
  matchtype_ = -1;
  clear_has_matchtype();
}
inline ::google::protobuf::int32 MatchRpcCancelReadyAsk::matchtype() const {
  return matchtype_;
}
inline void MatchRpcCancelReadyAsk::set_matchtype(::google::protobuf::int32 value) {
  set_has_matchtype();
  matchtype_ = value;
}

// optional uint64 RoomId = 2 [default = 0];
inline bool MatchRpcCancelReadyAsk::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRpcCancelReadyAsk::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRpcCancelReadyAsk::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRpcCancelReadyAsk::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 MatchRpcCancelReadyAsk::roomid() const {
  return roomid_;
}
inline void MatchRpcCancelReadyAsk::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// MatchRpcCancelReadyReply

// optional int32 Result = 1 [default = -1];
inline bool MatchRpcCancelReadyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcCancelReadyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcCancelReadyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcCancelReadyReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MatchRpcCancelReadyReply::result() const {
  return result_;
}
inline void MatchRpcCancelReadyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool MatchRpcCancelReadyReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRpcCancelReadyReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRpcCancelReadyReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRpcCancelReadyReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MatchRpcCancelReadyReply::roleid() const {
  return roleid_;
}
inline void MatchRpcCancelReadyReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// MatchRpcRoomCancelNotify

// -------------------------------------------------------------------

// MatchRpcMemberReadyNotify

// optional uint64 RoleId = 1 [default = 0];
inline bool MatchRpcMemberReadyNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRpcMemberReadyNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRpcMemberReadyNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRpcMemberReadyNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MatchRpcMemberReadyNotify::roleid() const {
  return roleid_;
}
inline void MatchRpcMemberReadyNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MatchRpc_2eproto__INCLUDED
