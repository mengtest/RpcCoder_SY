// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FunctionTutorialRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FunctionTutorialRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* FunctionTutorialRpcSyncFunctionStepAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcSyncFunctionStepAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionTutorialRpcSyncFunctionStepReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcSyncFunctionStepReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionTutorialRpcFinishStepAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcFinishStepAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionTutorialRpcFinishStepReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcFinishStepReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionTutorialRpcActiveStepAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcActiveStepAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionTutorialRpcActiveStepReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionTutorialRpcActiveStepReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_FunctionTutorialRpc_2eproto() {
  protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "FunctionTutorialRpc.proto");
  GOOGLE_CHECK(file != NULL);
  FunctionTutorialRpcSyncFunctionStepAsk_descriptor_ = file->message_type(0);
  static const int FunctionTutorialRpcSyncFunctionStepAsk_offsets_[1] = {
  };
  FunctionTutorialRpcSyncFunctionStepAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcSyncFunctionStepAsk_descriptor_,
      FunctionTutorialRpcSyncFunctionStepAsk::default_instance_,
      FunctionTutorialRpcSyncFunctionStepAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcSyncFunctionStepAsk));
  FunctionTutorialRpcSyncFunctionStepReply_descriptor_ = file->message_type(1);
  static const int FunctionTutorialRpcSyncFunctionStepReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepReply, functionlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepReply, activefunctionlist_),
  };
  FunctionTutorialRpcSyncFunctionStepReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcSyncFunctionStepReply_descriptor_,
      FunctionTutorialRpcSyncFunctionStepReply::default_instance_,
      FunctionTutorialRpcSyncFunctionStepReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcSyncFunctionStepReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcSyncFunctionStepReply));
  FunctionTutorialRpcFinishStepAsk_descriptor_ = file->message_type(2);
  static const int FunctionTutorialRpcFinishStepAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepAsk, functionid_),
  };
  FunctionTutorialRpcFinishStepAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcFinishStepAsk_descriptor_,
      FunctionTutorialRpcFinishStepAsk::default_instance_,
      FunctionTutorialRpcFinishStepAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcFinishStepAsk));
  FunctionTutorialRpcFinishStepReply_descriptor_ = file->message_type(3);
  static const int FunctionTutorialRpcFinishStepReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepReply, functionid_),
  };
  FunctionTutorialRpcFinishStepReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcFinishStepReply_descriptor_,
      FunctionTutorialRpcFinishStepReply::default_instance_,
      FunctionTutorialRpcFinishStepReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcFinishStepReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcFinishStepReply));
  FunctionTutorialRpcActiveStepAsk_descriptor_ = file->message_type(4);
  static const int FunctionTutorialRpcActiveStepAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepAsk, functionid_),
  };
  FunctionTutorialRpcActiveStepAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcActiveStepAsk_descriptor_,
      FunctionTutorialRpcActiveStepAsk::default_instance_,
      FunctionTutorialRpcActiveStepAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcActiveStepAsk));
  FunctionTutorialRpcActiveStepReply_descriptor_ = file->message_type(5);
  static const int FunctionTutorialRpcActiveStepReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepReply, functionid_),
  };
  FunctionTutorialRpcActiveStepReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FunctionTutorialRpcActiveStepReply_descriptor_,
      FunctionTutorialRpcActiveStepReply::default_instance_,
      FunctionTutorialRpcActiveStepReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionTutorialRpcActiveStepReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FunctionTutorialRpcActiveStepReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_FunctionTutorialRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcSyncFunctionStepAsk_descriptor_, &FunctionTutorialRpcSyncFunctionStepAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcSyncFunctionStepReply_descriptor_, &FunctionTutorialRpcSyncFunctionStepReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcFinishStepAsk_descriptor_, &FunctionTutorialRpcFinishStepAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcFinishStepReply_descriptor_, &FunctionTutorialRpcFinishStepReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcActiveStepAsk_descriptor_, &FunctionTutorialRpcActiveStepAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FunctionTutorialRpcActiveStepReply_descriptor_, &FunctionTutorialRpcActiveStepReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_FunctionTutorialRpc_2eproto() {
  delete FunctionTutorialRpcSyncFunctionStepAsk::default_instance_;
  delete FunctionTutorialRpcSyncFunctionStepAsk_reflection_;
  delete FunctionTutorialRpcSyncFunctionStepReply::default_instance_;
  delete FunctionTutorialRpcSyncFunctionStepReply_reflection_;
  delete FunctionTutorialRpcFinishStepAsk::default_instance_;
  delete FunctionTutorialRpcFinishStepAsk_reflection_;
  delete FunctionTutorialRpcFinishStepReply::default_instance_;
  delete FunctionTutorialRpcFinishStepReply_reflection_;
  delete FunctionTutorialRpcActiveStepAsk::default_instance_;
  delete FunctionTutorialRpcActiveStepAsk_reflection_;
  delete FunctionTutorialRpcActiveStepReply::default_instance_;
  delete FunctionTutorialRpcActiveStepReply_reflection_;
}

void protobuf_AddDesc_FunctionTutorialRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031FunctionTutorialRpc.proto\032\022PublicStruc"
    "t.proto\"(\n&FunctionTutorialRpcSyncFuncti"
    "onStepAsk\"p\n(FunctionTutorialRpcSyncFunc"
    "tionStepReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\024\n\014Fun"
    "ctionList\030\002 \003(\005\022\032\n\022ActiveFunctionList\030\003 "
    "\003(\005\":\n FunctionTutorialRpcFinishStepAsk\022"
    "\026\n\nFunctionID\030\001 \001(\005:\002-1\"P\n\"FunctionTutor"
    "ialRpcFinishStepReply\022\022\n\006Result\030\001 \001(\005:\002-"
    "1\022\026\n\nFunctionID\030\003 \001(\005:\002-1\":\n FunctionTut"
    "orialRpcActiveStepAsk\022\026\n\nFunctionID\030\001 \001("
    "\005:\002-1\"P\n\"FunctionTutorialRpcActiveStepRe"
    "ply\022\022\n\006Result\030\001 \001(\005:\002-1\022\026\n\nFunctionID\030\002 "
    "\001(\005:\002-1", 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FunctionTutorialRpc.proto", &protobuf_RegisterTypes);
  FunctionTutorialRpcSyncFunctionStepAsk::default_instance_ = new FunctionTutorialRpcSyncFunctionStepAsk();
  FunctionTutorialRpcSyncFunctionStepReply::default_instance_ = new FunctionTutorialRpcSyncFunctionStepReply();
  FunctionTutorialRpcFinishStepAsk::default_instance_ = new FunctionTutorialRpcFinishStepAsk();
  FunctionTutorialRpcFinishStepReply::default_instance_ = new FunctionTutorialRpcFinishStepReply();
  FunctionTutorialRpcActiveStepAsk::default_instance_ = new FunctionTutorialRpcActiveStepAsk();
  FunctionTutorialRpcActiveStepReply::default_instance_ = new FunctionTutorialRpcActiveStepReply();
  FunctionTutorialRpcSyncFunctionStepAsk::default_instance_->InitAsDefaultInstance();
  FunctionTutorialRpcSyncFunctionStepReply::default_instance_->InitAsDefaultInstance();
  FunctionTutorialRpcFinishStepAsk::default_instance_->InitAsDefaultInstance();
  FunctionTutorialRpcFinishStepReply::default_instance_->InitAsDefaultInstance();
  FunctionTutorialRpcActiveStepAsk::default_instance_->InitAsDefaultInstance();
  FunctionTutorialRpcActiveStepReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_FunctionTutorialRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_FunctionTutorialRpc_2eproto {
  StaticDescriptorInitializer_FunctionTutorialRpc_2eproto() {
    protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  }
} static_descriptor_initializer_FunctionTutorialRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FunctionTutorialRpcSyncFunctionStepAsk::FunctionTutorialRpcSyncFunctionStepAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcSyncFunctionStepAsk::InitAsDefaultInstance() {
}

FunctionTutorialRpcSyncFunctionStepAsk::FunctionTutorialRpcSyncFunctionStepAsk(const FunctionTutorialRpcSyncFunctionStepAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcSyncFunctionStepAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcSyncFunctionStepAsk::~FunctionTutorialRpcSyncFunctionStepAsk() {
  SharedDtor();
}

void FunctionTutorialRpcSyncFunctionStepAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcSyncFunctionStepAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcSyncFunctionStepAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcSyncFunctionStepAsk_descriptor_;
}

const FunctionTutorialRpcSyncFunctionStepAsk& FunctionTutorialRpcSyncFunctionStepAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcSyncFunctionStepAsk* FunctionTutorialRpcSyncFunctionStepAsk::default_instance_ = NULL;

FunctionTutorialRpcSyncFunctionStepAsk* FunctionTutorialRpcSyncFunctionStepAsk::New() const {
  return new FunctionTutorialRpcSyncFunctionStepAsk;
}

void FunctionTutorialRpcSyncFunctionStepAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcSyncFunctionStepAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcSyncFunctionStepAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcSyncFunctionStepAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcSyncFunctionStepAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcSyncFunctionStepAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcSyncFunctionStepAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcSyncFunctionStepAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcSyncFunctionStepAsk::MergeFrom(const FunctionTutorialRpcSyncFunctionStepAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcSyncFunctionStepAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcSyncFunctionStepAsk::CopyFrom(const FunctionTutorialRpcSyncFunctionStepAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcSyncFunctionStepAsk::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcSyncFunctionStepAsk::Swap(FunctionTutorialRpcSyncFunctionStepAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcSyncFunctionStepAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcSyncFunctionStepAsk_descriptor_;
  metadata.reflection = FunctionTutorialRpcSyncFunctionStepAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FunctionTutorialRpcSyncFunctionStepReply::kResultFieldNumber;
const int FunctionTutorialRpcSyncFunctionStepReply::kFunctionListFieldNumber;
const int FunctionTutorialRpcSyncFunctionStepReply::kActiveFunctionListFieldNumber;
#endif  // !_MSC_VER

FunctionTutorialRpcSyncFunctionStepReply::FunctionTutorialRpcSyncFunctionStepReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcSyncFunctionStepReply::InitAsDefaultInstance() {
}

FunctionTutorialRpcSyncFunctionStepReply::FunctionTutorialRpcSyncFunctionStepReply(const FunctionTutorialRpcSyncFunctionStepReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcSyncFunctionStepReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcSyncFunctionStepReply::~FunctionTutorialRpcSyncFunctionStepReply() {
  SharedDtor();
}

void FunctionTutorialRpcSyncFunctionStepReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcSyncFunctionStepReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcSyncFunctionStepReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcSyncFunctionStepReply_descriptor_;
}

const FunctionTutorialRpcSyncFunctionStepReply& FunctionTutorialRpcSyncFunctionStepReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcSyncFunctionStepReply* FunctionTutorialRpcSyncFunctionStepReply::default_instance_ = NULL;

FunctionTutorialRpcSyncFunctionStepReply* FunctionTutorialRpcSyncFunctionStepReply::New() const {
  return new FunctionTutorialRpcSyncFunctionStepReply;
}

void FunctionTutorialRpcSyncFunctionStepReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  functionlist_.Clear();
  activefunctionlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcSyncFunctionStepReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_FunctionList;
        break;
      }

      // repeated int32 FunctionList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FunctionList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_functionlist())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_functionlist())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_FunctionList;
        if (input->ExpectTag(24)) goto parse_ActiveFunctionList;
        break;
      }

      // repeated int32 ActiveFunctionList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ActiveFunctionList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_activefunctionlist())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_activefunctionlist())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ActiveFunctionList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcSyncFunctionStepReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int32 FunctionList = 2;
  for (int i = 0; i < this->functionlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->functionlist(i), output);
  }

  // repeated int32 ActiveFunctionList = 3;
  for (int i = 0; i < this->activefunctionlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->activefunctionlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcSyncFunctionStepReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int32 FunctionList = 2;
  for (int i = 0; i < this->functionlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->functionlist(i), target);
  }

  // repeated int32 ActiveFunctionList = 3;
  for (int i = 0; i < this->activefunctionlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->activefunctionlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcSyncFunctionStepReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated int32 FunctionList = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->functionlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->functionlist(i));
    }
    total_size += 1 * this->functionlist_size() + data_size;
  }

  // repeated int32 ActiveFunctionList = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->activefunctionlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->activefunctionlist(i));
    }
    total_size += 1 * this->activefunctionlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcSyncFunctionStepReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcSyncFunctionStepReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcSyncFunctionStepReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcSyncFunctionStepReply::MergeFrom(const FunctionTutorialRpcSyncFunctionStepReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  functionlist_.MergeFrom(from.functionlist_);
  activefunctionlist_.MergeFrom(from.activefunctionlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcSyncFunctionStepReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcSyncFunctionStepReply::CopyFrom(const FunctionTutorialRpcSyncFunctionStepReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcSyncFunctionStepReply::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcSyncFunctionStepReply::Swap(FunctionTutorialRpcSyncFunctionStepReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    functionlist_.Swap(&other->functionlist_);
    activefunctionlist_.Swap(&other->activefunctionlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcSyncFunctionStepReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcSyncFunctionStepReply_descriptor_;
  metadata.reflection = FunctionTutorialRpcSyncFunctionStepReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FunctionTutorialRpcFinishStepAsk::kFunctionIDFieldNumber;
#endif  // !_MSC_VER

FunctionTutorialRpcFinishStepAsk::FunctionTutorialRpcFinishStepAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcFinishStepAsk::InitAsDefaultInstance() {
}

FunctionTutorialRpcFinishStepAsk::FunctionTutorialRpcFinishStepAsk(const FunctionTutorialRpcFinishStepAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcFinishStepAsk::SharedCtor() {
  _cached_size_ = 0;
  functionid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcFinishStepAsk::~FunctionTutorialRpcFinishStepAsk() {
  SharedDtor();
}

void FunctionTutorialRpcFinishStepAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcFinishStepAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcFinishStepAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcFinishStepAsk_descriptor_;
}

const FunctionTutorialRpcFinishStepAsk& FunctionTutorialRpcFinishStepAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcFinishStepAsk* FunctionTutorialRpcFinishStepAsk::default_instance_ = NULL;

FunctionTutorialRpcFinishStepAsk* FunctionTutorialRpcFinishStepAsk::New() const {
  return new FunctionTutorialRpcFinishStepAsk;
}

void FunctionTutorialRpcFinishStepAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    functionid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcFinishStepAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 FunctionID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &functionid_)));
          set_has_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcFinishStepAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 FunctionID = 1 [default = -1];
  if (has_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcFinishStepAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 FunctionID = 1 [default = -1];
  if (has_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcFinishStepAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 FunctionID = 1 [default = -1];
    if (has_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcFinishStepAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcFinishStepAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcFinishStepAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcFinishStepAsk::MergeFrom(const FunctionTutorialRpcFinishStepAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_functionid()) {
      set_functionid(from.functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcFinishStepAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcFinishStepAsk::CopyFrom(const FunctionTutorialRpcFinishStepAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcFinishStepAsk::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcFinishStepAsk::Swap(FunctionTutorialRpcFinishStepAsk* other) {
  if (other != this) {
    std::swap(functionid_, other->functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcFinishStepAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcFinishStepAsk_descriptor_;
  metadata.reflection = FunctionTutorialRpcFinishStepAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FunctionTutorialRpcFinishStepReply::kResultFieldNumber;
const int FunctionTutorialRpcFinishStepReply::kFunctionIDFieldNumber;
#endif  // !_MSC_VER

FunctionTutorialRpcFinishStepReply::FunctionTutorialRpcFinishStepReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcFinishStepReply::InitAsDefaultInstance() {
}

FunctionTutorialRpcFinishStepReply::FunctionTutorialRpcFinishStepReply(const FunctionTutorialRpcFinishStepReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcFinishStepReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  functionid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcFinishStepReply::~FunctionTutorialRpcFinishStepReply() {
  SharedDtor();
}

void FunctionTutorialRpcFinishStepReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcFinishStepReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcFinishStepReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcFinishStepReply_descriptor_;
}

const FunctionTutorialRpcFinishStepReply& FunctionTutorialRpcFinishStepReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcFinishStepReply* FunctionTutorialRpcFinishStepReply::default_instance_ = NULL;

FunctionTutorialRpcFinishStepReply* FunctionTutorialRpcFinishStepReply::New() const {
  return new FunctionTutorialRpcFinishStepReply;
}

void FunctionTutorialRpcFinishStepReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    functionid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcFinishStepReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_FunctionID;
        break;
      }

      // optional int32 FunctionID = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FunctionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &functionid_)));
          set_has_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcFinishStepReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 FunctionID = 3 [default = -1];
  if (has_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcFinishStepReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 FunctionID = 3 [default = -1];
  if (has_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcFinishStepReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 FunctionID = 3 [default = -1];
    if (has_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcFinishStepReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcFinishStepReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcFinishStepReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcFinishStepReply::MergeFrom(const FunctionTutorialRpcFinishStepReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_functionid()) {
      set_functionid(from.functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcFinishStepReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcFinishStepReply::CopyFrom(const FunctionTutorialRpcFinishStepReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcFinishStepReply::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcFinishStepReply::Swap(FunctionTutorialRpcFinishStepReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(functionid_, other->functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcFinishStepReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcFinishStepReply_descriptor_;
  metadata.reflection = FunctionTutorialRpcFinishStepReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FunctionTutorialRpcActiveStepAsk::kFunctionIDFieldNumber;
#endif  // !_MSC_VER

FunctionTutorialRpcActiveStepAsk::FunctionTutorialRpcActiveStepAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcActiveStepAsk::InitAsDefaultInstance() {
}

FunctionTutorialRpcActiveStepAsk::FunctionTutorialRpcActiveStepAsk(const FunctionTutorialRpcActiveStepAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcActiveStepAsk::SharedCtor() {
  _cached_size_ = 0;
  functionid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcActiveStepAsk::~FunctionTutorialRpcActiveStepAsk() {
  SharedDtor();
}

void FunctionTutorialRpcActiveStepAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcActiveStepAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcActiveStepAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcActiveStepAsk_descriptor_;
}

const FunctionTutorialRpcActiveStepAsk& FunctionTutorialRpcActiveStepAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcActiveStepAsk* FunctionTutorialRpcActiveStepAsk::default_instance_ = NULL;

FunctionTutorialRpcActiveStepAsk* FunctionTutorialRpcActiveStepAsk::New() const {
  return new FunctionTutorialRpcActiveStepAsk;
}

void FunctionTutorialRpcActiveStepAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    functionid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcActiveStepAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 FunctionID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &functionid_)));
          set_has_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcActiveStepAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 FunctionID = 1 [default = -1];
  if (has_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcActiveStepAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 FunctionID = 1 [default = -1];
  if (has_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcActiveStepAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 FunctionID = 1 [default = -1];
    if (has_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcActiveStepAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcActiveStepAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcActiveStepAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcActiveStepAsk::MergeFrom(const FunctionTutorialRpcActiveStepAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_functionid()) {
      set_functionid(from.functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcActiveStepAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcActiveStepAsk::CopyFrom(const FunctionTutorialRpcActiveStepAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcActiveStepAsk::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcActiveStepAsk::Swap(FunctionTutorialRpcActiveStepAsk* other) {
  if (other != this) {
    std::swap(functionid_, other->functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcActiveStepAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcActiveStepAsk_descriptor_;
  metadata.reflection = FunctionTutorialRpcActiveStepAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FunctionTutorialRpcActiveStepReply::kResultFieldNumber;
const int FunctionTutorialRpcActiveStepReply::kFunctionIDFieldNumber;
#endif  // !_MSC_VER

FunctionTutorialRpcActiveStepReply::FunctionTutorialRpcActiveStepReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FunctionTutorialRpcActiveStepReply::InitAsDefaultInstance() {
}

FunctionTutorialRpcActiveStepReply::FunctionTutorialRpcActiveStepReply(const FunctionTutorialRpcActiveStepReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FunctionTutorialRpcActiveStepReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  functionid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FunctionTutorialRpcActiveStepReply::~FunctionTutorialRpcActiveStepReply() {
  SharedDtor();
}

void FunctionTutorialRpcActiveStepReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FunctionTutorialRpcActiveStepReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionTutorialRpcActiveStepReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionTutorialRpcActiveStepReply_descriptor_;
}

const FunctionTutorialRpcActiveStepReply& FunctionTutorialRpcActiveStepReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FunctionTutorialRpc_2eproto();
  return *default_instance_;
}

FunctionTutorialRpcActiveStepReply* FunctionTutorialRpcActiveStepReply::default_instance_ = NULL;

FunctionTutorialRpcActiveStepReply* FunctionTutorialRpcActiveStepReply::New() const {
  return new FunctionTutorialRpcActiveStepReply;
}

void FunctionTutorialRpcActiveStepReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    functionid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FunctionTutorialRpcActiveStepReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_FunctionID;
        break;
      }

      // optional int32 FunctionID = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FunctionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &functionid_)));
          set_has_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FunctionTutorialRpcActiveStepReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 FunctionID = 2 [default = -1];
  if (has_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FunctionTutorialRpcActiveStepReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 FunctionID = 2 [default = -1];
  if (has_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FunctionTutorialRpcActiveStepReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 FunctionID = 2 [default = -1];
    if (has_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionTutorialRpcActiveStepReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FunctionTutorialRpcActiveStepReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FunctionTutorialRpcActiveStepReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FunctionTutorialRpcActiveStepReply::MergeFrom(const FunctionTutorialRpcActiveStepReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_functionid()) {
      set_functionid(from.functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FunctionTutorialRpcActiveStepReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTutorialRpcActiveStepReply::CopyFrom(const FunctionTutorialRpcActiveStepReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTutorialRpcActiveStepReply::IsInitialized() const {

  return true;
}

void FunctionTutorialRpcActiveStepReply::Swap(FunctionTutorialRpcActiveStepReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(functionid_, other->functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FunctionTutorialRpcActiveStepReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionTutorialRpcActiveStepReply_descriptor_;
  metadata.reflection = FunctionTutorialRpcActiveStepReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
