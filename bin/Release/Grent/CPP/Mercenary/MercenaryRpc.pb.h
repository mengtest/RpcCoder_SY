// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MercenaryRpc.proto

#ifndef PROTOBUF_MercenaryRpc_2eproto__INCLUDED
#define PROTOBUF_MercenaryRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MercenaryRpc_2eproto();
void protobuf_AssignDesc_MercenaryRpc_2eproto();
void protobuf_ShutdownFile_MercenaryRpc_2eproto();

class MercenaryRpcInQueueAsk;
class MercenaryRpcInQueueReply;
class MercenaryRpcOutQueueAsk;
class MercenaryRpcOutQueueReply;
class MercenaryRpcAutoSetAsk;
class MercenaryRpcAutoSetReply;
class MercenaryRpcInfoAsk;
class MercenaryRpcInfoReply;

// ===================================================================

class MercenaryRpcInQueueAsk : public ::google::protobuf::Message {
 public:
  MercenaryRpcInQueueAsk();
  virtual ~MercenaryRpcInQueueAsk();

  MercenaryRpcInQueueAsk(const MercenaryRpcInQueueAsk& from);

  inline MercenaryRpcInQueueAsk& operator=(const MercenaryRpcInQueueAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcInQueueAsk& default_instance();

  void Swap(MercenaryRpcInQueueAsk* other);

  // implements Message ----------------------------------------------

  MercenaryRpcInQueueAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcInQueueAsk& from);
  void MergeFrom(const MercenaryRpcInQueueAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MercenaryRpcInQueueAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcInQueueAsk* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcInQueueReply : public ::google::protobuf::Message {
 public:
  MercenaryRpcInQueueReply();
  virtual ~MercenaryRpcInQueueReply();

  MercenaryRpcInQueueReply(const MercenaryRpcInQueueReply& from);

  inline MercenaryRpcInQueueReply& operator=(const MercenaryRpcInQueueReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcInQueueReply& default_instance();

  void Swap(MercenaryRpcInQueueReply* other);

  // implements Message ----------------------------------------------

  MercenaryRpcInQueueReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcInQueueReply& from);
  void MergeFrom(const MercenaryRpcInQueueReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MercenaryRpcInQueueReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcInQueueReply* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcOutQueueAsk : public ::google::protobuf::Message {
 public:
  MercenaryRpcOutQueueAsk();
  virtual ~MercenaryRpcOutQueueAsk();

  MercenaryRpcOutQueueAsk(const MercenaryRpcOutQueueAsk& from);

  inline MercenaryRpcOutQueueAsk& operator=(const MercenaryRpcOutQueueAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcOutQueueAsk& default_instance();

  void Swap(MercenaryRpcOutQueueAsk* other);

  // implements Message ----------------------------------------------

  MercenaryRpcOutQueueAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcOutQueueAsk& from);
  void MergeFrom(const MercenaryRpcOutQueueAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MercenaryRpcOutQueueAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcOutQueueAsk* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcOutQueueReply : public ::google::protobuf::Message {
 public:
  MercenaryRpcOutQueueReply();
  virtual ~MercenaryRpcOutQueueReply();

  MercenaryRpcOutQueueReply(const MercenaryRpcOutQueueReply& from);

  inline MercenaryRpcOutQueueReply& operator=(const MercenaryRpcOutQueueReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcOutQueueReply& default_instance();

  void Swap(MercenaryRpcOutQueueReply* other);

  // implements Message ----------------------------------------------

  MercenaryRpcOutQueueReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcOutQueueReply& from);
  void MergeFrom(const MercenaryRpcOutQueueReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MercenaryRpcOutQueueReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcOutQueueReply* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcAutoSetAsk : public ::google::protobuf::Message {
 public:
  MercenaryRpcAutoSetAsk();
  virtual ~MercenaryRpcAutoSetAsk();

  MercenaryRpcAutoSetAsk(const MercenaryRpcAutoSetAsk& from);

  inline MercenaryRpcAutoSetAsk& operator=(const MercenaryRpcAutoSetAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcAutoSetAsk& default_instance();

  void Swap(MercenaryRpcAutoSetAsk* other);

  // implements Message ----------------------------------------------

  MercenaryRpcAutoSetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcAutoSetAsk& from);
  void MergeFrom(const MercenaryRpcAutoSetAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MercenaryRpcAutoSetAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcAutoSetAsk* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcAutoSetReply : public ::google::protobuf::Message {
 public:
  MercenaryRpcAutoSetReply();
  virtual ~MercenaryRpcAutoSetReply();

  MercenaryRpcAutoSetReply(const MercenaryRpcAutoSetReply& from);

  inline MercenaryRpcAutoSetReply& operator=(const MercenaryRpcAutoSetReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcAutoSetReply& default_instance();

  void Swap(MercenaryRpcAutoSetReply* other);

  // implements Message ----------------------------------------------

  MercenaryRpcAutoSetReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcAutoSetReply& from);
  void MergeFrom(const MercenaryRpcAutoSetReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MercenaryRpcAutoSetReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcAutoSetReply* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcInfoAsk : public ::google::protobuf::Message {
 public:
  MercenaryRpcInfoAsk();
  virtual ~MercenaryRpcInfoAsk();

  MercenaryRpcInfoAsk(const MercenaryRpcInfoAsk& from);

  inline MercenaryRpcInfoAsk& operator=(const MercenaryRpcInfoAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcInfoAsk& default_instance();

  void Swap(MercenaryRpcInfoAsk* other);

  // implements Message ----------------------------------------------

  MercenaryRpcInfoAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcInfoAsk& from);
  void MergeFrom(const MercenaryRpcInfoAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MercenaryRpcInfoAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcInfoAsk* default_instance_;
};
// -------------------------------------------------------------------

class MercenaryRpcInfoReply : public ::google::protobuf::Message {
 public:
  MercenaryRpcInfoReply();
  virtual ~MercenaryRpcInfoReply();

  MercenaryRpcInfoReply(const MercenaryRpcInfoReply& from);

  inline MercenaryRpcInfoReply& operator=(const MercenaryRpcInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MercenaryRpcInfoReply& default_instance();

  void Swap(MercenaryRpcInfoReply* other);

  // implements Message ----------------------------------------------

  MercenaryRpcInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MercenaryRpcInfoReply& from);
  void MergeFrom(const MercenaryRpcInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .MercenaryInfo Mercenary = 2;
  inline int mercenary_size() const;
  inline void clear_mercenary();
  static const int kMercenaryFieldNumber = 2;
  inline const ::MercenaryInfo& mercenary(int index) const;
  inline ::MercenaryInfo* mutable_mercenary(int index);
  inline ::MercenaryInfo* add_mercenary();
  inline const ::google::protobuf::RepeatedPtrField< ::MercenaryInfo >&
      mercenary() const;
  inline ::google::protobuf::RepeatedPtrField< ::MercenaryInfo >*
      mutable_mercenary();

  // @@protoc_insertion_point(class_scope:MercenaryRpcInfoReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MercenaryInfo > mercenary_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MercenaryRpc_2eproto();
  friend void protobuf_AssignDesc_MercenaryRpc_2eproto();
  friend void protobuf_ShutdownFile_MercenaryRpc_2eproto();

  void InitAsDefaultInstance();
  static MercenaryRpcInfoReply* default_instance_;
};
// ===================================================================


// ===================================================================

// MercenaryRpcInQueueAsk

// optional int32 Id = 1 [default = -1];
inline bool MercenaryRpcInQueueAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcInQueueAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcInQueueAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcInQueueAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 MercenaryRpcInQueueAsk::id() const {
  return id_;
}
inline void MercenaryRpcInQueueAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MercenaryRpcInQueueReply

// optional int32 Result = 1 [default = -1];
inline bool MercenaryRpcInQueueReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcInQueueReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcInQueueReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcInQueueReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MercenaryRpcInQueueReply::result() const {
  return result_;
}
inline void MercenaryRpcInQueueReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MercenaryRpcOutQueueAsk

// optional int32 Id = 1 [default = -1];
inline bool MercenaryRpcOutQueueAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcOutQueueAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcOutQueueAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcOutQueueAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 MercenaryRpcOutQueueAsk::id() const {
  return id_;
}
inline void MercenaryRpcOutQueueAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MercenaryRpcOutQueueReply

// optional int32 Result = 1 [default = -1];
inline bool MercenaryRpcOutQueueReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcOutQueueReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcOutQueueReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcOutQueueReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MercenaryRpcOutQueueReply::result() const {
  return result_;
}
inline void MercenaryRpcOutQueueReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MercenaryRpcAutoSetAsk

// -------------------------------------------------------------------

// MercenaryRpcAutoSetReply

// optional int32 Result = 1 [default = -1];
inline bool MercenaryRpcAutoSetReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcAutoSetReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcAutoSetReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcAutoSetReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MercenaryRpcAutoSetReply::result() const {
  return result_;
}
inline void MercenaryRpcAutoSetReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MercenaryRpcInfoAsk

// -------------------------------------------------------------------

// MercenaryRpcInfoReply

// optional int32 Result = 1 [default = -1];
inline bool MercenaryRpcInfoReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MercenaryRpcInfoReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MercenaryRpcInfoReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MercenaryRpcInfoReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 MercenaryRpcInfoReply::result() const {
  return result_;
}
inline void MercenaryRpcInfoReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .MercenaryInfo Mercenary = 2;
inline int MercenaryRpcInfoReply::mercenary_size() const {
  return mercenary_.size();
}
inline void MercenaryRpcInfoReply::clear_mercenary() {
  mercenary_.Clear();
}
inline const ::MercenaryInfo& MercenaryRpcInfoReply::mercenary(int index) const {
  return mercenary_.Get(index);
}
inline ::MercenaryInfo* MercenaryRpcInfoReply::mutable_mercenary(int index) {
  return mercenary_.Mutable(index);
}
inline ::MercenaryInfo* MercenaryRpcInfoReply::add_mercenary() {
  return mercenary_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MercenaryInfo >&
MercenaryRpcInfoReply::mercenary() const {
  return mercenary_;
}
inline ::google::protobuf::RepeatedPtrField< ::MercenaryInfo >*
MercenaryRpcInfoReply::mutable_mercenary() {
  return &mercenary_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MercenaryRpc_2eproto__INCLUDED
