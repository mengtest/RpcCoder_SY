// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RankRpc.proto

#ifndef PROTOBUF_RankRpc_2eproto__INCLUDED
#define PROTOBUF_RankRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RankRpc_2eproto();
void protobuf_AssignDesc_RankRpc_2eproto();
void protobuf_ShutdownFile_RankRpc_2eproto();

class RankRpcRankAsk;
class RankRpcRankReply;

// ===================================================================

class RankRpcRankAsk : public ::google::protobuf::Message {
 public:
  RankRpcRankAsk();
  virtual ~RankRpcRankAsk();

  RankRpcRankAsk(const RankRpcRankAsk& from);

  inline RankRpcRankAsk& operator=(const RankRpcRankAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRpcRankAsk& default_instance();

  void Swap(RankRpcRankAsk* other);

  // implements Message ----------------------------------------------

  RankRpcRankAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankRpcRankAsk& from);
  void MergeFrom(const RankRpcRankAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RankType = 1 [default = -1];
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ranktype() const;
  inline void set_ranktype(::google::protobuf::int32 value);

  // optional int32 RankSubType = 2 [default = -1];
  inline bool has_ranksubtype() const;
  inline void clear_ranksubtype();
  static const int kRankSubTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ranksubtype() const;
  inline void set_ranksubtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RankRpcRankAsk)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_ranksubtype();
  inline void clear_has_ranksubtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ranktype_;
  ::google::protobuf::int32 ranksubtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RankRpc_2eproto();
  friend void protobuf_AssignDesc_RankRpc_2eproto();
  friend void protobuf_ShutdownFile_RankRpc_2eproto();

  void InitAsDefaultInstance();
  static RankRpcRankAsk* default_instance_;
};
// -------------------------------------------------------------------

class RankRpcRankReply : public ::google::protobuf::Message {
 public:
  RankRpcRankReply();
  virtual ~RankRpcRankReply();

  RankRpcRankReply(const RankRpcRankReply& from);

  inline RankRpcRankReply& operator=(const RankRpcRankReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRpcRankReply& default_instance();

  void Swap(RankRpcRankReply* other);

  // implements Message ----------------------------------------------

  RankRpcRankReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankRpcRankReply& from);
  void MergeFrom(const RankRpcRankReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .RankInfo RankInfoList = 2;
  inline int rankinfolist_size() const;
  inline void clear_rankinfolist();
  static const int kRankInfoListFieldNumber = 2;
  inline const ::RankInfo& rankinfolist(int index) const;
  inline ::RankInfo* mutable_rankinfolist(int index);
  inline ::RankInfo* add_rankinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
      rankinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
      mutable_rankinfolist();

  // optional int32 RankIndex = 3 [default = -1];
  inline bool has_rankindex() const;
  inline void clear_rankindex();
  static const int kRankIndexFieldNumber = 3;
  inline ::google::protobuf::int32 rankindex() const;
  inline void set_rankindex(::google::protobuf::int32 value);

  // optional int64 MyValue = 4 [default = -1];
  inline bool has_myvalue() const;
  inline void clear_myvalue();
  static const int kMyValueFieldNumber = 4;
  inline ::google::protobuf::int64 myvalue() const;
  inline void set_myvalue(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RankRpcRankReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_rankindex();
  inline void clear_has_rankindex();
  inline void set_has_myvalue();
  inline void clear_has_myvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RankInfo > rankinfolist_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 rankindex_;
  ::google::protobuf::int64 myvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_RankRpc_2eproto();
  friend void protobuf_AssignDesc_RankRpc_2eproto();
  friend void protobuf_ShutdownFile_RankRpc_2eproto();

  void InitAsDefaultInstance();
  static RankRpcRankReply* default_instance_;
};
// ===================================================================


// ===================================================================

// RankRpcRankAsk

// optional int32 RankType = 1 [default = -1];
inline bool RankRpcRankAsk::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankRpcRankAsk::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankRpcRankAsk::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankRpcRankAsk::clear_ranktype() {
  ranktype_ = -1;
  clear_has_ranktype();
}
inline ::google::protobuf::int32 RankRpcRankAsk::ranktype() const {
  return ranktype_;
}
inline void RankRpcRankAsk::set_ranktype(::google::protobuf::int32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// optional int32 RankSubType = 2 [default = -1];
inline bool RankRpcRankAsk::has_ranksubtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankRpcRankAsk::set_has_ranksubtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankRpcRankAsk::clear_has_ranksubtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankRpcRankAsk::clear_ranksubtype() {
  ranksubtype_ = -1;
  clear_has_ranksubtype();
}
inline ::google::protobuf::int32 RankRpcRankAsk::ranksubtype() const {
  return ranksubtype_;
}
inline void RankRpcRankAsk::set_ranksubtype(::google::protobuf::int32 value) {
  set_has_ranksubtype();
  ranksubtype_ = value;
}

// -------------------------------------------------------------------

// RankRpcRankReply

// optional int32 Result = 1 [default = -1];
inline bool RankRpcRankReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankRpcRankReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankRpcRankReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankRpcRankReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 RankRpcRankReply::result() const {
  return result_;
}
inline void RankRpcRankReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .RankInfo RankInfoList = 2;
inline int RankRpcRankReply::rankinfolist_size() const {
  return rankinfolist_.size();
}
inline void RankRpcRankReply::clear_rankinfolist() {
  rankinfolist_.Clear();
}
inline const ::RankInfo& RankRpcRankReply::rankinfolist(int index) const {
  return rankinfolist_.Get(index);
}
inline ::RankInfo* RankRpcRankReply::mutable_rankinfolist(int index) {
  return rankinfolist_.Mutable(index);
}
inline ::RankInfo* RankRpcRankReply::add_rankinfolist() {
  return rankinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
RankRpcRankReply::rankinfolist() const {
  return rankinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
RankRpcRankReply::mutable_rankinfolist() {
  return &rankinfolist_;
}

// optional int32 RankIndex = 3 [default = -1];
inline bool RankRpcRankReply::has_rankindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankRpcRankReply::set_has_rankindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankRpcRankReply::clear_has_rankindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankRpcRankReply::clear_rankindex() {
  rankindex_ = -1;
  clear_has_rankindex();
}
inline ::google::protobuf::int32 RankRpcRankReply::rankindex() const {
  return rankindex_;
}
inline void RankRpcRankReply::set_rankindex(::google::protobuf::int32 value) {
  set_has_rankindex();
  rankindex_ = value;
}

// optional int64 MyValue = 4 [default = -1];
inline bool RankRpcRankReply::has_myvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankRpcRankReply::set_has_myvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankRpcRankReply::clear_has_myvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankRpcRankReply::clear_myvalue() {
  myvalue_ = GOOGLE_LONGLONG(-1);
  clear_has_myvalue();
}
inline ::google::protobuf::int64 RankRpcRankReply::myvalue() const {
  return myvalue_;
}
inline void RankRpcRankReply::set_myvalue(::google::protobuf::int64 value) {
  set_has_myvalue();
  myvalue_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RankRpc_2eproto__INCLUDED
