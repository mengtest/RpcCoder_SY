// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EventObjRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EventObjRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EventObjRpcEventBeginAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventBeginAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventBeginReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventBeginReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventEndAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventEndAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventEndReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventEndReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventStopAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventStopAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventStopReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventStopReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventObjRpcEventStopNotifyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventObjRpcEventStopNotifyNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EventObjRpc_2eproto() {
  protobuf_AddDesc_EventObjRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EventObjRpc.proto");
  GOOGLE_CHECK(file != NULL);
  EventObjRpcEventBeginAsk_descriptor_ = file->message_type(0);
  static const int EventObjRpcEventBeginAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginAsk, objid_),
  };
  EventObjRpcEventBeginAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventBeginAsk_descriptor_,
      EventObjRpcEventBeginAsk::default_instance_,
      EventObjRpcEventBeginAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventBeginAsk));
  EventObjRpcEventBeginReply_descriptor_ = file->message_type(1);
  static const int EventObjRpcEventBeginReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginReply, objid_),
  };
  EventObjRpcEventBeginReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventBeginReply_descriptor_,
      EventObjRpcEventBeginReply::default_instance_,
      EventObjRpcEventBeginReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventBeginReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventBeginReply));
  EventObjRpcEventEndAsk_descriptor_ = file->message_type(2);
  static const int EventObjRpcEventEndAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndAsk, objid_),
  };
  EventObjRpcEventEndAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventEndAsk_descriptor_,
      EventObjRpcEventEndAsk::default_instance_,
      EventObjRpcEventEndAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventEndAsk));
  EventObjRpcEventEndReply_descriptor_ = file->message_type(3);
  static const int EventObjRpcEventEndReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndReply, objid_),
  };
  EventObjRpcEventEndReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventEndReply_descriptor_,
      EventObjRpcEventEndReply::default_instance_,
      EventObjRpcEventEndReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventEndReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventEndReply));
  EventObjRpcEventStopAsk_descriptor_ = file->message_type(4);
  static const int EventObjRpcEventStopAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopAsk, objid_),
  };
  EventObjRpcEventStopAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventStopAsk_descriptor_,
      EventObjRpcEventStopAsk::default_instance_,
      EventObjRpcEventStopAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventStopAsk));
  EventObjRpcEventStopReply_descriptor_ = file->message_type(5);
  static const int EventObjRpcEventStopReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopReply, objid_),
  };
  EventObjRpcEventStopReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventStopReply_descriptor_,
      EventObjRpcEventStopReply::default_instance_,
      EventObjRpcEventStopReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventStopReply));
  EventObjRpcEventStopNotifyNotify_descriptor_ = file->message_type(6);
  static const int EventObjRpcEventStopNotifyNotify_offsets_[1] = {
  };
  EventObjRpcEventStopNotifyNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventObjRpcEventStopNotifyNotify_descriptor_,
      EventObjRpcEventStopNotifyNotify::default_instance_,
      EventObjRpcEventStopNotifyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopNotifyNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventObjRpcEventStopNotifyNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventObjRpcEventStopNotifyNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EventObjRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventBeginAsk_descriptor_, &EventObjRpcEventBeginAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventBeginReply_descriptor_, &EventObjRpcEventBeginReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventEndAsk_descriptor_, &EventObjRpcEventEndAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventEndReply_descriptor_, &EventObjRpcEventEndReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventStopAsk_descriptor_, &EventObjRpcEventStopAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventStopReply_descriptor_, &EventObjRpcEventStopReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventObjRpcEventStopNotifyNotify_descriptor_, &EventObjRpcEventStopNotifyNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EventObjRpc_2eproto() {
  delete EventObjRpcEventBeginAsk::default_instance_;
  delete EventObjRpcEventBeginAsk_reflection_;
  delete EventObjRpcEventBeginReply::default_instance_;
  delete EventObjRpcEventBeginReply_reflection_;
  delete EventObjRpcEventEndAsk::default_instance_;
  delete EventObjRpcEventEndAsk_reflection_;
  delete EventObjRpcEventEndReply::default_instance_;
  delete EventObjRpcEventEndReply_reflection_;
  delete EventObjRpcEventStopAsk::default_instance_;
  delete EventObjRpcEventStopAsk_reflection_;
  delete EventObjRpcEventStopReply::default_instance_;
  delete EventObjRpcEventStopReply_reflection_;
  delete EventObjRpcEventStopNotifyNotify::default_instance_;
  delete EventObjRpcEventStopNotifyNotify_reflection_;
}

void protobuf_AddDesc_EventObjRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021EventObjRpc.proto\032\022PublicStruct.proto\""
    "-\n\030EventObjRpcEventBeginAsk\022\021\n\005ObjId\030\001 \001"
    "(\005:\002-1\"F\n\032EventObjRpcEventBeginReply\022\025\n\006"
    "Result\030\001 \001(\005:\005-9999\022\021\n\005ObjId\030\002 \001(\005:\002-1\"+"
    "\n\026EventObjRpcEventEndAsk\022\021\n\005ObjId\030\001 \001(\005:"
    "\002-1\"D\n\030EventObjRpcEventEndReply\022\025\n\006Resul"
    "t\030\001 \001(\005:\005-9999\022\021\n\005ObjId\030\002 \001(\005:\002-1\",\n\027Eve"
    "ntObjRpcEventStopAsk\022\021\n\005ObjId\030\001 \001(\005:\002-1\""
    "B\n\031EventObjRpcEventStopReply\022\022\n\006Result\030\001"
    " \001(\005:\002-1\022\021\n\005ObjId\030\002 \001(\005:\002-1\"\"\n EventObjR"
    "pcEventStopNotifyNotify", 423);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EventObjRpc.proto", &protobuf_RegisterTypes);
  EventObjRpcEventBeginAsk::default_instance_ = new EventObjRpcEventBeginAsk();
  EventObjRpcEventBeginReply::default_instance_ = new EventObjRpcEventBeginReply();
  EventObjRpcEventEndAsk::default_instance_ = new EventObjRpcEventEndAsk();
  EventObjRpcEventEndReply::default_instance_ = new EventObjRpcEventEndReply();
  EventObjRpcEventStopAsk::default_instance_ = new EventObjRpcEventStopAsk();
  EventObjRpcEventStopReply::default_instance_ = new EventObjRpcEventStopReply();
  EventObjRpcEventStopNotifyNotify::default_instance_ = new EventObjRpcEventStopNotifyNotify();
  EventObjRpcEventBeginAsk::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventBeginReply::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventEndAsk::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventEndReply::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventStopAsk::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventStopReply::default_instance_->InitAsDefaultInstance();
  EventObjRpcEventStopNotifyNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EventObjRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EventObjRpc_2eproto {
  StaticDescriptorInitializer_EventObjRpc_2eproto() {
    protobuf_AddDesc_EventObjRpc_2eproto();
  }
} static_descriptor_initializer_EventObjRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventBeginAsk::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventBeginAsk::EventObjRpcEventBeginAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventBeginAsk::InitAsDefaultInstance() {
}

EventObjRpcEventBeginAsk::EventObjRpcEventBeginAsk(const EventObjRpcEventBeginAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventBeginAsk::SharedCtor() {
  _cached_size_ = 0;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventBeginAsk::~EventObjRpcEventBeginAsk() {
  SharedDtor();
}

void EventObjRpcEventBeginAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventBeginAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventBeginAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventBeginAsk_descriptor_;
}

const EventObjRpcEventBeginAsk& EventObjRpcEventBeginAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventBeginAsk* EventObjRpcEventBeginAsk::default_instance_ = NULL;

EventObjRpcEventBeginAsk* EventObjRpcEventBeginAsk::New() const {
  return new EventObjRpcEventBeginAsk;
}

void EventObjRpcEventBeginAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventBeginAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ObjId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventBeginAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventBeginAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventBeginAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ObjId = 1 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventBeginAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventBeginAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventBeginAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventBeginAsk::MergeFrom(const EventObjRpcEventBeginAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventBeginAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventBeginAsk::CopyFrom(const EventObjRpcEventBeginAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventBeginAsk::IsInitialized() const {

  return true;
}

void EventObjRpcEventBeginAsk::Swap(EventObjRpcEventBeginAsk* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventBeginAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventBeginAsk_descriptor_;
  metadata.reflection = EventObjRpcEventBeginAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventBeginReply::kResultFieldNumber;
const int EventObjRpcEventBeginReply::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventBeginReply::EventObjRpcEventBeginReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventBeginReply::InitAsDefaultInstance() {
}

EventObjRpcEventBeginReply::EventObjRpcEventBeginReply(const EventObjRpcEventBeginReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventBeginReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventBeginReply::~EventObjRpcEventBeginReply() {
  SharedDtor();
}

void EventObjRpcEventBeginReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventBeginReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventBeginReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventBeginReply_descriptor_;
}

const EventObjRpcEventBeginReply& EventObjRpcEventBeginReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventBeginReply* EventObjRpcEventBeginReply::default_instance_ = NULL;

EventObjRpcEventBeginReply* EventObjRpcEventBeginReply::New() const {
  return new EventObjRpcEventBeginReply;
}

void EventObjRpcEventBeginReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -9999;
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventBeginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -9999];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ObjId;
        break;
      }

      // optional int32 ObjId = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventBeginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -9999];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventBeginReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -9999];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventBeginReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 ObjId = 2 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventBeginReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventBeginReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventBeginReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventBeginReply::MergeFrom(const EventObjRpcEventBeginReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventBeginReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventBeginReply::CopyFrom(const EventObjRpcEventBeginReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventBeginReply::IsInitialized() const {

  return true;
}

void EventObjRpcEventBeginReply::Swap(EventObjRpcEventBeginReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventBeginReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventBeginReply_descriptor_;
  metadata.reflection = EventObjRpcEventBeginReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventEndAsk::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventEndAsk::EventObjRpcEventEndAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventEndAsk::InitAsDefaultInstance() {
}

EventObjRpcEventEndAsk::EventObjRpcEventEndAsk(const EventObjRpcEventEndAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventEndAsk::SharedCtor() {
  _cached_size_ = 0;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventEndAsk::~EventObjRpcEventEndAsk() {
  SharedDtor();
}

void EventObjRpcEventEndAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventEndAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventEndAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventEndAsk_descriptor_;
}

const EventObjRpcEventEndAsk& EventObjRpcEventEndAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventEndAsk* EventObjRpcEventEndAsk::default_instance_ = NULL;

EventObjRpcEventEndAsk* EventObjRpcEventEndAsk::New() const {
  return new EventObjRpcEventEndAsk;
}

void EventObjRpcEventEndAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventEndAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ObjId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventEndAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventEndAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventEndAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ObjId = 1 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventEndAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventEndAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventEndAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventEndAsk::MergeFrom(const EventObjRpcEventEndAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventEndAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventEndAsk::CopyFrom(const EventObjRpcEventEndAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventEndAsk::IsInitialized() const {

  return true;
}

void EventObjRpcEventEndAsk::Swap(EventObjRpcEventEndAsk* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventEndAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventEndAsk_descriptor_;
  metadata.reflection = EventObjRpcEventEndAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventEndReply::kResultFieldNumber;
const int EventObjRpcEventEndReply::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventEndReply::EventObjRpcEventEndReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventEndReply::InitAsDefaultInstance() {
}

EventObjRpcEventEndReply::EventObjRpcEventEndReply(const EventObjRpcEventEndReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventEndReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventEndReply::~EventObjRpcEventEndReply() {
  SharedDtor();
}

void EventObjRpcEventEndReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventEndReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventEndReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventEndReply_descriptor_;
}

const EventObjRpcEventEndReply& EventObjRpcEventEndReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventEndReply* EventObjRpcEventEndReply::default_instance_ = NULL;

EventObjRpcEventEndReply* EventObjRpcEventEndReply::New() const {
  return new EventObjRpcEventEndReply;
}

void EventObjRpcEventEndReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -9999;
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventEndReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -9999];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ObjId;
        break;
      }

      // optional int32 ObjId = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventEndReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -9999];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventEndReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -9999];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventEndReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 ObjId = 2 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventEndReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventEndReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventEndReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventEndReply::MergeFrom(const EventObjRpcEventEndReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventEndReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventEndReply::CopyFrom(const EventObjRpcEventEndReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventEndReply::IsInitialized() const {

  return true;
}

void EventObjRpcEventEndReply::Swap(EventObjRpcEventEndReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventEndReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventEndReply_descriptor_;
  metadata.reflection = EventObjRpcEventEndReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventStopAsk::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventStopAsk::EventObjRpcEventStopAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventStopAsk::InitAsDefaultInstance() {
}

EventObjRpcEventStopAsk::EventObjRpcEventStopAsk(const EventObjRpcEventStopAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventStopAsk::SharedCtor() {
  _cached_size_ = 0;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventStopAsk::~EventObjRpcEventStopAsk() {
  SharedDtor();
}

void EventObjRpcEventStopAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventStopAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventStopAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventStopAsk_descriptor_;
}

const EventObjRpcEventStopAsk& EventObjRpcEventStopAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventStopAsk* EventObjRpcEventStopAsk::default_instance_ = NULL;

EventObjRpcEventStopAsk* EventObjRpcEventStopAsk::New() const {
  return new EventObjRpcEventStopAsk;
}

void EventObjRpcEventStopAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventStopAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ObjId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventStopAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventStopAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ObjId = 1 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventStopAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ObjId = 1 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventStopAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventStopAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventStopAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventStopAsk::MergeFrom(const EventObjRpcEventStopAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventStopAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventStopAsk::CopyFrom(const EventObjRpcEventStopAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventStopAsk::IsInitialized() const {

  return true;
}

void EventObjRpcEventStopAsk::Swap(EventObjRpcEventStopAsk* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventStopAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventStopAsk_descriptor_;
  metadata.reflection = EventObjRpcEventStopAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventObjRpcEventStopReply::kResultFieldNumber;
const int EventObjRpcEventStopReply::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventObjRpcEventStopReply::EventObjRpcEventStopReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventStopReply::InitAsDefaultInstance() {
}

EventObjRpcEventStopReply::EventObjRpcEventStopReply(const EventObjRpcEventStopReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventStopReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventStopReply::~EventObjRpcEventStopReply() {
  SharedDtor();
}

void EventObjRpcEventStopReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventStopReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventStopReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventStopReply_descriptor_;
}

const EventObjRpcEventStopReply& EventObjRpcEventStopReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventStopReply* EventObjRpcEventStopReply::default_instance_ = NULL;

EventObjRpcEventStopReply* EventObjRpcEventStopReply::New() const {
  return new EventObjRpcEventStopReply;
}

void EventObjRpcEventStopReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventStopReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ObjId;
        break;
      }

      // optional int32 ObjId = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventObjRpcEventStopReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventStopReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 ObjId = 2 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventStopReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 ObjId = 2 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventStopReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventStopReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventStopReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventStopReply::MergeFrom(const EventObjRpcEventStopReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventStopReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventStopReply::CopyFrom(const EventObjRpcEventStopReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventStopReply::IsInitialized() const {

  return true;
}

void EventObjRpcEventStopReply::Swap(EventObjRpcEventStopReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventStopReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventStopReply_descriptor_;
  metadata.reflection = EventObjRpcEventStopReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

EventObjRpcEventStopNotifyNotify::EventObjRpcEventStopNotifyNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventObjRpcEventStopNotifyNotify::InitAsDefaultInstance() {
}

EventObjRpcEventStopNotifyNotify::EventObjRpcEventStopNotifyNotify(const EventObjRpcEventStopNotifyNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventObjRpcEventStopNotifyNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventObjRpcEventStopNotifyNotify::~EventObjRpcEventStopNotifyNotify() {
  SharedDtor();
}

void EventObjRpcEventStopNotifyNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventObjRpcEventStopNotifyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventObjRpcEventStopNotifyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventObjRpcEventStopNotifyNotify_descriptor_;
}

const EventObjRpcEventStopNotifyNotify& EventObjRpcEventStopNotifyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventObjRpc_2eproto();
  return *default_instance_;
}

EventObjRpcEventStopNotifyNotify* EventObjRpcEventStopNotifyNotify::default_instance_ = NULL;

EventObjRpcEventStopNotifyNotify* EventObjRpcEventStopNotifyNotify::New() const {
  return new EventObjRpcEventStopNotifyNotify;
}

void EventObjRpcEventStopNotifyNotify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventObjRpcEventStopNotifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void EventObjRpcEventStopNotifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventObjRpcEventStopNotifyNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventObjRpcEventStopNotifyNotify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventObjRpcEventStopNotifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventObjRpcEventStopNotifyNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventObjRpcEventStopNotifyNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventObjRpcEventStopNotifyNotify::MergeFrom(const EventObjRpcEventStopNotifyNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventObjRpcEventStopNotifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObjRpcEventStopNotifyNotify::CopyFrom(const EventObjRpcEventStopNotifyNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObjRpcEventStopNotifyNotify::IsInitialized() const {

  return true;
}

void EventObjRpcEventStopNotifyNotify::Swap(EventObjRpcEventStopNotifyNotify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventObjRpcEventStopNotifyNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventObjRpcEventStopNotifyNotify_descriptor_;
  metadata.reflection = EventObjRpcEventStopNotifyNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
