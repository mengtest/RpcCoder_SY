// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QuestRpc.proto

#ifndef PROTOBUF_QuestRpc_2eproto__INCLUDED
#define PROTOBUF_QuestRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_QuestRpc_2eproto();
void protobuf_AssignDesc_QuestRpc_2eproto();
void protobuf_ShutdownFile_QuestRpc_2eproto();

class QuestRpcOnAcceptQuestNotify;
class QuestRpcCompleteQuestStepAsk;
class QuestRpcCompleteQuestStepReply;
class QuestRpcOnCompleteQuestNotify;
class QuestRpcCallClientLuaNotify;
class QuestRpcUpdateQuestNotify;
class QuestRpcGiveUpQuestAsk;
class QuestRpcGiveUpQuestReply;
class QuestRpcCompleteQuestAsk;
class QuestRpcCompleteQuestReply;
class QuestRpcCompleteAcceptChatMenuAsk;
class QuestRpcCompleteAcceptChatMenuReply;
class QuestRpcAcceptQuestAsk;
class QuestRpcAcceptQuestReply;
class QuestRpcSyncQuestAsk;
class QuestRpcSyncQuestReply;
class QuestRpcGetRewardAsk;
class QuestRpcGetRewardReply;
class QuestRpcRemoveQuestNotifyNotify;
class QuestRpcGetQuestDataAsk;
class QuestRpcGetQuestDataReply;
class QuestRpcSyncDailyQuestAsk;
class QuestRpcSyncDailyQuestReply;
class QuestRpcDailyQuestUpdateNotify;
class QuestRpcConsumeItemAsk;
class QuestRpcConsumeItemReply;
class QuestRpcQuestMaxListAsk;
class QuestRpcQuestMaxListReply;
class QuestRpcQuestMaxListNotifyNotify;
class QuestRpcSyncCompleteQuestIdsAsk;
class QuestRpcSyncCompleteQuestIdsReply;
class QuestRpcCompleteQuestIdsNotifyNotify;
class QuestRpcEliteFinishCountAsk;
class QuestRpcEliteFinishCountReply;
class QuestRpcSyncCanAcceptQuestNotify;

// ===================================================================

class QuestRpcOnAcceptQuestNotify : public ::google::protobuf::Message {
 public:
  QuestRpcOnAcceptQuestNotify();
  virtual ~QuestRpcOnAcceptQuestNotify();

  QuestRpcOnAcceptQuestNotify(const QuestRpcOnAcceptQuestNotify& from);

  inline QuestRpcOnAcceptQuestNotify& operator=(const QuestRpcOnAcceptQuestNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcOnAcceptQuestNotify& default_instance();

  void Swap(QuestRpcOnAcceptQuestNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcOnAcceptQuestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcOnAcceptQuestNotify& from);
  void MergeFrom(const QuestRpcOnAcceptQuestNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .QuestData AcceptQuest = 1;
  inline bool has_acceptquest() const;
  inline void clear_acceptquest();
  static const int kAcceptQuestFieldNumber = 1;
  inline const ::QuestData& acceptquest() const;
  inline ::QuestData* mutable_acceptquest();
  inline ::QuestData* release_acceptquest();
  inline void set_allocated_acceptquest(::QuestData* acceptquest);

  // @@protoc_insertion_point(class_scope:QuestRpcOnAcceptQuestNotify)
 private:
  inline void set_has_acceptquest();
  inline void clear_has_acceptquest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestData* acceptquest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcOnAcceptQuestNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteQuestStepAsk : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteQuestStepAsk();
  virtual ~QuestRpcCompleteQuestStepAsk();

  QuestRpcCompleteQuestStepAsk(const QuestRpcCompleteQuestStepAsk& from);

  inline QuestRpcCompleteQuestStepAsk& operator=(const QuestRpcCompleteQuestStepAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteQuestStepAsk& default_instance();

  void Swap(QuestRpcCompleteQuestStepAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteQuestStepAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteQuestStepAsk& from);
  void MergeFrom(const QuestRpcCompleteQuestStepAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // optional int32 QuestStep = 2 [default = -1];
  inline bool has_queststep() const;
  inline void clear_queststep();
  static const int kQuestStepFieldNumber = 2;
  inline ::google::protobuf::int32 queststep() const;
  inline void set_queststep(::google::protobuf::int32 value);

  // optional int32 TargetId = 4 [default = -1];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 4;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // optional int32 QuestStepEventType = 5 [default = -1];
  inline bool has_queststepeventtype() const;
  inline void clear_queststepeventtype();
  static const int kQuestStepEventTypeFieldNumber = 5;
  inline ::google::protobuf::int32 queststepeventtype() const;
  inline void set_queststepeventtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteQuestStepAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();
  inline void set_has_queststep();
  inline void clear_has_queststep();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_queststepeventtype();
  inline void clear_has_queststepeventtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questconfigid_;
  ::google::protobuf::int32 queststep_;
  ::google::protobuf::int32 targetid_;
  ::google::protobuf::int32 queststepeventtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteQuestStepAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteQuestStepReply : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteQuestStepReply();
  virtual ~QuestRpcCompleteQuestStepReply();

  QuestRpcCompleteQuestStepReply(const QuestRpcCompleteQuestStepReply& from);

  inline QuestRpcCompleteQuestStepReply& operator=(const QuestRpcCompleteQuestStepReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteQuestStepReply& default_instance();

  void Swap(QuestRpcCompleteQuestStepReply* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteQuestStepReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteQuestStepReply& from);
  void MergeFrom(const QuestRpcCompleteQuestStepReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteQuestStepReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteQuestStepReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcOnCompleteQuestNotify : public ::google::protobuf::Message {
 public:
  QuestRpcOnCompleteQuestNotify();
  virtual ~QuestRpcOnCompleteQuestNotify();

  QuestRpcOnCompleteQuestNotify(const QuestRpcOnCompleteQuestNotify& from);

  inline QuestRpcOnCompleteQuestNotify& operator=(const QuestRpcOnCompleteQuestNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcOnCompleteQuestNotify& default_instance();

  void Swap(QuestRpcOnCompleteQuestNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcOnCompleteQuestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcOnCompleteQuestNotify& from);
  void MergeFrom(const QuestRpcOnCompleteQuestNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .QuestData QuestData = 1;
  inline bool has_questdata() const;
  inline void clear_questdata();
  static const int kQuestDataFieldNumber = 1;
  inline const ::QuestData& questdata() const;
  inline ::QuestData* mutable_questdata();
  inline ::QuestData* release_questdata();
  inline void set_allocated_questdata(::QuestData* questdata);

  // @@protoc_insertion_point(class_scope:QuestRpcOnCompleteQuestNotify)
 private:
  inline void set_has_questdata();
  inline void clear_has_questdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestData* questdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcOnCompleteQuestNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCallClientLuaNotify : public ::google::protobuf::Message {
 public:
  QuestRpcCallClientLuaNotify();
  virtual ~QuestRpcCallClientLuaNotify();

  QuestRpcCallClientLuaNotify(const QuestRpcCallClientLuaNotify& from);

  inline QuestRpcCallClientLuaNotify& operator=(const QuestRpcCallClientLuaNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCallClientLuaNotify& default_instance();

  void Swap(QuestRpcCallClientLuaNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcCallClientLuaNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCallClientLuaNotify& from);
  void MergeFrom(const QuestRpcCallClientLuaNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:QuestRpcCallClientLuaNotify)
 private:
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCallClientLuaNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcUpdateQuestNotify : public ::google::protobuf::Message {
 public:
  QuestRpcUpdateQuestNotify();
  virtual ~QuestRpcUpdateQuestNotify();

  QuestRpcUpdateQuestNotify(const QuestRpcUpdateQuestNotify& from);

  inline QuestRpcUpdateQuestNotify& operator=(const QuestRpcUpdateQuestNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcUpdateQuestNotify& default_instance();

  void Swap(QuestRpcUpdateQuestNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcUpdateQuestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcUpdateQuestNotify& from);
  void MergeFrom(const QuestRpcUpdateQuestNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .QuestData Quest = 1;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 1;
  inline const ::QuestData& quest() const;
  inline ::QuestData* mutable_quest();
  inline ::QuestData* release_quest();
  inline void set_allocated_quest(::QuestData* quest);

  // @@protoc_insertion_point(class_scope:QuestRpcUpdateQuestNotify)
 private:
  inline void set_has_quest();
  inline void clear_has_quest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestData* quest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcUpdateQuestNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGiveUpQuestAsk : public ::google::protobuf::Message {
 public:
  QuestRpcGiveUpQuestAsk();
  virtual ~QuestRpcGiveUpQuestAsk();

  QuestRpcGiveUpQuestAsk(const QuestRpcGiveUpQuestAsk& from);

  inline QuestRpcGiveUpQuestAsk& operator=(const QuestRpcGiveUpQuestAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGiveUpQuestAsk& default_instance();

  void Swap(QuestRpcGiveUpQuestAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcGiveUpQuestAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGiveUpQuestAsk& from);
  void MergeFrom(const QuestRpcGiveUpQuestAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcGiveUpQuestAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGiveUpQuestAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGiveUpQuestReply : public ::google::protobuf::Message {
 public:
  QuestRpcGiveUpQuestReply();
  virtual ~QuestRpcGiveUpQuestReply();

  QuestRpcGiveUpQuestReply(const QuestRpcGiveUpQuestReply& from);

  inline QuestRpcGiveUpQuestReply& operator=(const QuestRpcGiveUpQuestReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGiveUpQuestReply& default_instance();

  void Swap(QuestRpcGiveUpQuestReply* other);

  // implements Message ----------------------------------------------

  QuestRpcGiveUpQuestReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGiveUpQuestReply& from);
  void MergeFrom(const QuestRpcGiveUpQuestReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcGiveUpQuestReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGiveUpQuestReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteQuestAsk : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteQuestAsk();
  virtual ~QuestRpcCompleteQuestAsk();

  QuestRpcCompleteQuestAsk(const QuestRpcCompleteQuestAsk& from);

  inline QuestRpcCompleteQuestAsk& operator=(const QuestRpcCompleteQuestAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteQuestAsk& default_instance();

  void Swap(QuestRpcCompleteQuestAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteQuestAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteQuestAsk& from);
  void MergeFrom(const QuestRpcCompleteQuestAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // optional int32 TargetId = 2 [default = -1];
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // optional int32 QuestEventType = 3 [default = -1];
  inline bool has_questeventtype() const;
  inline void clear_questeventtype();
  static const int kQuestEventTypeFieldNumber = 3;
  inline ::google::protobuf::int32 questeventtype() const;
  inline void set_questeventtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteQuestAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_questeventtype();
  inline void clear_has_questeventtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questconfigid_;
  ::google::protobuf::int32 targetid_;
  ::google::protobuf::int32 questeventtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteQuestAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteQuestReply : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteQuestReply();
  virtual ~QuestRpcCompleteQuestReply();

  QuestRpcCompleteQuestReply(const QuestRpcCompleteQuestReply& from);

  inline QuestRpcCompleteQuestReply& operator=(const QuestRpcCompleteQuestReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteQuestReply& default_instance();

  void Swap(QuestRpcCompleteQuestReply* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteQuestReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteQuestReply& from);
  void MergeFrom(const QuestRpcCompleteQuestReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteQuestReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteQuestReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteAcceptChatMenuAsk : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteAcceptChatMenuAsk();
  virtual ~QuestRpcCompleteAcceptChatMenuAsk();

  QuestRpcCompleteAcceptChatMenuAsk(const QuestRpcCompleteAcceptChatMenuAsk& from);

  inline QuestRpcCompleteAcceptChatMenuAsk& operator=(const QuestRpcCompleteAcceptChatMenuAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteAcceptChatMenuAsk& default_instance();

  void Swap(QuestRpcCompleteAcceptChatMenuAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteAcceptChatMenuAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteAcceptChatMenuAsk& from);
  void MergeFrom(const QuestRpcCompleteAcceptChatMenuAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteAcceptChatMenuAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteAcceptChatMenuAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteAcceptChatMenuReply : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteAcceptChatMenuReply();
  virtual ~QuestRpcCompleteAcceptChatMenuReply();

  QuestRpcCompleteAcceptChatMenuReply(const QuestRpcCompleteAcceptChatMenuReply& from);

  inline QuestRpcCompleteAcceptChatMenuReply& operator=(const QuestRpcCompleteAcceptChatMenuReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteAcceptChatMenuReply& default_instance();

  void Swap(QuestRpcCompleteAcceptChatMenuReply* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteAcceptChatMenuReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteAcceptChatMenuReply& from);
  void MergeFrom(const QuestRpcCompleteAcceptChatMenuReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteAcceptChatMenuReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteAcceptChatMenuReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcAcceptQuestAsk : public ::google::protobuf::Message {
 public:
  QuestRpcAcceptQuestAsk();
  virtual ~QuestRpcAcceptQuestAsk();

  QuestRpcAcceptQuestAsk(const QuestRpcAcceptQuestAsk& from);

  inline QuestRpcAcceptQuestAsk& operator=(const QuestRpcAcceptQuestAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcAcceptQuestAsk& default_instance();

  void Swap(QuestRpcAcceptQuestAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcAcceptQuestAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcAcceptQuestAsk& from);
  void MergeFrom(const QuestRpcAcceptQuestAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 QuestConfigId = 2 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 2;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcAcceptQuestAsk)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcAcceptQuestAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcAcceptQuestReply : public ::google::protobuf::Message {
 public:
  QuestRpcAcceptQuestReply();
  virtual ~QuestRpcAcceptQuestReply();

  QuestRpcAcceptQuestReply(const QuestRpcAcceptQuestReply& from);

  inline QuestRpcAcceptQuestReply& operator=(const QuestRpcAcceptQuestReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcAcceptQuestReply& default_instance();

  void Swap(QuestRpcAcceptQuestReply* other);

  // implements Message ----------------------------------------------

  QuestRpcAcceptQuestReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcAcceptQuestReply& from);
  void MergeFrom(const QuestRpcAcceptQuestReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcAcceptQuestReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcAcceptQuestReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncQuestAsk : public ::google::protobuf::Message {
 public:
  QuestRpcSyncQuestAsk();
  virtual ~QuestRpcSyncQuestAsk();

  QuestRpcSyncQuestAsk(const QuestRpcSyncQuestAsk& from);

  inline QuestRpcSyncQuestAsk& operator=(const QuestRpcSyncQuestAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncQuestAsk& default_instance();

  void Swap(QuestRpcSyncQuestAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncQuestAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncQuestAsk& from);
  void MergeFrom(const QuestRpcSyncQuestAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuestRpcSyncQuestAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncQuestAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncQuestReply : public ::google::protobuf::Message {
 public:
  QuestRpcSyncQuestReply();
  virtual ~QuestRpcSyncQuestReply();

  QuestRpcSyncQuestReply(const QuestRpcSyncQuestReply& from);

  inline QuestRpcSyncQuestReply& operator=(const QuestRpcSyncQuestReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncQuestReply& default_instance();

  void Swap(QuestRpcSyncQuestReply* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncQuestReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncQuestReply& from);
  void MergeFrom(const QuestRpcSyncQuestReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .QuestListData QuestList = 2;
  inline bool has_questlist() const;
  inline void clear_questlist();
  static const int kQuestListFieldNumber = 2;
  inline const ::QuestListData& questlist() const;
  inline ::QuestListData* mutable_questlist();
  inline ::QuestListData* release_questlist();
  inline void set_allocated_questlist(::QuestListData* questlist);

  // repeated int32 CompleteQuestIdsList = 3;
  inline int completequestidslist_size() const;
  inline void clear_completequestidslist();
  static const int kCompleteQuestIdsListFieldNumber = 3;
  inline ::google::protobuf::int32 completequestidslist(int index) const;
  inline void set_completequestidslist(int index, ::google::protobuf::int32 value);
  inline void add_completequestidslist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      completequestidslist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_completequestidslist();

  // repeated int32 CanAcceptQuest = 4;
  inline int canacceptquest_size() const;
  inline void clear_canacceptquest();
  static const int kCanAcceptQuestFieldNumber = 4;
  inline ::google::protobuf::int32 canacceptquest(int index) const;
  inline void set_canacceptquest(int index, ::google::protobuf::int32 value);
  inline void add_canacceptquest(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canacceptquest() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canacceptquest();

  // @@protoc_insertion_point(class_scope:QuestRpcSyncQuestReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_questlist();
  inline void clear_has_questlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestListData* questlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > completequestidslist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canacceptquest_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncQuestReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGetRewardAsk : public ::google::protobuf::Message {
 public:
  QuestRpcGetRewardAsk();
  virtual ~QuestRpcGetRewardAsk();

  QuestRpcGetRewardAsk(const QuestRpcGetRewardAsk& from);

  inline QuestRpcGetRewardAsk& operator=(const QuestRpcGetRewardAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGetRewardAsk& default_instance();

  void Swap(QuestRpcGetRewardAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcGetRewardAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGetRewardAsk& from);
  void MergeFrom(const QuestRpcGetRewardAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcGetRewardAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGetRewardAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGetRewardReply : public ::google::protobuf::Message {
 public:
  QuestRpcGetRewardReply();
  virtual ~QuestRpcGetRewardReply();

  QuestRpcGetRewardReply(const QuestRpcGetRewardReply& from);

  inline QuestRpcGetRewardReply& operator=(const QuestRpcGetRewardReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGetRewardReply& default_instance();

  void Swap(QuestRpcGetRewardReply* other);

  // implements Message ----------------------------------------------

  QuestRpcGetRewardReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGetRewardReply& from);
  void MergeFrom(const QuestRpcGetRewardReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcGetRewardReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGetRewardReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcRemoveQuestNotifyNotify : public ::google::protobuf::Message {
 public:
  QuestRpcRemoveQuestNotifyNotify();
  virtual ~QuestRpcRemoveQuestNotifyNotify();

  QuestRpcRemoveQuestNotifyNotify(const QuestRpcRemoveQuestNotifyNotify& from);

  inline QuestRpcRemoveQuestNotifyNotify& operator=(const QuestRpcRemoveQuestNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcRemoveQuestNotifyNotify& default_instance();

  void Swap(QuestRpcRemoveQuestNotifyNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcRemoveQuestNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcRemoveQuestNotifyNotify& from);
  void MergeFrom(const QuestRpcRemoveQuestNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 QuestConfigId = 1;
  inline int questconfigid_size() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid(int index) const;
  inline void set_questconfigid(int index, ::google::protobuf::int32 value);
  inline void add_questconfigid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      questconfigid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_questconfigid();

  // @@protoc_insertion_point(class_scope:QuestRpcRemoveQuestNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcRemoveQuestNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGetQuestDataAsk : public ::google::protobuf::Message {
 public:
  QuestRpcGetQuestDataAsk();
  virtual ~QuestRpcGetQuestDataAsk();

  QuestRpcGetQuestDataAsk(const QuestRpcGetQuestDataAsk& from);

  inline QuestRpcGetQuestDataAsk& operator=(const QuestRpcGetQuestDataAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGetQuestDataAsk& default_instance();

  void Swap(QuestRpcGetQuestDataAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcGetQuestDataAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGetQuestDataAsk& from);
  void MergeFrom(const QuestRpcGetQuestDataAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 QuestConfigId = 1;
  inline int questconfigid_size() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid(int index) const;
  inline void set_questconfigid(int index, ::google::protobuf::int32 value);
  inline void add_questconfigid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      questconfigid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_questconfigid();

  // @@protoc_insertion_point(class_scope:QuestRpcGetQuestDataAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGetQuestDataAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcGetQuestDataReply : public ::google::protobuf::Message {
 public:
  QuestRpcGetQuestDataReply();
  virtual ~QuestRpcGetQuestDataReply();

  QuestRpcGetQuestDataReply(const QuestRpcGetQuestDataReply& from);

  inline QuestRpcGetQuestDataReply& operator=(const QuestRpcGetQuestDataReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcGetQuestDataReply& default_instance();

  void Swap(QuestRpcGetQuestDataReply* other);

  // implements Message ----------------------------------------------

  QuestRpcGetQuestDataReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcGetQuestDataReply& from);
  void MergeFrom(const QuestRpcGetQuestDataReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .QuestData QuestList = 2;
  inline int questlist_size() const;
  inline void clear_questlist();
  static const int kQuestListFieldNumber = 2;
  inline const ::QuestData& questlist(int index) const;
  inline ::QuestData* mutable_questlist(int index);
  inline ::QuestData* add_questlist();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestData >&
      questlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestData >*
      mutable_questlist();

  // @@protoc_insertion_point(class_scope:QuestRpcGetQuestDataReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::QuestData > questlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcGetQuestDataReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncDailyQuestAsk : public ::google::protobuf::Message {
 public:
  QuestRpcSyncDailyQuestAsk();
  virtual ~QuestRpcSyncDailyQuestAsk();

  QuestRpcSyncDailyQuestAsk(const QuestRpcSyncDailyQuestAsk& from);

  inline QuestRpcSyncDailyQuestAsk& operator=(const QuestRpcSyncDailyQuestAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncDailyQuestAsk& default_instance();

  void Swap(QuestRpcSyncDailyQuestAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncDailyQuestAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncDailyQuestAsk& from);
  void MergeFrom(const QuestRpcSyncDailyQuestAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuestRpcSyncDailyQuestAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncDailyQuestAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncDailyQuestReply : public ::google::protobuf::Message {
 public:
  QuestRpcSyncDailyQuestReply();
  virtual ~QuestRpcSyncDailyQuestReply();

  QuestRpcSyncDailyQuestReply(const QuestRpcSyncDailyQuestReply& from);

  inline QuestRpcSyncDailyQuestReply& operator=(const QuestRpcSyncDailyQuestReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncDailyQuestReply& default_instance();

  void Swap(QuestRpcSyncDailyQuestReply* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncDailyQuestReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncDailyQuestReply& from);
  void MergeFrom(const QuestRpcSyncDailyQuestReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .DailyQuestList DailyQuestList = 2;
  inline bool has_dailyquestlist() const;
  inline void clear_dailyquestlist();
  static const int kDailyQuestListFieldNumber = 2;
  inline const ::DailyQuestList& dailyquestlist() const;
  inline ::DailyQuestList* mutable_dailyquestlist();
  inline ::DailyQuestList* release_dailyquestlist();
  inline void set_allocated_dailyquestlist(::DailyQuestList* dailyquestlist);

  // @@protoc_insertion_point(class_scope:QuestRpcSyncDailyQuestReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dailyquestlist();
  inline void clear_has_dailyquestlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DailyQuestList* dailyquestlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncDailyQuestReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcDailyQuestUpdateNotify : public ::google::protobuf::Message {
 public:
  QuestRpcDailyQuestUpdateNotify();
  virtual ~QuestRpcDailyQuestUpdateNotify();

  QuestRpcDailyQuestUpdateNotify(const QuestRpcDailyQuestUpdateNotify& from);

  inline QuestRpcDailyQuestUpdateNotify& operator=(const QuestRpcDailyQuestUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcDailyQuestUpdateNotify& default_instance();

  void Swap(QuestRpcDailyQuestUpdateNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcDailyQuestUpdateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcDailyQuestUpdateNotify& from);
  void MergeFrom(const QuestRpcDailyQuestUpdateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DailyQuest AtivityQuestData = 1;
  inline bool has_ativityquestdata() const;
  inline void clear_ativityquestdata();
  static const int kAtivityQuestDataFieldNumber = 1;
  inline const ::DailyQuest& ativityquestdata() const;
  inline ::DailyQuest* mutable_ativityquestdata();
  inline ::DailyQuest* release_ativityquestdata();
  inline void set_allocated_ativityquestdata(::DailyQuest* ativityquestdata);

  // @@protoc_insertion_point(class_scope:QuestRpcDailyQuestUpdateNotify)
 private:
  inline void set_has_ativityquestdata();
  inline void clear_has_ativityquestdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DailyQuest* ativityquestdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcDailyQuestUpdateNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcConsumeItemAsk : public ::google::protobuf::Message {
 public:
  QuestRpcConsumeItemAsk();
  virtual ~QuestRpcConsumeItemAsk();

  QuestRpcConsumeItemAsk(const QuestRpcConsumeItemAsk& from);

  inline QuestRpcConsumeItemAsk& operator=(const QuestRpcConsumeItemAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcConsumeItemAsk& default_instance();

  void Swap(QuestRpcConsumeItemAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcConsumeItemAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcConsumeItemAsk& from);
  void MergeFrom(const QuestRpcConsumeItemAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 QuestConfigId = 1 [default = -1];
  inline bool has_questconfigid() const;
  inline void clear_questconfigid();
  static const int kQuestConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 questconfigid() const;
  inline void set_questconfigid(::google::protobuf::int32 value);

  // repeated .ItemSimpleData ItemData = 2;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 2;
  inline const ::ItemSimpleData& itemdata(int index) const;
  inline ::ItemSimpleData* mutable_itemdata(int index);
  inline ::ItemSimpleData* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
      mutable_itemdata();

  // @@protoc_insertion_point(class_scope:QuestRpcConsumeItemAsk)
 private:
  inline void set_has_questconfigid();
  inline void clear_has_questconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ItemSimpleData > itemdata_;
  ::google::protobuf::int32 questconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcConsumeItemAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcConsumeItemReply : public ::google::protobuf::Message {
 public:
  QuestRpcConsumeItemReply();
  virtual ~QuestRpcConsumeItemReply();

  QuestRpcConsumeItemReply(const QuestRpcConsumeItemReply& from);

  inline QuestRpcConsumeItemReply& operator=(const QuestRpcConsumeItemReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcConsumeItemReply& default_instance();

  void Swap(QuestRpcConsumeItemReply* other);

  // implements Message ----------------------------------------------

  QuestRpcConsumeItemReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcConsumeItemReply& from);
  void MergeFrom(const QuestRpcConsumeItemReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcConsumeItemReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcConsumeItemReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcQuestMaxListAsk : public ::google::protobuf::Message {
 public:
  QuestRpcQuestMaxListAsk();
  virtual ~QuestRpcQuestMaxListAsk();

  QuestRpcQuestMaxListAsk(const QuestRpcQuestMaxListAsk& from);

  inline QuestRpcQuestMaxListAsk& operator=(const QuestRpcQuestMaxListAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcQuestMaxListAsk& default_instance();

  void Swap(QuestRpcQuestMaxListAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcQuestMaxListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcQuestMaxListAsk& from);
  void MergeFrom(const QuestRpcQuestMaxListAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuestRpcQuestMaxListAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcQuestMaxListAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcQuestMaxListReply : public ::google::protobuf::Message {
 public:
  QuestRpcQuestMaxListReply();
  virtual ~QuestRpcQuestMaxListReply();

  QuestRpcQuestMaxListReply(const QuestRpcQuestMaxListReply& from);

  inline QuestRpcQuestMaxListReply& operator=(const QuestRpcQuestMaxListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcQuestMaxListReply& default_instance();

  void Swap(QuestRpcQuestMaxListReply* other);

  // implements Message ----------------------------------------------

  QuestRpcQuestMaxListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcQuestMaxListReply& from);
  void MergeFrom(const QuestRpcQuestMaxListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .QuestMaxQuestList QuestList = 2;
  inline bool has_questlist() const;
  inline void clear_questlist();
  static const int kQuestListFieldNumber = 2;
  inline const ::QuestMaxQuestList& questlist() const;
  inline ::QuestMaxQuestList* mutable_questlist();
  inline ::QuestMaxQuestList* release_questlist();
  inline void set_allocated_questlist(::QuestMaxQuestList* questlist);

  // @@protoc_insertion_point(class_scope:QuestRpcQuestMaxListReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_questlist();
  inline void clear_has_questlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestMaxQuestList* questlist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcQuestMaxListReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcQuestMaxListNotifyNotify : public ::google::protobuf::Message {
 public:
  QuestRpcQuestMaxListNotifyNotify();
  virtual ~QuestRpcQuestMaxListNotifyNotify();

  QuestRpcQuestMaxListNotifyNotify(const QuestRpcQuestMaxListNotifyNotify& from);

  inline QuestRpcQuestMaxListNotifyNotify& operator=(const QuestRpcQuestMaxListNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcQuestMaxListNotifyNotify& default_instance();

  void Swap(QuestRpcQuestMaxListNotifyNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcQuestMaxListNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcQuestMaxListNotifyNotify& from);
  void MergeFrom(const QuestRpcQuestMaxListNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .QuestMaxQuestList QuestList = 1;
  inline bool has_questlist() const;
  inline void clear_questlist();
  static const int kQuestListFieldNumber = 1;
  inline const ::QuestMaxQuestList& questlist() const;
  inline ::QuestMaxQuestList* mutable_questlist();
  inline ::QuestMaxQuestList* release_questlist();
  inline void set_allocated_questlist(::QuestMaxQuestList* questlist);

  // @@protoc_insertion_point(class_scope:QuestRpcQuestMaxListNotifyNotify)
 private:
  inline void set_has_questlist();
  inline void clear_has_questlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::QuestMaxQuestList* questlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcQuestMaxListNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncCompleteQuestIdsAsk : public ::google::protobuf::Message {
 public:
  QuestRpcSyncCompleteQuestIdsAsk();
  virtual ~QuestRpcSyncCompleteQuestIdsAsk();

  QuestRpcSyncCompleteQuestIdsAsk(const QuestRpcSyncCompleteQuestIdsAsk& from);

  inline QuestRpcSyncCompleteQuestIdsAsk& operator=(const QuestRpcSyncCompleteQuestIdsAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncCompleteQuestIdsAsk& default_instance();

  void Swap(QuestRpcSyncCompleteQuestIdsAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncCompleteQuestIdsAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncCompleteQuestIdsAsk& from);
  void MergeFrom(const QuestRpcSyncCompleteQuestIdsAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuestRpcSyncCompleteQuestIdsAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncCompleteQuestIdsAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncCompleteQuestIdsReply : public ::google::protobuf::Message {
 public:
  QuestRpcSyncCompleteQuestIdsReply();
  virtual ~QuestRpcSyncCompleteQuestIdsReply();

  QuestRpcSyncCompleteQuestIdsReply(const QuestRpcSyncCompleteQuestIdsReply& from);

  inline QuestRpcSyncCompleteQuestIdsReply& operator=(const QuestRpcSyncCompleteQuestIdsReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncCompleteQuestIdsReply& default_instance();

  void Swap(QuestRpcSyncCompleteQuestIdsReply* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncCompleteQuestIdsReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncCompleteQuestIdsReply& from);
  void MergeFrom(const QuestRpcSyncCompleteQuestIdsReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .CompletedQuestList CompleteQuestIds = 2;
  inline bool has_completequestids() const;
  inline void clear_completequestids();
  static const int kCompleteQuestIdsFieldNumber = 2;
  inline const ::CompletedQuestList& completequestids() const;
  inline ::CompletedQuestList* mutable_completequestids();
  inline ::CompletedQuestList* release_completequestids();
  inline void set_allocated_completequestids(::CompletedQuestList* completequestids);

  // @@protoc_insertion_point(class_scope:QuestRpcSyncCompleteQuestIdsReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_completequestids();
  inline void clear_has_completequestids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CompletedQuestList* completequestids_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncCompleteQuestIdsReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcCompleteQuestIdsNotifyNotify : public ::google::protobuf::Message {
 public:
  QuestRpcCompleteQuestIdsNotifyNotify();
  virtual ~QuestRpcCompleteQuestIdsNotifyNotify();

  QuestRpcCompleteQuestIdsNotifyNotify(const QuestRpcCompleteQuestIdsNotifyNotify& from);

  inline QuestRpcCompleteQuestIdsNotifyNotify& operator=(const QuestRpcCompleteQuestIdsNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcCompleteQuestIdsNotifyNotify& default_instance();

  void Swap(QuestRpcCompleteQuestIdsNotifyNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcCompleteQuestIdsNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcCompleteQuestIdsNotifyNotify& from);
  void MergeFrom(const QuestRpcCompleteQuestIdsNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CompletedQuestList CompleteQuestIds = 1;
  inline bool has_completequestids() const;
  inline void clear_completequestids();
  static const int kCompleteQuestIdsFieldNumber = 1;
  inline const ::CompletedQuestList& completequestids() const;
  inline ::CompletedQuestList* mutable_completequestids();
  inline ::CompletedQuestList* release_completequestids();
  inline void set_allocated_completequestids(::CompletedQuestList* completequestids);

  // @@protoc_insertion_point(class_scope:QuestRpcCompleteQuestIdsNotifyNotify)
 private:
  inline void set_has_completequestids();
  inline void clear_has_completequestids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CompletedQuestList* completequestids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcCompleteQuestIdsNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcEliteFinishCountAsk : public ::google::protobuf::Message {
 public:
  QuestRpcEliteFinishCountAsk();
  virtual ~QuestRpcEliteFinishCountAsk();

  QuestRpcEliteFinishCountAsk(const QuestRpcEliteFinishCountAsk& from);

  inline QuestRpcEliteFinishCountAsk& operator=(const QuestRpcEliteFinishCountAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcEliteFinishCountAsk& default_instance();

  void Swap(QuestRpcEliteFinishCountAsk* other);

  // implements Message ----------------------------------------------

  QuestRpcEliteFinishCountAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcEliteFinishCountAsk& from);
  void MergeFrom(const QuestRpcEliteFinishCountAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuestRpcEliteFinishCountAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcEliteFinishCountAsk* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcEliteFinishCountReply : public ::google::protobuf::Message {
 public:
  QuestRpcEliteFinishCountReply();
  virtual ~QuestRpcEliteFinishCountReply();

  QuestRpcEliteFinishCountReply(const QuestRpcEliteFinishCountReply& from);

  inline QuestRpcEliteFinishCountReply& operator=(const QuestRpcEliteFinishCountReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcEliteFinishCountReply& default_instance();

  void Swap(QuestRpcEliteFinishCountReply* other);

  // implements Message ----------------------------------------------

  QuestRpcEliteFinishCountReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcEliteFinishCountReply& from);
  void MergeFrom(const QuestRpcEliteFinishCountReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 Count = 2 [default = -1];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestRpcEliteFinishCountReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcEliteFinishCountReply* default_instance_;
};
// -------------------------------------------------------------------

class QuestRpcSyncCanAcceptQuestNotify : public ::google::protobuf::Message {
 public:
  QuestRpcSyncCanAcceptQuestNotify();
  virtual ~QuestRpcSyncCanAcceptQuestNotify();

  QuestRpcSyncCanAcceptQuestNotify(const QuestRpcSyncCanAcceptQuestNotify& from);

  inline QuestRpcSyncCanAcceptQuestNotify& operator=(const QuestRpcSyncCanAcceptQuestNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRpcSyncCanAcceptQuestNotify& default_instance();

  void Swap(QuestRpcSyncCanAcceptQuestNotify* other);

  // implements Message ----------------------------------------------

  QuestRpcSyncCanAcceptQuestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRpcSyncCanAcceptQuestNotify& from);
  void MergeFrom(const QuestRpcSyncCanAcceptQuestNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 CanAcceptQuest = 1;
  inline int canacceptquest_size() const;
  inline void clear_canacceptquest();
  static const int kCanAcceptQuestFieldNumber = 1;
  inline ::google::protobuf::int32 canacceptquest(int index) const;
  inline void set_canacceptquest(int index, ::google::protobuf::int32 value);
  inline void add_canacceptquest(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      canacceptquest() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_canacceptquest();

  // @@protoc_insertion_point(class_scope:QuestRpcSyncCanAcceptQuestNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > canacceptquest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_QuestRpc_2eproto();
  friend void protobuf_AssignDesc_QuestRpc_2eproto();
  friend void protobuf_ShutdownFile_QuestRpc_2eproto();

  void InitAsDefaultInstance();
  static QuestRpcSyncCanAcceptQuestNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// QuestRpcOnAcceptQuestNotify

// optional .QuestData AcceptQuest = 1;
inline bool QuestRpcOnAcceptQuestNotify::has_acceptquest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcOnAcceptQuestNotify::set_has_acceptquest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcOnAcceptQuestNotify::clear_has_acceptquest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcOnAcceptQuestNotify::clear_acceptquest() {
  if (acceptquest_ != NULL) acceptquest_->::QuestData::Clear();
  clear_has_acceptquest();
}
inline const ::QuestData& QuestRpcOnAcceptQuestNotify::acceptquest() const {
  return acceptquest_ != NULL ? *acceptquest_ : *default_instance_->acceptquest_;
}
inline ::QuestData* QuestRpcOnAcceptQuestNotify::mutable_acceptquest() {
  set_has_acceptquest();
  if (acceptquest_ == NULL) acceptquest_ = new ::QuestData;
  return acceptquest_;
}
inline ::QuestData* QuestRpcOnAcceptQuestNotify::release_acceptquest() {
  clear_has_acceptquest();
  ::QuestData* temp = acceptquest_;
  acceptquest_ = NULL;
  return temp;
}
inline void QuestRpcOnAcceptQuestNotify::set_allocated_acceptquest(::QuestData* acceptquest) {
  delete acceptquest_;
  acceptquest_ = acceptquest;
  if (acceptquest) {
    set_has_acceptquest();
  } else {
    clear_has_acceptquest();
  }
}

// -------------------------------------------------------------------

// QuestRpcCompleteQuestStepAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcCompleteQuestStepAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteQuestStepAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestStepAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcCompleteQuestStepAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// optional int32 QuestStep = 2 [default = -1];
inline bool QuestRpcCompleteQuestStepAsk::has_queststep() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcCompleteQuestStepAsk::set_has_queststep() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_has_queststep() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_queststep() {
  queststep_ = -1;
  clear_has_queststep();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestStepAsk::queststep() const {
  return queststep_;
}
inline void QuestRpcCompleteQuestStepAsk::set_queststep(::google::protobuf::int32 value) {
  set_has_queststep();
  queststep_ = value;
}

// optional int32 TargetId = 4 [default = -1];
inline bool QuestRpcCompleteQuestStepAsk::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestRpcCompleteQuestStepAsk::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_targetid() {
  targetid_ = -1;
  clear_has_targetid();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestStepAsk::targetid() const {
  return targetid_;
}
inline void QuestRpcCompleteQuestStepAsk::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional int32 QuestStepEventType = 5 [default = -1];
inline bool QuestRpcCompleteQuestStepAsk::has_queststepeventtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestRpcCompleteQuestStepAsk::set_has_queststepeventtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_has_queststepeventtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestRpcCompleteQuestStepAsk::clear_queststepeventtype() {
  queststepeventtype_ = -1;
  clear_has_queststepeventtype();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestStepAsk::queststepeventtype() const {
  return queststepeventtype_;
}
inline void QuestRpcCompleteQuestStepAsk::set_queststepeventtype(::google::protobuf::int32 value) {
  set_has_queststepeventtype();
  queststepeventtype_ = value;
}

// -------------------------------------------------------------------

// QuestRpcCompleteQuestStepReply

// optional int32 Result = 1 [default = -9999];
inline bool QuestRpcCompleteQuestStepReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteQuestStepReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteQuestStepReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteQuestStepReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestStepReply::result() const {
  return result_;
}
inline void QuestRpcCompleteQuestStepReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcOnCompleteQuestNotify

// optional .QuestData QuestData = 1;
inline bool QuestRpcOnCompleteQuestNotify::has_questdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcOnCompleteQuestNotify::set_has_questdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcOnCompleteQuestNotify::clear_has_questdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcOnCompleteQuestNotify::clear_questdata() {
  if (questdata_ != NULL) questdata_->::QuestData::Clear();
  clear_has_questdata();
}
inline const ::QuestData& QuestRpcOnCompleteQuestNotify::questdata() const {
  return questdata_ != NULL ? *questdata_ : *default_instance_->questdata_;
}
inline ::QuestData* QuestRpcOnCompleteQuestNotify::mutable_questdata() {
  set_has_questdata();
  if (questdata_ == NULL) questdata_ = new ::QuestData;
  return questdata_;
}
inline ::QuestData* QuestRpcOnCompleteQuestNotify::release_questdata() {
  clear_has_questdata();
  ::QuestData* temp = questdata_;
  questdata_ = NULL;
  return temp;
}
inline void QuestRpcOnCompleteQuestNotify::set_allocated_questdata(::QuestData* questdata) {
  delete questdata_;
  questdata_ = questdata;
  if (questdata) {
    set_has_questdata();
  } else {
    clear_has_questdata();
  }
}

// -------------------------------------------------------------------

// QuestRpcCallClientLuaNotify

// optional string Str = 1;
inline bool QuestRpcCallClientLuaNotify::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCallClientLuaNotify::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCallClientLuaNotify::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCallClientLuaNotify::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& QuestRpcCallClientLuaNotify::str() const {
  return *str_;
}
inline void QuestRpcCallClientLuaNotify::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void QuestRpcCallClientLuaNotify::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void QuestRpcCallClientLuaNotify::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QuestRpcCallClientLuaNotify::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* QuestRpcCallClientLuaNotify::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QuestRpcCallClientLuaNotify::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// QuestRpcUpdateQuestNotify

// optional .QuestData Quest = 1;
inline bool QuestRpcUpdateQuestNotify::has_quest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcUpdateQuestNotify::set_has_quest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcUpdateQuestNotify::clear_has_quest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcUpdateQuestNotify::clear_quest() {
  if (quest_ != NULL) quest_->::QuestData::Clear();
  clear_has_quest();
}
inline const ::QuestData& QuestRpcUpdateQuestNotify::quest() const {
  return quest_ != NULL ? *quest_ : *default_instance_->quest_;
}
inline ::QuestData* QuestRpcUpdateQuestNotify::mutable_quest() {
  set_has_quest();
  if (quest_ == NULL) quest_ = new ::QuestData;
  return quest_;
}
inline ::QuestData* QuestRpcUpdateQuestNotify::release_quest() {
  clear_has_quest();
  ::QuestData* temp = quest_;
  quest_ = NULL;
  return temp;
}
inline void QuestRpcUpdateQuestNotify::set_allocated_quest(::QuestData* quest) {
  delete quest_;
  quest_ = quest;
  if (quest) {
    set_has_quest();
  } else {
    clear_has_quest();
  }
}

// -------------------------------------------------------------------

// QuestRpcGiveUpQuestAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcGiveUpQuestAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcGiveUpQuestAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcGiveUpQuestAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcGiveUpQuestAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcGiveUpQuestAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcGiveUpQuestAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// -------------------------------------------------------------------

// QuestRpcGiveUpQuestReply

// optional int32 Result = 1 [default = -9999];
inline bool QuestRpcGiveUpQuestReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcGiveUpQuestReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcGiveUpQuestReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcGiveUpQuestReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcGiveUpQuestReply::result() const {
  return result_;
}
inline void QuestRpcGiveUpQuestReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcCompleteQuestAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcCompleteQuestAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteQuestAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteQuestAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteQuestAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcCompleteQuestAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// optional int32 TargetId = 2 [default = -1];
inline bool QuestRpcCompleteQuestAsk::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcCompleteQuestAsk::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcCompleteQuestAsk::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcCompleteQuestAsk::clear_targetid() {
  targetid_ = -1;
  clear_has_targetid();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestAsk::targetid() const {
  return targetid_;
}
inline void QuestRpcCompleteQuestAsk::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional int32 QuestEventType = 3 [default = -1];
inline bool QuestRpcCompleteQuestAsk::has_questeventtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestRpcCompleteQuestAsk::set_has_questeventtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestRpcCompleteQuestAsk::clear_has_questeventtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestRpcCompleteQuestAsk::clear_questeventtype() {
  questeventtype_ = -1;
  clear_has_questeventtype();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestAsk::questeventtype() const {
  return questeventtype_;
}
inline void QuestRpcCompleteQuestAsk::set_questeventtype(::google::protobuf::int32 value) {
  set_has_questeventtype();
  questeventtype_ = value;
}

// -------------------------------------------------------------------

// QuestRpcCompleteQuestReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcCompleteQuestReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteQuestReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteQuestReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteQuestReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcCompleteQuestReply::result() const {
  return result_;
}
inline void QuestRpcCompleteQuestReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcCompleteAcceptChatMenuAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcCompleteAcceptChatMenuAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteAcceptChatMenuAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteAcceptChatMenuAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteAcceptChatMenuAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcCompleteAcceptChatMenuAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcCompleteAcceptChatMenuAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// -------------------------------------------------------------------

// QuestRpcCompleteAcceptChatMenuReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcCompleteAcceptChatMenuReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteAcceptChatMenuReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteAcceptChatMenuReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteAcceptChatMenuReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcCompleteAcceptChatMenuReply::result() const {
  return result_;
}
inline void QuestRpcCompleteAcceptChatMenuReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcAcceptQuestAsk

// optional int32 Type = 1 [default = -1];
inline bool QuestRpcAcceptQuestAsk::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcAcceptQuestAsk::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcAcceptQuestAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcAcceptQuestAsk::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 QuestRpcAcceptQuestAsk::type() const {
  return type_;
}
inline void QuestRpcAcceptQuestAsk::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 QuestConfigId = 2 [default = -1];
inline bool QuestRpcAcceptQuestAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcAcceptQuestAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcAcceptQuestAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcAcceptQuestAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcAcceptQuestAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcAcceptQuestAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// -------------------------------------------------------------------

// QuestRpcAcceptQuestReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcAcceptQuestReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcAcceptQuestReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcAcceptQuestReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcAcceptQuestReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcAcceptQuestReply::result() const {
  return result_;
}
inline void QuestRpcAcceptQuestReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcSyncQuestAsk

// -------------------------------------------------------------------

// QuestRpcSyncQuestReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcSyncQuestReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcSyncQuestReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcSyncQuestReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcSyncQuestReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcSyncQuestReply::result() const {
  return result_;
}
inline void QuestRpcSyncQuestReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .QuestListData QuestList = 2;
inline bool QuestRpcSyncQuestReply::has_questlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcSyncQuestReply::set_has_questlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcSyncQuestReply::clear_has_questlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcSyncQuestReply::clear_questlist() {
  if (questlist_ != NULL) questlist_->::QuestListData::Clear();
  clear_has_questlist();
}
inline const ::QuestListData& QuestRpcSyncQuestReply::questlist() const {
  return questlist_ != NULL ? *questlist_ : *default_instance_->questlist_;
}
inline ::QuestListData* QuestRpcSyncQuestReply::mutable_questlist() {
  set_has_questlist();
  if (questlist_ == NULL) questlist_ = new ::QuestListData;
  return questlist_;
}
inline ::QuestListData* QuestRpcSyncQuestReply::release_questlist() {
  clear_has_questlist();
  ::QuestListData* temp = questlist_;
  questlist_ = NULL;
  return temp;
}
inline void QuestRpcSyncQuestReply::set_allocated_questlist(::QuestListData* questlist) {
  delete questlist_;
  questlist_ = questlist;
  if (questlist) {
    set_has_questlist();
  } else {
    clear_has_questlist();
  }
}

// repeated int32 CompleteQuestIdsList = 3;
inline int QuestRpcSyncQuestReply::completequestidslist_size() const {
  return completequestidslist_.size();
}
inline void QuestRpcSyncQuestReply::clear_completequestidslist() {
  completequestidslist_.Clear();
}
inline ::google::protobuf::int32 QuestRpcSyncQuestReply::completequestidslist(int index) const {
  return completequestidslist_.Get(index);
}
inline void QuestRpcSyncQuestReply::set_completequestidslist(int index, ::google::protobuf::int32 value) {
  completequestidslist_.Set(index, value);
}
inline void QuestRpcSyncQuestReply::add_completequestidslist(::google::protobuf::int32 value) {
  completequestidslist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestRpcSyncQuestReply::completequestidslist() const {
  return completequestidslist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestRpcSyncQuestReply::mutable_completequestidslist() {
  return &completequestidslist_;
}

// repeated int32 CanAcceptQuest = 4;
inline int QuestRpcSyncQuestReply::canacceptquest_size() const {
  return canacceptquest_.size();
}
inline void QuestRpcSyncQuestReply::clear_canacceptquest() {
  canacceptquest_.Clear();
}
inline ::google::protobuf::int32 QuestRpcSyncQuestReply::canacceptquest(int index) const {
  return canacceptquest_.Get(index);
}
inline void QuestRpcSyncQuestReply::set_canacceptquest(int index, ::google::protobuf::int32 value) {
  canacceptquest_.Set(index, value);
}
inline void QuestRpcSyncQuestReply::add_canacceptquest(::google::protobuf::int32 value) {
  canacceptquest_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestRpcSyncQuestReply::canacceptquest() const {
  return canacceptquest_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestRpcSyncQuestReply::mutable_canacceptquest() {
  return &canacceptquest_;
}

// -------------------------------------------------------------------

// QuestRpcGetRewardAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcGetRewardAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcGetRewardAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcGetRewardAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcGetRewardAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcGetRewardAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcGetRewardAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// -------------------------------------------------------------------

// QuestRpcGetRewardReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcGetRewardReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcGetRewardReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcGetRewardReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcGetRewardReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcGetRewardReply::result() const {
  return result_;
}
inline void QuestRpcGetRewardReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcRemoveQuestNotifyNotify

// repeated int32 QuestConfigId = 1;
inline int QuestRpcRemoveQuestNotifyNotify::questconfigid_size() const {
  return questconfigid_.size();
}
inline void QuestRpcRemoveQuestNotifyNotify::clear_questconfigid() {
  questconfigid_.Clear();
}
inline ::google::protobuf::int32 QuestRpcRemoveQuestNotifyNotify::questconfigid(int index) const {
  return questconfigid_.Get(index);
}
inline void QuestRpcRemoveQuestNotifyNotify::set_questconfigid(int index, ::google::protobuf::int32 value) {
  questconfigid_.Set(index, value);
}
inline void QuestRpcRemoveQuestNotifyNotify::add_questconfigid(::google::protobuf::int32 value) {
  questconfigid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestRpcRemoveQuestNotifyNotify::questconfigid() const {
  return questconfigid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestRpcRemoveQuestNotifyNotify::mutable_questconfigid() {
  return &questconfigid_;
}

// -------------------------------------------------------------------

// QuestRpcGetQuestDataAsk

// repeated int32 QuestConfigId = 1;
inline int QuestRpcGetQuestDataAsk::questconfigid_size() const {
  return questconfigid_.size();
}
inline void QuestRpcGetQuestDataAsk::clear_questconfigid() {
  questconfigid_.Clear();
}
inline ::google::protobuf::int32 QuestRpcGetQuestDataAsk::questconfigid(int index) const {
  return questconfigid_.Get(index);
}
inline void QuestRpcGetQuestDataAsk::set_questconfigid(int index, ::google::protobuf::int32 value) {
  questconfigid_.Set(index, value);
}
inline void QuestRpcGetQuestDataAsk::add_questconfigid(::google::protobuf::int32 value) {
  questconfigid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestRpcGetQuestDataAsk::questconfigid() const {
  return questconfigid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestRpcGetQuestDataAsk::mutable_questconfigid() {
  return &questconfigid_;
}

// -------------------------------------------------------------------

// QuestRpcGetQuestDataReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcGetQuestDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcGetQuestDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcGetQuestDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcGetQuestDataReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcGetQuestDataReply::result() const {
  return result_;
}
inline void QuestRpcGetQuestDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .QuestData QuestList = 2;
inline int QuestRpcGetQuestDataReply::questlist_size() const {
  return questlist_.size();
}
inline void QuestRpcGetQuestDataReply::clear_questlist() {
  questlist_.Clear();
}
inline const ::QuestData& QuestRpcGetQuestDataReply::questlist(int index) const {
  return questlist_.Get(index);
}
inline ::QuestData* QuestRpcGetQuestDataReply::mutable_questlist(int index) {
  return questlist_.Mutable(index);
}
inline ::QuestData* QuestRpcGetQuestDataReply::add_questlist() {
  return questlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestData >&
QuestRpcGetQuestDataReply::questlist() const {
  return questlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestData >*
QuestRpcGetQuestDataReply::mutable_questlist() {
  return &questlist_;
}

// -------------------------------------------------------------------

// QuestRpcSyncDailyQuestAsk

// -------------------------------------------------------------------

// QuestRpcSyncDailyQuestReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcSyncDailyQuestReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcSyncDailyQuestReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcSyncDailyQuestReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcSyncDailyQuestReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcSyncDailyQuestReply::result() const {
  return result_;
}
inline void QuestRpcSyncDailyQuestReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .DailyQuestList DailyQuestList = 2;
inline bool QuestRpcSyncDailyQuestReply::has_dailyquestlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcSyncDailyQuestReply::set_has_dailyquestlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcSyncDailyQuestReply::clear_has_dailyquestlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcSyncDailyQuestReply::clear_dailyquestlist() {
  if (dailyquestlist_ != NULL) dailyquestlist_->::DailyQuestList::Clear();
  clear_has_dailyquestlist();
}
inline const ::DailyQuestList& QuestRpcSyncDailyQuestReply::dailyquestlist() const {
  return dailyquestlist_ != NULL ? *dailyquestlist_ : *default_instance_->dailyquestlist_;
}
inline ::DailyQuestList* QuestRpcSyncDailyQuestReply::mutable_dailyquestlist() {
  set_has_dailyquestlist();
  if (dailyquestlist_ == NULL) dailyquestlist_ = new ::DailyQuestList;
  return dailyquestlist_;
}
inline ::DailyQuestList* QuestRpcSyncDailyQuestReply::release_dailyquestlist() {
  clear_has_dailyquestlist();
  ::DailyQuestList* temp = dailyquestlist_;
  dailyquestlist_ = NULL;
  return temp;
}
inline void QuestRpcSyncDailyQuestReply::set_allocated_dailyquestlist(::DailyQuestList* dailyquestlist) {
  delete dailyquestlist_;
  dailyquestlist_ = dailyquestlist;
  if (dailyquestlist) {
    set_has_dailyquestlist();
  } else {
    clear_has_dailyquestlist();
  }
}

// -------------------------------------------------------------------

// QuestRpcDailyQuestUpdateNotify

// optional .DailyQuest AtivityQuestData = 1;
inline bool QuestRpcDailyQuestUpdateNotify::has_ativityquestdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcDailyQuestUpdateNotify::set_has_ativityquestdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcDailyQuestUpdateNotify::clear_has_ativityquestdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcDailyQuestUpdateNotify::clear_ativityquestdata() {
  if (ativityquestdata_ != NULL) ativityquestdata_->::DailyQuest::Clear();
  clear_has_ativityquestdata();
}
inline const ::DailyQuest& QuestRpcDailyQuestUpdateNotify::ativityquestdata() const {
  return ativityquestdata_ != NULL ? *ativityquestdata_ : *default_instance_->ativityquestdata_;
}
inline ::DailyQuest* QuestRpcDailyQuestUpdateNotify::mutable_ativityquestdata() {
  set_has_ativityquestdata();
  if (ativityquestdata_ == NULL) ativityquestdata_ = new ::DailyQuest;
  return ativityquestdata_;
}
inline ::DailyQuest* QuestRpcDailyQuestUpdateNotify::release_ativityquestdata() {
  clear_has_ativityquestdata();
  ::DailyQuest* temp = ativityquestdata_;
  ativityquestdata_ = NULL;
  return temp;
}
inline void QuestRpcDailyQuestUpdateNotify::set_allocated_ativityquestdata(::DailyQuest* ativityquestdata) {
  delete ativityquestdata_;
  ativityquestdata_ = ativityquestdata;
  if (ativityquestdata) {
    set_has_ativityquestdata();
  } else {
    clear_has_ativityquestdata();
  }
}

// -------------------------------------------------------------------

// QuestRpcConsumeItemAsk

// optional int32 QuestConfigId = 1 [default = -1];
inline bool QuestRpcConsumeItemAsk::has_questconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcConsumeItemAsk::set_has_questconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcConsumeItemAsk::clear_has_questconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcConsumeItemAsk::clear_questconfigid() {
  questconfigid_ = -1;
  clear_has_questconfigid();
}
inline ::google::protobuf::int32 QuestRpcConsumeItemAsk::questconfigid() const {
  return questconfigid_;
}
inline void QuestRpcConsumeItemAsk::set_questconfigid(::google::protobuf::int32 value) {
  set_has_questconfigid();
  questconfigid_ = value;
}

// repeated .ItemSimpleData ItemData = 2;
inline int QuestRpcConsumeItemAsk::itemdata_size() const {
  return itemdata_.size();
}
inline void QuestRpcConsumeItemAsk::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::ItemSimpleData& QuestRpcConsumeItemAsk::itemdata(int index) const {
  return itemdata_.Get(index);
}
inline ::ItemSimpleData* QuestRpcConsumeItemAsk::mutable_itemdata(int index) {
  return itemdata_.Mutable(index);
}
inline ::ItemSimpleData* QuestRpcConsumeItemAsk::add_itemdata() {
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >&
QuestRpcConsumeItemAsk::itemdata() const {
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemSimpleData >*
QuestRpcConsumeItemAsk::mutable_itemdata() {
  return &itemdata_;
}

// -------------------------------------------------------------------

// QuestRpcConsumeItemReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcConsumeItemReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcConsumeItemReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcConsumeItemReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcConsumeItemReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcConsumeItemReply::result() const {
  return result_;
}
inline void QuestRpcConsumeItemReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// QuestRpcQuestMaxListAsk

// -------------------------------------------------------------------

// QuestRpcQuestMaxListReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcQuestMaxListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcQuestMaxListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcQuestMaxListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcQuestMaxListReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcQuestMaxListReply::result() const {
  return result_;
}
inline void QuestRpcQuestMaxListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .QuestMaxQuestList QuestList = 2;
inline bool QuestRpcQuestMaxListReply::has_questlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcQuestMaxListReply::set_has_questlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcQuestMaxListReply::clear_has_questlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcQuestMaxListReply::clear_questlist() {
  if (questlist_ != NULL) questlist_->::QuestMaxQuestList::Clear();
  clear_has_questlist();
}
inline const ::QuestMaxQuestList& QuestRpcQuestMaxListReply::questlist() const {
  return questlist_ != NULL ? *questlist_ : *default_instance_->questlist_;
}
inline ::QuestMaxQuestList* QuestRpcQuestMaxListReply::mutable_questlist() {
  set_has_questlist();
  if (questlist_ == NULL) questlist_ = new ::QuestMaxQuestList;
  return questlist_;
}
inline ::QuestMaxQuestList* QuestRpcQuestMaxListReply::release_questlist() {
  clear_has_questlist();
  ::QuestMaxQuestList* temp = questlist_;
  questlist_ = NULL;
  return temp;
}
inline void QuestRpcQuestMaxListReply::set_allocated_questlist(::QuestMaxQuestList* questlist) {
  delete questlist_;
  questlist_ = questlist;
  if (questlist) {
    set_has_questlist();
  } else {
    clear_has_questlist();
  }
}

// -------------------------------------------------------------------

// QuestRpcQuestMaxListNotifyNotify

// optional .QuestMaxQuestList QuestList = 1;
inline bool QuestRpcQuestMaxListNotifyNotify::has_questlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcQuestMaxListNotifyNotify::set_has_questlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcQuestMaxListNotifyNotify::clear_has_questlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcQuestMaxListNotifyNotify::clear_questlist() {
  if (questlist_ != NULL) questlist_->::QuestMaxQuestList::Clear();
  clear_has_questlist();
}
inline const ::QuestMaxQuestList& QuestRpcQuestMaxListNotifyNotify::questlist() const {
  return questlist_ != NULL ? *questlist_ : *default_instance_->questlist_;
}
inline ::QuestMaxQuestList* QuestRpcQuestMaxListNotifyNotify::mutable_questlist() {
  set_has_questlist();
  if (questlist_ == NULL) questlist_ = new ::QuestMaxQuestList;
  return questlist_;
}
inline ::QuestMaxQuestList* QuestRpcQuestMaxListNotifyNotify::release_questlist() {
  clear_has_questlist();
  ::QuestMaxQuestList* temp = questlist_;
  questlist_ = NULL;
  return temp;
}
inline void QuestRpcQuestMaxListNotifyNotify::set_allocated_questlist(::QuestMaxQuestList* questlist) {
  delete questlist_;
  questlist_ = questlist;
  if (questlist) {
    set_has_questlist();
  } else {
    clear_has_questlist();
  }
}

// -------------------------------------------------------------------

// QuestRpcSyncCompleteQuestIdsAsk

// -------------------------------------------------------------------

// QuestRpcSyncCompleteQuestIdsReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcSyncCompleteQuestIdsReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcSyncCompleteQuestIdsReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcSyncCompleteQuestIdsReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcSyncCompleteQuestIdsReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcSyncCompleteQuestIdsReply::result() const {
  return result_;
}
inline void QuestRpcSyncCompleteQuestIdsReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .CompletedQuestList CompleteQuestIds = 2;
inline bool QuestRpcSyncCompleteQuestIdsReply::has_completequestids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcSyncCompleteQuestIdsReply::set_has_completequestids() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcSyncCompleteQuestIdsReply::clear_has_completequestids() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcSyncCompleteQuestIdsReply::clear_completequestids() {
  if (completequestids_ != NULL) completequestids_->::CompletedQuestList::Clear();
  clear_has_completequestids();
}
inline const ::CompletedQuestList& QuestRpcSyncCompleteQuestIdsReply::completequestids() const {
  return completequestids_ != NULL ? *completequestids_ : *default_instance_->completequestids_;
}
inline ::CompletedQuestList* QuestRpcSyncCompleteQuestIdsReply::mutable_completequestids() {
  set_has_completequestids();
  if (completequestids_ == NULL) completequestids_ = new ::CompletedQuestList;
  return completequestids_;
}
inline ::CompletedQuestList* QuestRpcSyncCompleteQuestIdsReply::release_completequestids() {
  clear_has_completequestids();
  ::CompletedQuestList* temp = completequestids_;
  completequestids_ = NULL;
  return temp;
}
inline void QuestRpcSyncCompleteQuestIdsReply::set_allocated_completequestids(::CompletedQuestList* completequestids) {
  delete completequestids_;
  completequestids_ = completequestids;
  if (completequestids) {
    set_has_completequestids();
  } else {
    clear_has_completequestids();
  }
}

// -------------------------------------------------------------------

// QuestRpcCompleteQuestIdsNotifyNotify

// optional .CompletedQuestList CompleteQuestIds = 1;
inline bool QuestRpcCompleteQuestIdsNotifyNotify::has_completequestids() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcCompleteQuestIdsNotifyNotify::set_has_completequestids() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcCompleteQuestIdsNotifyNotify::clear_has_completequestids() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcCompleteQuestIdsNotifyNotify::clear_completequestids() {
  if (completequestids_ != NULL) completequestids_->::CompletedQuestList::Clear();
  clear_has_completequestids();
}
inline const ::CompletedQuestList& QuestRpcCompleteQuestIdsNotifyNotify::completequestids() const {
  return completequestids_ != NULL ? *completequestids_ : *default_instance_->completequestids_;
}
inline ::CompletedQuestList* QuestRpcCompleteQuestIdsNotifyNotify::mutable_completequestids() {
  set_has_completequestids();
  if (completequestids_ == NULL) completequestids_ = new ::CompletedQuestList;
  return completequestids_;
}
inline ::CompletedQuestList* QuestRpcCompleteQuestIdsNotifyNotify::release_completequestids() {
  clear_has_completequestids();
  ::CompletedQuestList* temp = completequestids_;
  completequestids_ = NULL;
  return temp;
}
inline void QuestRpcCompleteQuestIdsNotifyNotify::set_allocated_completequestids(::CompletedQuestList* completequestids) {
  delete completequestids_;
  completequestids_ = completequestids;
  if (completequestids) {
    set_has_completequestids();
  } else {
    clear_has_completequestids();
  }
}

// -------------------------------------------------------------------

// QuestRpcEliteFinishCountAsk

// -------------------------------------------------------------------

// QuestRpcEliteFinishCountReply

// optional int32 Result = 1 [default = -1];
inline bool QuestRpcEliteFinishCountReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestRpcEliteFinishCountReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestRpcEliteFinishCountReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestRpcEliteFinishCountReply::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 QuestRpcEliteFinishCountReply::result() const {
  return result_;
}
inline void QuestRpcEliteFinishCountReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 Count = 2 [default = -1];
inline bool QuestRpcEliteFinishCountReply::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestRpcEliteFinishCountReply::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestRpcEliteFinishCountReply::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestRpcEliteFinishCountReply::clear_count() {
  count_ = -1;
  clear_has_count();
}
inline ::google::protobuf::int32 QuestRpcEliteFinishCountReply::count() const {
  return count_;
}
inline void QuestRpcEliteFinishCountReply::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// QuestRpcSyncCanAcceptQuestNotify

// repeated int32 CanAcceptQuest = 1;
inline int QuestRpcSyncCanAcceptQuestNotify::canacceptquest_size() const {
  return canacceptquest_.size();
}
inline void QuestRpcSyncCanAcceptQuestNotify::clear_canacceptquest() {
  canacceptquest_.Clear();
}
inline ::google::protobuf::int32 QuestRpcSyncCanAcceptQuestNotify::canacceptquest(int index) const {
  return canacceptquest_.Get(index);
}
inline void QuestRpcSyncCanAcceptQuestNotify::set_canacceptquest(int index, ::google::protobuf::int32 value) {
  canacceptquest_.Set(index, value);
}
inline void QuestRpcSyncCanAcceptQuestNotify::add_canacceptquest(::google::protobuf::int32 value) {
  canacceptquest_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestRpcSyncCanAcceptQuestNotify::canacceptquest() const {
  return canacceptquest_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestRpcSyncCanAcceptQuestNotify::mutable_canacceptquest() {
  return &canacceptquest_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_QuestRpc_2eproto__INCLUDED
