// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SkillRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SkillRpcSkillInfoAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcSkillInfoAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcSkillInfoReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcSkillInfoReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcUpdateSkillInfoAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcUpdateSkillInfoAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcUpdateSkillInfoReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcUpdateSkillInfoReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcLevelUpSkillPosAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcLevelUpSkillPosAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcLevelUpSkillPosReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcLevelUpSkillPosReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcSkillLevelInfoAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcSkillLevelInfoAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillRpcSkillLevelInfoReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillRpcSkillLevelInfoReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SkillRpc_2eproto() {
  protobuf_AddDesc_SkillRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SkillRpc.proto");
  GOOGLE_CHECK(file != NULL);
  SkillRpcSkillInfoAsk_descriptor_ = file->message_type(0);
  static const int SkillRpcSkillInfoAsk_offsets_[1] = {
  };
  SkillRpcSkillInfoAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcSkillInfoAsk_descriptor_,
      SkillRpcSkillInfoAsk::default_instance_,
      SkillRpcSkillInfoAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcSkillInfoAsk));
  SkillRpcSkillInfoReply_descriptor_ = file->message_type(1);
  static const int SkillRpcSkillInfoReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoReply, curusemastery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoReply, professioninfos_),
  };
  SkillRpcSkillInfoReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcSkillInfoReply_descriptor_,
      SkillRpcSkillInfoReply::default_instance_,
      SkillRpcSkillInfoReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillInfoReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcSkillInfoReply));
  SkillRpcUpdateSkillInfoAsk_descriptor_ = file->message_type(2);
  static const int SkillRpcUpdateSkillInfoAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoAsk, professioninfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoAsk, curusemastery_),
  };
  SkillRpcUpdateSkillInfoAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcUpdateSkillInfoAsk_descriptor_,
      SkillRpcUpdateSkillInfoAsk::default_instance_,
      SkillRpcUpdateSkillInfoAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcUpdateSkillInfoAsk));
  SkillRpcUpdateSkillInfoReply_descriptor_ = file->message_type(3);
  static const int SkillRpcUpdateSkillInfoReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoReply, curusemastery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoReply, professioninfos_),
  };
  SkillRpcUpdateSkillInfoReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcUpdateSkillInfoReply_descriptor_,
      SkillRpcUpdateSkillInfoReply::default_instance_,
      SkillRpcUpdateSkillInfoReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUpdateSkillInfoReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcUpdateSkillInfoReply));
  SkillRpcLevelUpSkillPosAsk_descriptor_ = file->message_type(4);
  static const int SkillRpcLevelUpSkillPosAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosAsk, skillpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosAsk, isauto_),
  };
  SkillRpcLevelUpSkillPosAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcLevelUpSkillPosAsk_descriptor_,
      SkillRpcLevelUpSkillPosAsk::default_instance_,
      SkillRpcLevelUpSkillPosAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcLevelUpSkillPosAsk));
  SkillRpcLevelUpSkillPosReply_descriptor_ = file->message_type(5);
  static const int SkillRpcLevelUpSkillPosReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosReply, posinfo_),
  };
  SkillRpcLevelUpSkillPosReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcLevelUpSkillPosReply_descriptor_,
      SkillRpcLevelUpSkillPosReply::default_instance_,
      SkillRpcLevelUpSkillPosReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLevelUpSkillPosReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcLevelUpSkillPosReply));
  SkillRpcSkillLevelInfoAsk_descriptor_ = file->message_type(6);
  static const int SkillRpcSkillLevelInfoAsk_offsets_[1] = {
  };
  SkillRpcSkillLevelInfoAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcSkillLevelInfoAsk_descriptor_,
      SkillRpcSkillLevelInfoAsk::default_instance_,
      SkillRpcSkillLevelInfoAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcSkillLevelInfoAsk));
  SkillRpcSkillLevelInfoReply_descriptor_ = file->message_type(7);
  static const int SkillRpcSkillLevelInfoReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoReply, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoReply, posinfo_),
  };
  SkillRpcSkillLevelInfoReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillRpcSkillLevelInfoReply_descriptor_,
      SkillRpcSkillLevelInfoReply::default_instance_,
      SkillRpcSkillLevelInfoReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSkillLevelInfoReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillRpcSkillLevelInfoReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SkillRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcSkillInfoAsk_descriptor_, &SkillRpcSkillInfoAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcSkillInfoReply_descriptor_, &SkillRpcSkillInfoReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcUpdateSkillInfoAsk_descriptor_, &SkillRpcUpdateSkillInfoAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcUpdateSkillInfoReply_descriptor_, &SkillRpcUpdateSkillInfoReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcLevelUpSkillPosAsk_descriptor_, &SkillRpcLevelUpSkillPosAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcLevelUpSkillPosReply_descriptor_, &SkillRpcLevelUpSkillPosReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcSkillLevelInfoAsk_descriptor_, &SkillRpcSkillLevelInfoAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillRpcSkillLevelInfoReply_descriptor_, &SkillRpcSkillLevelInfoReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SkillRpc_2eproto() {
  delete SkillRpcSkillInfoAsk::default_instance_;
  delete SkillRpcSkillInfoAsk_reflection_;
  delete SkillRpcSkillInfoReply::default_instance_;
  delete SkillRpcSkillInfoReply_reflection_;
  delete SkillRpcUpdateSkillInfoAsk::default_instance_;
  delete SkillRpcUpdateSkillInfoAsk_reflection_;
  delete SkillRpcUpdateSkillInfoReply::default_instance_;
  delete SkillRpcUpdateSkillInfoReply_reflection_;
  delete SkillRpcLevelUpSkillPosAsk::default_instance_;
  delete SkillRpcLevelUpSkillPosAsk_reflection_;
  delete SkillRpcLevelUpSkillPosReply::default_instance_;
  delete SkillRpcLevelUpSkillPosReply_reflection_;
  delete SkillRpcSkillLevelInfoAsk::default_instance_;
  delete SkillRpcSkillLevelInfoAsk_reflection_;
  delete SkillRpcSkillLevelInfoReply::default_instance_;
  delete SkillRpcSkillLevelInfoReply_reflection_;
}

void protobuf_AddDesc_SkillRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016SkillRpc.proto\032\022PublicStruct.proto\"\026\n\024"
    "SkillRpcSkillInfoAsk\"q\n\026SkillRpcSkillInf"
    "oReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\031\n\rCurUseMast"
    "ery\030\002 \001(\005:\002-1\022(\n\017ProfessionInfos\030\005 \003(\0132\017"
    ".ProfessionInfo\"a\n\032SkillRpcUpdateSkillIn"
    "foAsk\022(\n\017ProfessionInfos\030\003 \003(\0132\017.Profess"
    "ionInfo\022\031\n\rCurUseMastery\030\004 \001(\005:\002-1\"w\n\034Sk"
    "illRpcUpdateSkillInfoReply\022\022\n\006Result\030\001 \001"
    "(\005:\002-1\022\031\n\rCurUseMastery\030\002 \001(\005:\002-1\022(\n\017Pro"
    "fessionInfos\030\004 \003(\0132\017.ProfessionInfo\"H\n\032S"
    "killRpcLevelUpSkillPosAsk\022\023\n\010SkillPos\030\001 "
    "\001(\005:\0010\022\025\n\006IsAuto\030\002 \001(\010:\005false\"R\n\034SkillRp"
    "cLevelUpSkillPosReply\022\022\n\006Result\030\001 \001(\005:\002-"
    "1\022\036\n\007PosInfo\030\010 \003(\0132\r.SkillPosInfo\"\033\n\031Ski"
    "llRpcSkillLevelInfoAsk\"Q\n\033SkillRpcSkillL"
    "evelInfoReply\022\022\n\006Result\030\001 \001(\005:\002-1\022\036\n\007Pos"
    "Info\030\002 \003(\0132\r.SkillPosInfo", 665);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SkillRpc.proto", &protobuf_RegisterTypes);
  SkillRpcSkillInfoAsk::default_instance_ = new SkillRpcSkillInfoAsk();
  SkillRpcSkillInfoReply::default_instance_ = new SkillRpcSkillInfoReply();
  SkillRpcUpdateSkillInfoAsk::default_instance_ = new SkillRpcUpdateSkillInfoAsk();
  SkillRpcUpdateSkillInfoReply::default_instance_ = new SkillRpcUpdateSkillInfoReply();
  SkillRpcLevelUpSkillPosAsk::default_instance_ = new SkillRpcLevelUpSkillPosAsk();
  SkillRpcLevelUpSkillPosReply::default_instance_ = new SkillRpcLevelUpSkillPosReply();
  SkillRpcSkillLevelInfoAsk::default_instance_ = new SkillRpcSkillLevelInfoAsk();
  SkillRpcSkillLevelInfoReply::default_instance_ = new SkillRpcSkillLevelInfoReply();
  SkillRpcSkillInfoAsk::default_instance_->InitAsDefaultInstance();
  SkillRpcSkillInfoReply::default_instance_->InitAsDefaultInstance();
  SkillRpcUpdateSkillInfoAsk::default_instance_->InitAsDefaultInstance();
  SkillRpcUpdateSkillInfoReply::default_instance_->InitAsDefaultInstance();
  SkillRpcLevelUpSkillPosAsk::default_instance_->InitAsDefaultInstance();
  SkillRpcLevelUpSkillPosReply::default_instance_->InitAsDefaultInstance();
  SkillRpcSkillLevelInfoAsk::default_instance_->InitAsDefaultInstance();
  SkillRpcSkillLevelInfoReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SkillRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SkillRpc_2eproto {
  StaticDescriptorInitializer_SkillRpc_2eproto() {
    protobuf_AddDesc_SkillRpc_2eproto();
  }
} static_descriptor_initializer_SkillRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

SkillRpcSkillInfoAsk::SkillRpcSkillInfoAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcSkillInfoAsk::InitAsDefaultInstance() {
}

SkillRpcSkillInfoAsk::SkillRpcSkillInfoAsk(const SkillRpcSkillInfoAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcSkillInfoAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcSkillInfoAsk::~SkillRpcSkillInfoAsk() {
  SharedDtor();
}

void SkillRpcSkillInfoAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcSkillInfoAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSkillInfoAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcSkillInfoAsk_descriptor_;
}

const SkillRpcSkillInfoAsk& SkillRpcSkillInfoAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcSkillInfoAsk* SkillRpcSkillInfoAsk::default_instance_ = NULL;

SkillRpcSkillInfoAsk* SkillRpcSkillInfoAsk::New() const {
  return new SkillRpcSkillInfoAsk;
}

void SkillRpcSkillInfoAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcSkillInfoAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void SkillRpcSkillInfoAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcSkillInfoAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcSkillInfoAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSkillInfoAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcSkillInfoAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcSkillInfoAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcSkillInfoAsk::MergeFrom(const SkillRpcSkillInfoAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcSkillInfoAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSkillInfoAsk::CopyFrom(const SkillRpcSkillInfoAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSkillInfoAsk::IsInitialized() const {

  return true;
}

void SkillRpcSkillInfoAsk::Swap(SkillRpcSkillInfoAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcSkillInfoAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcSkillInfoAsk_descriptor_;
  metadata.reflection = SkillRpcSkillInfoAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcSkillInfoReply::kResultFieldNumber;
const int SkillRpcSkillInfoReply::kCurUseMasteryFieldNumber;
const int SkillRpcSkillInfoReply::kProfessionInfosFieldNumber;
#endif  // !_MSC_VER

SkillRpcSkillInfoReply::SkillRpcSkillInfoReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcSkillInfoReply::InitAsDefaultInstance() {
}

SkillRpcSkillInfoReply::SkillRpcSkillInfoReply(const SkillRpcSkillInfoReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcSkillInfoReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  curusemastery_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcSkillInfoReply::~SkillRpcSkillInfoReply() {
  SharedDtor();
}

void SkillRpcSkillInfoReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcSkillInfoReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSkillInfoReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcSkillInfoReply_descriptor_;
}

const SkillRpcSkillInfoReply& SkillRpcSkillInfoReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcSkillInfoReply* SkillRpcSkillInfoReply::default_instance_ = NULL;

SkillRpcSkillInfoReply* SkillRpcSkillInfoReply::New() const {
  return new SkillRpcSkillInfoReply;
}

void SkillRpcSkillInfoReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    curusemastery_ = -1;
  }
  professioninfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcSkillInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_CurUseMastery;
        break;
      }

      // optional int32 CurUseMastery = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CurUseMastery:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curusemastery_)));
          set_has_curusemastery();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ProfessionInfos;
        break;
      }

      // repeated .ProfessionInfo ProfessionInfos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ProfessionInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_professioninfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ProfessionInfos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcSkillInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 CurUseMastery = 2 [default = -1];
  if (has_curusemastery()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->curusemastery(), output);
  }

  // repeated .ProfessionInfo ProfessionInfos = 5;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->professioninfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcSkillInfoReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 CurUseMastery = 2 [default = -1];
  if (has_curusemastery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->curusemastery(), target);
  }

  // repeated .ProfessionInfo ProfessionInfos = 5;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->professioninfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcSkillInfoReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 CurUseMastery = 2 [default = -1];
    if (has_curusemastery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curusemastery());
    }

  }
  // repeated .ProfessionInfo ProfessionInfos = 5;
  total_size += 1 * this->professioninfos_size();
  for (int i = 0; i < this->professioninfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->professioninfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSkillInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcSkillInfoReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcSkillInfoReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcSkillInfoReply::MergeFrom(const SkillRpcSkillInfoReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  professioninfos_.MergeFrom(from.professioninfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_curusemastery()) {
      set_curusemastery(from.curusemastery());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcSkillInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSkillInfoReply::CopyFrom(const SkillRpcSkillInfoReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSkillInfoReply::IsInitialized() const {

  return true;
}

void SkillRpcSkillInfoReply::Swap(SkillRpcSkillInfoReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(curusemastery_, other->curusemastery_);
    professioninfos_.Swap(&other->professioninfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcSkillInfoReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcSkillInfoReply_descriptor_;
  metadata.reflection = SkillRpcSkillInfoReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcUpdateSkillInfoAsk::kProfessionInfosFieldNumber;
const int SkillRpcUpdateSkillInfoAsk::kCurUseMasteryFieldNumber;
#endif  // !_MSC_VER

SkillRpcUpdateSkillInfoAsk::SkillRpcUpdateSkillInfoAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcUpdateSkillInfoAsk::InitAsDefaultInstance() {
}

SkillRpcUpdateSkillInfoAsk::SkillRpcUpdateSkillInfoAsk(const SkillRpcUpdateSkillInfoAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcUpdateSkillInfoAsk::SharedCtor() {
  _cached_size_ = 0;
  curusemastery_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcUpdateSkillInfoAsk::~SkillRpcUpdateSkillInfoAsk() {
  SharedDtor();
}

void SkillRpcUpdateSkillInfoAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcUpdateSkillInfoAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcUpdateSkillInfoAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcUpdateSkillInfoAsk_descriptor_;
}

const SkillRpcUpdateSkillInfoAsk& SkillRpcUpdateSkillInfoAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcUpdateSkillInfoAsk* SkillRpcUpdateSkillInfoAsk::default_instance_ = NULL;

SkillRpcUpdateSkillInfoAsk* SkillRpcUpdateSkillInfoAsk::New() const {
  return new SkillRpcUpdateSkillInfoAsk;
}

void SkillRpcUpdateSkillInfoAsk::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    curusemastery_ = -1;
  }
  professioninfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcUpdateSkillInfoAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProfessionInfo ProfessionInfos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ProfessionInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_professioninfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ProfessionInfos;
        if (input->ExpectTag(32)) goto parse_CurUseMastery;
        break;
      }

      // optional int32 CurUseMastery = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CurUseMastery:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curusemastery_)));
          set_has_curusemastery();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcUpdateSkillInfoAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProfessionInfo ProfessionInfos = 3;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->professioninfos(i), output);
  }

  // optional int32 CurUseMastery = 4 [default = -1];
  if (has_curusemastery()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->curusemastery(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcUpdateSkillInfoAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProfessionInfo ProfessionInfos = 3;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->professioninfos(i), target);
  }

  // optional int32 CurUseMastery = 4 [default = -1];
  if (has_curusemastery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->curusemastery(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcUpdateSkillInfoAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 CurUseMastery = 4 [default = -1];
    if (has_curusemastery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curusemastery());
    }

  }
  // repeated .ProfessionInfo ProfessionInfos = 3;
  total_size += 1 * this->professioninfos_size();
  for (int i = 0; i < this->professioninfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->professioninfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcUpdateSkillInfoAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcUpdateSkillInfoAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcUpdateSkillInfoAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcUpdateSkillInfoAsk::MergeFrom(const SkillRpcUpdateSkillInfoAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  professioninfos_.MergeFrom(from.professioninfos_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_curusemastery()) {
      set_curusemastery(from.curusemastery());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcUpdateSkillInfoAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcUpdateSkillInfoAsk::CopyFrom(const SkillRpcUpdateSkillInfoAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcUpdateSkillInfoAsk::IsInitialized() const {

  return true;
}

void SkillRpcUpdateSkillInfoAsk::Swap(SkillRpcUpdateSkillInfoAsk* other) {
  if (other != this) {
    professioninfos_.Swap(&other->professioninfos_);
    std::swap(curusemastery_, other->curusemastery_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcUpdateSkillInfoAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcUpdateSkillInfoAsk_descriptor_;
  metadata.reflection = SkillRpcUpdateSkillInfoAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcUpdateSkillInfoReply::kResultFieldNumber;
const int SkillRpcUpdateSkillInfoReply::kCurUseMasteryFieldNumber;
const int SkillRpcUpdateSkillInfoReply::kProfessionInfosFieldNumber;
#endif  // !_MSC_VER

SkillRpcUpdateSkillInfoReply::SkillRpcUpdateSkillInfoReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcUpdateSkillInfoReply::InitAsDefaultInstance() {
}

SkillRpcUpdateSkillInfoReply::SkillRpcUpdateSkillInfoReply(const SkillRpcUpdateSkillInfoReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcUpdateSkillInfoReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  curusemastery_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcUpdateSkillInfoReply::~SkillRpcUpdateSkillInfoReply() {
  SharedDtor();
}

void SkillRpcUpdateSkillInfoReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcUpdateSkillInfoReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcUpdateSkillInfoReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcUpdateSkillInfoReply_descriptor_;
}

const SkillRpcUpdateSkillInfoReply& SkillRpcUpdateSkillInfoReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcUpdateSkillInfoReply* SkillRpcUpdateSkillInfoReply::default_instance_ = NULL;

SkillRpcUpdateSkillInfoReply* SkillRpcUpdateSkillInfoReply::New() const {
  return new SkillRpcUpdateSkillInfoReply;
}

void SkillRpcUpdateSkillInfoReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
    curusemastery_ = -1;
  }
  professioninfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcUpdateSkillInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_CurUseMastery;
        break;
      }

      // optional int32 CurUseMastery = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CurUseMastery:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curusemastery_)));
          set_has_curusemastery();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ProfessionInfos;
        break;
      }

      // repeated .ProfessionInfo ProfessionInfos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ProfessionInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_professioninfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ProfessionInfos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcUpdateSkillInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 CurUseMastery = 2 [default = -1];
  if (has_curusemastery()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->curusemastery(), output);
  }

  // repeated .ProfessionInfo ProfessionInfos = 4;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->professioninfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcUpdateSkillInfoReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 CurUseMastery = 2 [default = -1];
  if (has_curusemastery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->curusemastery(), target);
  }

  // repeated .ProfessionInfo ProfessionInfos = 4;
  for (int i = 0; i < this->professioninfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->professioninfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcUpdateSkillInfoReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 CurUseMastery = 2 [default = -1];
    if (has_curusemastery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curusemastery());
    }

  }
  // repeated .ProfessionInfo ProfessionInfos = 4;
  total_size += 1 * this->professioninfos_size();
  for (int i = 0; i < this->professioninfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->professioninfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcUpdateSkillInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcUpdateSkillInfoReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcUpdateSkillInfoReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcUpdateSkillInfoReply::MergeFrom(const SkillRpcUpdateSkillInfoReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  professioninfos_.MergeFrom(from.professioninfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_curusemastery()) {
      set_curusemastery(from.curusemastery());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcUpdateSkillInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcUpdateSkillInfoReply::CopyFrom(const SkillRpcUpdateSkillInfoReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcUpdateSkillInfoReply::IsInitialized() const {

  return true;
}

void SkillRpcUpdateSkillInfoReply::Swap(SkillRpcUpdateSkillInfoReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(curusemastery_, other->curusemastery_);
    professioninfos_.Swap(&other->professioninfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcUpdateSkillInfoReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcUpdateSkillInfoReply_descriptor_;
  metadata.reflection = SkillRpcUpdateSkillInfoReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcLevelUpSkillPosAsk::kSkillPosFieldNumber;
const int SkillRpcLevelUpSkillPosAsk::kIsAutoFieldNumber;
#endif  // !_MSC_VER

SkillRpcLevelUpSkillPosAsk::SkillRpcLevelUpSkillPosAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcLevelUpSkillPosAsk::InitAsDefaultInstance() {
}

SkillRpcLevelUpSkillPosAsk::SkillRpcLevelUpSkillPosAsk(const SkillRpcLevelUpSkillPosAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcLevelUpSkillPosAsk::SharedCtor() {
  _cached_size_ = 0;
  skillpos_ = 0;
  isauto_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcLevelUpSkillPosAsk::~SkillRpcLevelUpSkillPosAsk() {
  SharedDtor();
}

void SkillRpcLevelUpSkillPosAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcLevelUpSkillPosAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLevelUpSkillPosAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcLevelUpSkillPosAsk_descriptor_;
}

const SkillRpcLevelUpSkillPosAsk& SkillRpcLevelUpSkillPosAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcLevelUpSkillPosAsk* SkillRpcLevelUpSkillPosAsk::default_instance_ = NULL;

SkillRpcLevelUpSkillPosAsk* SkillRpcLevelUpSkillPosAsk::New() const {
  return new SkillRpcLevelUpSkillPosAsk;
}

void SkillRpcLevelUpSkillPosAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillpos_ = 0;
    isauto_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcLevelUpSkillPosAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SkillPos = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillpos_)));
          set_has_skillpos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_IsAuto;
        break;
      }

      // optional bool IsAuto = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsAuto:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isauto_)));
          set_has_isauto();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcLevelUpSkillPosAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 SkillPos = 1 [default = 0];
  if (has_skillpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillpos(), output);
  }

  // optional bool IsAuto = 2 [default = false];
  if (has_isauto()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isauto(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcLevelUpSkillPosAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 SkillPos = 1 [default = 0];
  if (has_skillpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillpos(), target);
  }

  // optional bool IsAuto = 2 [default = false];
  if (has_isauto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isauto(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcLevelUpSkillPosAsk::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SkillPos = 1 [default = 0];
    if (has_skillpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillpos());
    }

    // optional bool IsAuto = 2 [default = false];
    if (has_isauto()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLevelUpSkillPosAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcLevelUpSkillPosAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcLevelUpSkillPosAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcLevelUpSkillPosAsk::MergeFrom(const SkillRpcLevelUpSkillPosAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillpos()) {
      set_skillpos(from.skillpos());
    }
    if (from.has_isauto()) {
      set_isauto(from.isauto());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcLevelUpSkillPosAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLevelUpSkillPosAsk::CopyFrom(const SkillRpcLevelUpSkillPosAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLevelUpSkillPosAsk::IsInitialized() const {

  return true;
}

void SkillRpcLevelUpSkillPosAsk::Swap(SkillRpcLevelUpSkillPosAsk* other) {
  if (other != this) {
    std::swap(skillpos_, other->skillpos_);
    std::swap(isauto_, other->isauto_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcLevelUpSkillPosAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcLevelUpSkillPosAsk_descriptor_;
  metadata.reflection = SkillRpcLevelUpSkillPosAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcLevelUpSkillPosReply::kResultFieldNumber;
const int SkillRpcLevelUpSkillPosReply::kPosInfoFieldNumber;
#endif  // !_MSC_VER

SkillRpcLevelUpSkillPosReply::SkillRpcLevelUpSkillPosReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcLevelUpSkillPosReply::InitAsDefaultInstance() {
}

SkillRpcLevelUpSkillPosReply::SkillRpcLevelUpSkillPosReply(const SkillRpcLevelUpSkillPosReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcLevelUpSkillPosReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcLevelUpSkillPosReply::~SkillRpcLevelUpSkillPosReply() {
  SharedDtor();
}

void SkillRpcLevelUpSkillPosReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcLevelUpSkillPosReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLevelUpSkillPosReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcLevelUpSkillPosReply_descriptor_;
}

const SkillRpcLevelUpSkillPosReply& SkillRpcLevelUpSkillPosReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcLevelUpSkillPosReply* SkillRpcLevelUpSkillPosReply::default_instance_ = NULL;

SkillRpcLevelUpSkillPosReply* SkillRpcLevelUpSkillPosReply::New() const {
  return new SkillRpcLevelUpSkillPosReply;
}

void SkillRpcLevelUpSkillPosReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  posinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcLevelUpSkillPosReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_PosInfo;
        break;
      }

      // repeated .SkillPosInfo PosInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PosInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_posinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_PosInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcLevelUpSkillPosReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .SkillPosInfo PosInfo = 8;
  for (int i = 0; i < this->posinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->posinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcLevelUpSkillPosReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .SkillPosInfo PosInfo = 8;
  for (int i = 0; i < this->posinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->posinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcLevelUpSkillPosReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .SkillPosInfo PosInfo = 8;
  total_size += 1 * this->posinfo_size();
  for (int i = 0; i < this->posinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->posinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLevelUpSkillPosReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcLevelUpSkillPosReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcLevelUpSkillPosReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcLevelUpSkillPosReply::MergeFrom(const SkillRpcLevelUpSkillPosReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  posinfo_.MergeFrom(from.posinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcLevelUpSkillPosReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLevelUpSkillPosReply::CopyFrom(const SkillRpcLevelUpSkillPosReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLevelUpSkillPosReply::IsInitialized() const {

  return true;
}

void SkillRpcLevelUpSkillPosReply::Swap(SkillRpcLevelUpSkillPosReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    posinfo_.Swap(&other->posinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcLevelUpSkillPosReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcLevelUpSkillPosReply_descriptor_;
  metadata.reflection = SkillRpcLevelUpSkillPosReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

SkillRpcSkillLevelInfoAsk::SkillRpcSkillLevelInfoAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcSkillLevelInfoAsk::InitAsDefaultInstance() {
}

SkillRpcSkillLevelInfoAsk::SkillRpcSkillLevelInfoAsk(const SkillRpcSkillLevelInfoAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcSkillLevelInfoAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcSkillLevelInfoAsk::~SkillRpcSkillLevelInfoAsk() {
  SharedDtor();
}

void SkillRpcSkillLevelInfoAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcSkillLevelInfoAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSkillLevelInfoAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcSkillLevelInfoAsk_descriptor_;
}

const SkillRpcSkillLevelInfoAsk& SkillRpcSkillLevelInfoAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcSkillLevelInfoAsk* SkillRpcSkillLevelInfoAsk::default_instance_ = NULL;

SkillRpcSkillLevelInfoAsk* SkillRpcSkillLevelInfoAsk::New() const {
  return new SkillRpcSkillLevelInfoAsk;
}

void SkillRpcSkillLevelInfoAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcSkillLevelInfoAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void SkillRpcSkillLevelInfoAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcSkillLevelInfoAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcSkillLevelInfoAsk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSkillLevelInfoAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcSkillLevelInfoAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcSkillLevelInfoAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcSkillLevelInfoAsk::MergeFrom(const SkillRpcSkillLevelInfoAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcSkillLevelInfoAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSkillLevelInfoAsk::CopyFrom(const SkillRpcSkillLevelInfoAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSkillLevelInfoAsk::IsInitialized() const {

  return true;
}

void SkillRpcSkillLevelInfoAsk::Swap(SkillRpcSkillLevelInfoAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcSkillLevelInfoAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcSkillLevelInfoAsk_descriptor_;
  metadata.reflection = SkillRpcSkillLevelInfoAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillRpcSkillLevelInfoReply::kResultFieldNumber;
const int SkillRpcSkillLevelInfoReply::kPosInfoFieldNumber;
#endif  // !_MSC_VER

SkillRpcSkillLevelInfoReply::SkillRpcSkillLevelInfoReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillRpcSkillLevelInfoReply::InitAsDefaultInstance() {
}

SkillRpcSkillLevelInfoReply::SkillRpcSkillLevelInfoReply(const SkillRpcSkillLevelInfoReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillRpcSkillLevelInfoReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillRpcSkillLevelInfoReply::~SkillRpcSkillLevelInfoReply() {
  SharedDtor();
}

void SkillRpcSkillLevelInfoReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillRpcSkillLevelInfoReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSkillLevelInfoReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillRpcSkillLevelInfoReply_descriptor_;
}

const SkillRpcSkillLevelInfoReply& SkillRpcSkillLevelInfoReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SkillRpc_2eproto();
  return *default_instance_;
}

SkillRpcSkillLevelInfoReply* SkillRpcSkillLevelInfoReply::default_instance_ = NULL;

SkillRpcSkillLevelInfoReply* SkillRpcSkillLevelInfoReply::New() const {
  return new SkillRpcSkillLevelInfoReply;
}

void SkillRpcSkillLevelInfoReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = -1;
  }
  posinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillRpcSkillLevelInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Result = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_PosInfo;
        break;
      }

      // repeated .SkillPosInfo PosInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PosInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_posinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_PosInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillRpcSkillLevelInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .SkillPosInfo PosInfo = 2;
  for (int i = 0; i < this->posinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->posinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillRpcSkillLevelInfoReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .SkillPosInfo PosInfo = 2;
  for (int i = 0; i < this->posinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->posinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillRpcSkillLevelInfoReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .SkillPosInfo PosInfo = 2;
  total_size += 1 * this->posinfo_size();
  for (int i = 0; i < this->posinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->posinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSkillLevelInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillRpcSkillLevelInfoReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillRpcSkillLevelInfoReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillRpcSkillLevelInfoReply::MergeFrom(const SkillRpcSkillLevelInfoReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  posinfo_.MergeFrom(from.posinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillRpcSkillLevelInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSkillLevelInfoReply::CopyFrom(const SkillRpcSkillLevelInfoReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSkillLevelInfoReply::IsInitialized() const {

  return true;
}

void SkillRpcSkillLevelInfoReply::Swap(SkillRpcSkillLevelInfoReply* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    posinfo_.Swap(&other->posinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillRpcSkillLevelInfoReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillRpcSkillLevelInfoReply_descriptor_;
  metadata.reflection = SkillRpcSkillLevelInfoReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
