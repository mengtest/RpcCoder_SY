<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="e:\installapplication\microsoft visual studio\2017\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="F:\Github\RpcCoder_SY\bin\Debug\RpcCoder.exe">
   <Modules>
    <Module Name="rpccoder.exe">
     <Messages>
      <Message TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016" Status="Active" Created="2017-10-27 04:12:25Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">向 'RpcCoder.exe' 中添加 AssemblyVersion 特性。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Editor">
       <Types>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2017-10-27 04:12:25Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="F:\Github\RpcCoder_SY\Editor" File="Form1.cs" Line="1268">'Form1.InitializeComponent()' 调入具有 LinkDemand 的 'PropertyGrid.LineColor.set(Color)'。通过此调用，'PropertyGrid.LineColor.set(Color)' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'Form1.InitializeComponent()'&#xD;&#xA;   -&gt;'Form1.InitializeComponent()'&#xD;&#xA;   -&gt;'Form1.Form1()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="F:\Github\RpcCoder_SY\Editor" File="Form1.cs" Line="1268">'Form1.InitializeComponent()' 调入具有 LinkDemand 的 'PropertyGrid.PropertyValueChanged.add(PropertyValueChangedEventHandler)'。通过此调用，'PropertyGrid.PropertyValueChanged.add(PropertyValueChangedEventHandler)' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'Form1.InitializeComponent()'&#xD;&#xA;   -&gt;'Form1.InitializeComponent()'&#xD;&#xA;   -&gt;'Form1.Form1()'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultilineTextEditor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2017-10-27 04:12:25Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError">'MultilineTextEditor.MultilineTextEditor()' 调入具有 LinkDemand 的 'UITypeEditor.UITypeEditor()'。通过此调用，'UITypeEditor.UITypeEditor()' 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: &#xD;&#xA;   -&gt;'MultilineTextEditor.MultilineTextEditor()'&#xD;&#xA;   -&gt;'MultilineTextEditor.MultilineTextEditor()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2017-10-27 04:12:25Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="F:\Github\RpcCoder_SY\Editor" File="MultilineTextEditor.cs" Line="12">向 'MultilineTextEditor.EditValue(ITypeDescriptorContext, IServiceProvider, object)' 添加下列安全特性以匹配基方法 'UITypeEditor.EditValue(ITypeDescriptorContext, IServiceProvider, object)' 上的 LinkDemand: [PermissionSet(SecurityAction.LinkDemand, Name = "FullTrust")]。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2017-10-27 04:12:25Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="F:\Github\RpcCoder_SY\Editor" File="MultilineTextEditor.cs" Line="37">向 'MultilineTextEditor.GetEditStyle(ITypeDescriptorContext)' 添加下列安全特性以匹配基方法 'UITypeEditor.GetEditStyle(ITypeDescriptorContext)' 上的 LinkDemand: [PermissionSet(SecurityAction.LinkDemand, Name = "FullTrust")]。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>不要使用链接请求间接公开方法</Name>
   <Description>不要使用不执行安全性检查的方法来包装受 LinkDemand 保护的方法。LinkDemand 检查直接调用方的权限而不是调用堆栈中所有调用方的权限。在这种情况下，将检查包装器方法的权限。如果包装器方法本身不检查调用堆栈中位置较高的调用方的权限，则尽管恶意代码没有足够的权限，但它仍可能能够执行被包装的函数。</Description>
   <Resolution Name="Default">{0} 调入具有 LinkDemand 的 {1}。通过此调用，{1} 被间接公开给用户代码。检查以下可能公开避开安全保护的方法的调用堆栈: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016">
   <Name>用 AssemblyVersionAttribute 标记程序集</Name>
   <Description>程序集应使用版本号。版本号被视为程序集标识的一部分。通过 AssemblyVersion 特性来应用版本控制。</Description>
   <Resolution Name="Default">向 {0} 中添加 AssemblyVersion 特性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182155.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123">
   <Name>重写链接请求应与基相同</Name>
   <Description>在很多情况下，如果一个虚方法具有 LinkDemand，则它的任何重写方法都应具有 LinkDemand，同样，如果一个重写方法具有 LinkDemand，则被重写的虚方法也应具有 LinkDemand。由于调用方可能显式调用虚方法的任何重写方法，因此这些方法应具有相同的 LinkDemand 状态，否则应检查它们。由于调用方可能使用接口类型的引用来访问方法，因此上述规则也适用于对属于接口实现的方法进行的 LinkDemand 安全性检查。</Description>
   <Resolution Name="BaseOnly">向 {0} 添加下列安全特性以匹配基方法 {1} 上的 LinkDemand: {2}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182305(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
