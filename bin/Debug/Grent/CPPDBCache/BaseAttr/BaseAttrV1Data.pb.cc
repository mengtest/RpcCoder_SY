// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseAttrV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BaseAttrV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BaseAttrUserDataV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaseAttrUserDataV1_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BaseAttrV1Data_2eproto() {
  protobuf_AddDesc_BaseAttrV1Data_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BaseAttrV1Data.proto");
  GOOGLE_CHECK(file != NULL);
  BaseAttrUserDataV1_descriptor_ = file->message_type(0);
  static const int BaseAttrUserDataV1_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, servertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, roleid_),
  };
  BaseAttrUserDataV1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaseAttrUserDataV1_descriptor_,
      BaseAttrUserDataV1::default_instance_,
      BaseAttrUserDataV1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaseAttrUserDataV1));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BaseAttrV1Data_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaseAttrUserDataV1_descriptor_, &BaseAttrUserDataV1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BaseAttrV1Data_2eproto() {
  delete BaseAttrUserDataV1::default_instance_;
  delete BaseAttrUserDataV1_reflection_;
}

void protobuf_AddDesc_BaseAttrV1Data_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024BaseAttrV1Data.proto\032\022PublicStruct.pro"
    "to\"d\n\022BaseAttrUserDataV1\022\017\n\003Exp\030\001 \001(\021:\002-"
    "1\022\021\n\005Level\030\003 \001(\021:\002-1\022\026\n\nServerTime\030\004 \001(\021"
    ":\002-1\022\022\n\006RoleId\030\005 \001(\021:\002-1", 144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaseAttrV1Data.proto", &protobuf_RegisterTypes);
  BaseAttrUserDataV1::default_instance_ = new BaseAttrUserDataV1();
  BaseAttrUserDataV1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BaseAttrV1Data_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BaseAttrV1Data_2eproto {
  StaticDescriptorInitializer_BaseAttrV1Data_2eproto() {
    protobuf_AddDesc_BaseAttrV1Data_2eproto();
  }
} static_descriptor_initializer_BaseAttrV1Data_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BaseAttrUserDataV1::kExpFieldNumber;
const int BaseAttrUserDataV1::kLevelFieldNumber;
const int BaseAttrUserDataV1::kServerTimeFieldNumber;
const int BaseAttrUserDataV1::kRoleIdFieldNumber;
#endif  // !_MSC_VER

BaseAttrUserDataV1::BaseAttrUserDataV1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BaseAttrUserDataV1::InitAsDefaultInstance() {
}

BaseAttrUserDataV1::BaseAttrUserDataV1(const BaseAttrUserDataV1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BaseAttrUserDataV1::SharedCtor() {
  _cached_size_ = 0;
  exp_ = -1;
  level_ = -1;
  servertime_ = -1;
  roleid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaseAttrUserDataV1::~BaseAttrUserDataV1() {
  SharedDtor();
}

void BaseAttrUserDataV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaseAttrUserDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrUserDataV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaseAttrUserDataV1_descriptor_;
}

const BaseAttrUserDataV1& BaseAttrUserDataV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaseAttrV1Data_2eproto();
  return *default_instance_;
}

BaseAttrUserDataV1* BaseAttrUserDataV1::default_instance_ = NULL;

BaseAttrUserDataV1* BaseAttrUserDataV1::New() const {
  return new BaseAttrUserDataV1;
}

void BaseAttrUserDataV1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exp_ = -1;
    level_ = -1;
    servertime_ = -1;
    roleid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaseAttrUserDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Exp = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional sint32 Level = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ServerTime;
        break;
      }

      // optional sint32 ServerTime = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ServerTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &servertime_)));
          set_has_servertime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_RoleId;
        break;
      }

      // optional sint32 RoleId = 5 [default = -1];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RoleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BaseAttrUserDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional sint32 Exp = 1 [default = -1];
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->exp(), output);
  }

  // optional sint32 Level = 3 [default = -1];
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 ServerTime = 4 [default = -1];
  if (has_servertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->servertime(), output);
  }

  // optional sint32 RoleId = 5 [default = -1];
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BaseAttrUserDataV1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional sint32 Exp = 1 [default = -1];
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->exp(), target);
  }

  // optional sint32 Level = 3 [default = -1];
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 ServerTime = 4 [default = -1];
  if (has_servertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->servertime(), target);
  }

  // optional sint32 RoleId = 5 [default = -1];
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BaseAttrUserDataV1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 Exp = 1 [default = -1];
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->exp());
    }

    // optional sint32 Level = 3 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 ServerTime = 4 [default = -1];
    if (has_servertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->servertime());
    }

    // optional sint32 RoleId = 5 [default = -1];
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrUserDataV1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaseAttrUserDataV1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaseAttrUserDataV1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaseAttrUserDataV1::MergeFrom(const BaseAttrUserDataV1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_servertime()) {
      set_servertime(from.servertime());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaseAttrUserDataV1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrUserDataV1::CopyFrom(const BaseAttrUserDataV1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrUserDataV1::IsInitialized() const {

  return true;
}

void BaseAttrUserDataV1::Swap(BaseAttrUserDataV1* other) {
  if (other != this) {
    std::swap(exp_, other->exp_);
    std::swap(level_, other->level_);
    std::swap(servertime_, other->servertime_);
    std::swap(roleid_, other->roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaseAttrUserDataV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaseAttrUserDataV1_descriptor_;
  metadata.reflection = BaseAttrUserDataV1_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
