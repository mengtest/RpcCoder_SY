// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BagV1Data.proto

#ifndef PROTOBUF_BagV1Data_2eproto__INCLUDED
#define PROTOBUF_BagV1Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BagV1Data_2eproto();
void protobuf_AssignDesc_BagV1Data_2eproto();
void protobuf_ShutdownFile_BagV1Data_2eproto();

class BagItemDataV1;
class BagItemDBV1;

// ===================================================================

class BagItemDataV1 : public ::google::protobuf::Message {
 public:
  BagItemDataV1();
  virtual ~BagItemDataV1();

  BagItemDataV1(const BagItemDataV1& from);

  inline BagItemDataV1& operator=(const BagItemDataV1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagItemDataV1& default_instance();

  void Swap(BagItemDataV1* other);

  // implements Message ----------------------------------------------

  BagItemDataV1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagItemDataV1& from);
  void MergeFrom(const BagItemDataV1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Guid = 1 [default = -1];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::int32 guid() const;
  inline void set_guid(::google::protobuf::int32 value);

  // optional bool Lock = 2 [default = false];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 2;
  inline bool lock() const;
  inline void set_lock(bool value);

  // optional sint32 OverlayCount = 3 [default = -1];
  inline bool has_overlaycount() const;
  inline void clear_overlaycount();
  static const int kOverlayCountFieldNumber = 3;
  inline ::google::protobuf::int32 overlaycount() const;
  inline void set_overlaycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagItemDataV1)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_overlaycount();
  inline void clear_has_overlaycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guid_;
  bool lock_;
  ::google::protobuf::int32 overlaycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BagV1Data_2eproto();
  friend void protobuf_AssignDesc_BagV1Data_2eproto();
  friend void protobuf_ShutdownFile_BagV1Data_2eproto();

  void InitAsDefaultInstance();
  static BagItemDataV1* default_instance_;
};
// -------------------------------------------------------------------

class BagItemDBV1 : public ::google::protobuf::Message {
 public:
  BagItemDBV1();
  virtual ~BagItemDBV1();

  BagItemDBV1(const BagItemDBV1& from);

  inline BagItemDBV1& operator=(const BagItemDBV1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagItemDBV1& default_instance();

  void Swap(BagItemDBV1* other);

  // implements Message ----------------------------------------------

  BagItemDBV1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagItemDBV1& from);
  void MergeFrom(const BagItemDBV1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Guid = 1 [default = -1];
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::int32 guid() const;
  inline void set_guid(::google::protobuf::int32 value);

  // optional bool Lock = 2 [default = false];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 2;
  inline bool lock() const;
  inline void set_lock(bool value);

  // optional sint32 OverlayCount = 3 [default = -1];
  inline bool has_overlaycount() const;
  inline void clear_overlaycount();
  static const int kOverlayCountFieldNumber = 3;
  inline ::google::protobuf::int32 overlaycount() const;
  inline void set_overlaycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagItemDBV1)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_overlaycount();
  inline void clear_has_overlaycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guid_;
  bool lock_;
  ::google::protobuf::int32 overlaycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BagV1Data_2eproto();
  friend void protobuf_AssignDesc_BagV1Data_2eproto();
  friend void protobuf_ShutdownFile_BagV1Data_2eproto();

  void InitAsDefaultInstance();
  static BagItemDBV1* default_instance_;
};
// ===================================================================


// ===================================================================

// BagItemDataV1

// optional sint32 Guid = 1 [default = -1];
inline bool BagItemDataV1::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagItemDataV1::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagItemDataV1::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagItemDataV1::clear_guid() {
  guid_ = -1;
  clear_has_guid();
}
inline ::google::protobuf::int32 BagItemDataV1::guid() const {
  return guid_;
}
inline void BagItemDataV1::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
}

// optional bool Lock = 2 [default = false];
inline bool BagItemDataV1::has_lock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagItemDataV1::set_has_lock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagItemDataV1::clear_has_lock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagItemDataV1::clear_lock() {
  lock_ = false;
  clear_has_lock();
}
inline bool BagItemDataV1::lock() const {
  return lock_;
}
inline void BagItemDataV1::set_lock(bool value) {
  set_has_lock();
  lock_ = value;
}

// optional sint32 OverlayCount = 3 [default = -1];
inline bool BagItemDataV1::has_overlaycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagItemDataV1::set_has_overlaycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagItemDataV1::clear_has_overlaycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagItemDataV1::clear_overlaycount() {
  overlaycount_ = -1;
  clear_has_overlaycount();
}
inline ::google::protobuf::int32 BagItemDataV1::overlaycount() const {
  return overlaycount_;
}
inline void BagItemDataV1::set_overlaycount(::google::protobuf::int32 value) {
  set_has_overlaycount();
  overlaycount_ = value;
}

// -------------------------------------------------------------------

// BagItemDBV1

// optional sint32 Guid = 1 [default = -1];
inline bool BagItemDBV1::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagItemDBV1::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagItemDBV1::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagItemDBV1::clear_guid() {
  guid_ = -1;
  clear_has_guid();
}
inline ::google::protobuf::int32 BagItemDBV1::guid() const {
  return guid_;
}
inline void BagItemDBV1::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
}

// optional bool Lock = 2 [default = false];
inline bool BagItemDBV1::has_lock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagItemDBV1::set_has_lock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagItemDBV1::clear_has_lock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagItemDBV1::clear_lock() {
  lock_ = false;
  clear_has_lock();
}
inline bool BagItemDBV1::lock() const {
  return lock_;
}
inline void BagItemDBV1::set_lock(bool value) {
  set_has_lock();
  lock_ = value;
}

// optional sint32 OverlayCount = 3 [default = -1];
inline bool BagItemDBV1::has_overlaycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagItemDBV1::set_has_overlaycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagItemDBV1::clear_has_overlaycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagItemDBV1::clear_overlaycount() {
  overlaycount_ = -1;
  clear_has_overlaycount();
}
inline ::google::protobuf::int32 BagItemDBV1::overlaycount() const {
  return overlaycount_;
}
inline void BagItemDBV1::set_overlaycount(::google::protobuf::int32 value) {
  set_has_overlaycount();
  overlaycount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BagV1Data_2eproto__INCLUDED
