// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldServerRpc.proto

#ifndef PROTOBUF_WorldServerRpc_2eproto__INCLUDED
#define PROTOBUF_WorldServerRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WorldServerRpc_2eproto();
void protobuf_AssignDesc_WorldServerRpc_2eproto();
void protobuf_ShutdownFile_WorldServerRpc_2eproto();

class WorldServerRpcChangeSceneAsk;
class WorldServerRpcChangeSceneReply;
class WorldServerRpcEnterSceneAsk;
class WorldServerRpcEnterSceneReply;

// ===================================================================

class WorldServerRpcChangeSceneAsk : public ::google::protobuf::Message {
 public:
  WorldServerRpcChangeSceneAsk();
  virtual ~WorldServerRpcChangeSceneAsk();

  WorldServerRpcChangeSceneAsk(const WorldServerRpcChangeSceneAsk& from);

  inline WorldServerRpcChangeSceneAsk& operator=(const WorldServerRpcChangeSceneAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldServerRpcChangeSceneAsk& default_instance();

  void Swap(WorldServerRpcChangeSceneAsk* other);

  // implements Message ----------------------------------------------

  WorldServerRpcChangeSceneAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldServerRpcChangeSceneAsk& from);
  void MergeFrom(const WorldServerRpcChangeSceneAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional sint32 CurSceneId = 2 [default = -1];
  inline bool has_cursceneid() const;
  inline void clear_cursceneid();
  static const int kCurSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 cursceneid() const;
  inline void set_cursceneid(::google::protobuf::int32 value);

  // optional sint32 TargetSceneId = 3 [default = -1];
  inline bool has_targetsceneid() const;
  inline void clear_targetsceneid();
  static const int kTargetSceneIdFieldNumber = 3;
  inline ::google::protobuf::int32 targetsceneid() const;
  inline void set_targetsceneid(::google::protobuf::int32 value);

  // optional sint32 MemId = 4 [default = -1];
  inline bool has_memid() const;
  inline void clear_memid();
  static const int kMemIdFieldNumber = 4;
  inline ::google::protobuf::int32 memid() const;
  inline void set_memid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldServerRpcChangeSceneAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_cursceneid();
  inline void clear_has_cursceneid();
  inline void set_has_targetsceneid();
  inline void clear_has_targetsceneid();
  inline void set_has_memid();
  inline void clear_has_memid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 cursceneid_;
  ::google::protobuf::int32 targetsceneid_;
  ::google::protobuf::int32 memid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_WorldServerRpc_2eproto();
  friend void protobuf_AssignDesc_WorldServerRpc_2eproto();
  friend void protobuf_ShutdownFile_WorldServerRpc_2eproto();

  void InitAsDefaultInstance();
  static WorldServerRpcChangeSceneAsk* default_instance_;
};
// -------------------------------------------------------------------

class WorldServerRpcChangeSceneReply : public ::google::protobuf::Message {
 public:
  WorldServerRpcChangeSceneReply();
  virtual ~WorldServerRpcChangeSceneReply();

  WorldServerRpcChangeSceneReply(const WorldServerRpcChangeSceneReply& from);

  inline WorldServerRpcChangeSceneReply& operator=(const WorldServerRpcChangeSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldServerRpcChangeSceneReply& default_instance();

  void Swap(WorldServerRpcChangeSceneReply* other);

  // implements Message ----------------------------------------------

  WorldServerRpcChangeSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldServerRpcChangeSceneReply& from);
  void MergeFrom(const WorldServerRpcChangeSceneReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional sint32 CurSceneId = 3 [default = -1];
  inline bool has_cursceneid() const;
  inline void clear_cursceneid();
  static const int kCurSceneIdFieldNumber = 3;
  inline ::google::protobuf::int32 cursceneid() const;
  inline void set_cursceneid(::google::protobuf::int32 value);

  // optional sint32 TargetSceneId = 4 [default = -1];
  inline bool has_targetsceneid() const;
  inline void clear_targetsceneid();
  static const int kTargetSceneIdFieldNumber = 4;
  inline ::google::protobuf::int32 targetsceneid() const;
  inline void set_targetsceneid(::google::protobuf::int32 value);

  // optional sint32 MemId = 5 [default = -1];
  inline bool has_memid() const;
  inline void clear_memid();
  static const int kMemIdFieldNumber = 5;
  inline ::google::protobuf::int32 memid() const;
  inline void set_memid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldServerRpcChangeSceneReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_cursceneid();
  inline void clear_has_cursceneid();
  inline void set_has_targetsceneid();
  inline void clear_has_targetsceneid();
  inline void set_has_memid();
  inline void clear_has_memid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 cursceneid_;
  ::google::protobuf::int32 targetsceneid_;
  ::google::protobuf::int32 memid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_WorldServerRpc_2eproto();
  friend void protobuf_AssignDesc_WorldServerRpc_2eproto();
  friend void protobuf_ShutdownFile_WorldServerRpc_2eproto();

  void InitAsDefaultInstance();
  static WorldServerRpcChangeSceneReply* default_instance_;
};
// -------------------------------------------------------------------

class WorldServerRpcEnterSceneAsk : public ::google::protobuf::Message {
 public:
  WorldServerRpcEnterSceneAsk();
  virtual ~WorldServerRpcEnterSceneAsk();

  WorldServerRpcEnterSceneAsk(const WorldServerRpcEnterSceneAsk& from);

  inline WorldServerRpcEnterSceneAsk& operator=(const WorldServerRpcEnterSceneAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldServerRpcEnterSceneAsk& default_instance();

  void Swap(WorldServerRpcEnterSceneAsk* other);

  // implements Message ----------------------------------------------

  WorldServerRpcEnterSceneAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldServerRpcEnterSceneAsk& from);
  void MergeFrom(const WorldServerRpcEnterSceneAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional sint32 SceneId = 2 [default = -1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldServerRpcEnterSceneAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldServerRpc_2eproto();
  friend void protobuf_AssignDesc_WorldServerRpc_2eproto();
  friend void protobuf_ShutdownFile_WorldServerRpc_2eproto();

  void InitAsDefaultInstance();
  static WorldServerRpcEnterSceneAsk* default_instance_;
};
// -------------------------------------------------------------------

class WorldServerRpcEnterSceneReply : public ::google::protobuf::Message {
 public:
  WorldServerRpcEnterSceneReply();
  virtual ~WorldServerRpcEnterSceneReply();

  WorldServerRpcEnterSceneReply(const WorldServerRpcEnterSceneReply& from);

  inline WorldServerRpcEnterSceneReply& operator=(const WorldServerRpcEnterSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldServerRpcEnterSceneReply& default_instance();

  void Swap(WorldServerRpcEnterSceneReply* other);

  // implements Message ----------------------------------------------

  WorldServerRpcEnterSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldServerRpcEnterSceneReply& from);
  void MergeFrom(const WorldServerRpcEnterSceneReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldServerRpcEnterSceneReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_WorldServerRpc_2eproto();
  friend void protobuf_AssignDesc_WorldServerRpc_2eproto();
  friend void protobuf_ShutdownFile_WorldServerRpc_2eproto();

  void InitAsDefaultInstance();
  static WorldServerRpcEnterSceneReply* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldServerRpcChangeSceneAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool WorldServerRpcChangeSceneAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldServerRpcChangeSceneAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldServerRpcChangeSceneAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldServerRpcChangeSceneAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 WorldServerRpcChangeSceneAsk::roleid() const {
  return roleid_;
}
inline void WorldServerRpcChangeSceneAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional sint32 CurSceneId = 2 [default = -1];
inline bool WorldServerRpcChangeSceneAsk::has_cursceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldServerRpcChangeSceneAsk::set_has_cursceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldServerRpcChangeSceneAsk::clear_has_cursceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldServerRpcChangeSceneAsk::clear_cursceneid() {
  cursceneid_ = -1;
  clear_has_cursceneid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneAsk::cursceneid() const {
  return cursceneid_;
}
inline void WorldServerRpcChangeSceneAsk::set_cursceneid(::google::protobuf::int32 value) {
  set_has_cursceneid();
  cursceneid_ = value;
}

// optional sint32 TargetSceneId = 3 [default = -1];
inline bool WorldServerRpcChangeSceneAsk::has_targetsceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldServerRpcChangeSceneAsk::set_has_targetsceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldServerRpcChangeSceneAsk::clear_has_targetsceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldServerRpcChangeSceneAsk::clear_targetsceneid() {
  targetsceneid_ = -1;
  clear_has_targetsceneid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneAsk::targetsceneid() const {
  return targetsceneid_;
}
inline void WorldServerRpcChangeSceneAsk::set_targetsceneid(::google::protobuf::int32 value) {
  set_has_targetsceneid();
  targetsceneid_ = value;
}

// optional sint32 MemId = 4 [default = -1];
inline bool WorldServerRpcChangeSceneAsk::has_memid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldServerRpcChangeSceneAsk::set_has_memid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldServerRpcChangeSceneAsk::clear_has_memid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldServerRpcChangeSceneAsk::clear_memid() {
  memid_ = -1;
  clear_has_memid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneAsk::memid() const {
  return memid_;
}
inline void WorldServerRpcChangeSceneAsk::set_memid(::google::protobuf::int32 value) {
  set_has_memid();
  memid_ = value;
}

// -------------------------------------------------------------------

// WorldServerRpcChangeSceneReply

// optional sint32 Result = 1 [default = -9999];
inline bool WorldServerRpcChangeSceneReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldServerRpcChangeSceneReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldServerRpcChangeSceneReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldServerRpcChangeSceneReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneReply::result() const {
  return result_;
}
inline void WorldServerRpcChangeSceneReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool WorldServerRpcChangeSceneReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldServerRpcChangeSceneReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldServerRpcChangeSceneReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldServerRpcChangeSceneReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 WorldServerRpcChangeSceneReply::roleid() const {
  return roleid_;
}
inline void WorldServerRpcChangeSceneReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional sint32 CurSceneId = 3 [default = -1];
inline bool WorldServerRpcChangeSceneReply::has_cursceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldServerRpcChangeSceneReply::set_has_cursceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldServerRpcChangeSceneReply::clear_has_cursceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldServerRpcChangeSceneReply::clear_cursceneid() {
  cursceneid_ = -1;
  clear_has_cursceneid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneReply::cursceneid() const {
  return cursceneid_;
}
inline void WorldServerRpcChangeSceneReply::set_cursceneid(::google::protobuf::int32 value) {
  set_has_cursceneid();
  cursceneid_ = value;
}

// optional sint32 TargetSceneId = 4 [default = -1];
inline bool WorldServerRpcChangeSceneReply::has_targetsceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldServerRpcChangeSceneReply::set_has_targetsceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldServerRpcChangeSceneReply::clear_has_targetsceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldServerRpcChangeSceneReply::clear_targetsceneid() {
  targetsceneid_ = -1;
  clear_has_targetsceneid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneReply::targetsceneid() const {
  return targetsceneid_;
}
inline void WorldServerRpcChangeSceneReply::set_targetsceneid(::google::protobuf::int32 value) {
  set_has_targetsceneid();
  targetsceneid_ = value;
}

// optional sint32 MemId = 5 [default = -1];
inline bool WorldServerRpcChangeSceneReply::has_memid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldServerRpcChangeSceneReply::set_has_memid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldServerRpcChangeSceneReply::clear_has_memid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldServerRpcChangeSceneReply::clear_memid() {
  memid_ = -1;
  clear_has_memid();
}
inline ::google::protobuf::int32 WorldServerRpcChangeSceneReply::memid() const {
  return memid_;
}
inline void WorldServerRpcChangeSceneReply::set_memid(::google::protobuf::int32 value) {
  set_has_memid();
  memid_ = value;
}

// -------------------------------------------------------------------

// WorldServerRpcEnterSceneAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool WorldServerRpcEnterSceneAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldServerRpcEnterSceneAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldServerRpcEnterSceneAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldServerRpcEnterSceneAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 WorldServerRpcEnterSceneAsk::roleid() const {
  return roleid_;
}
inline void WorldServerRpcEnterSceneAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional sint32 SceneId = 2 [default = -1];
inline bool WorldServerRpcEnterSceneAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldServerRpcEnterSceneAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldServerRpcEnterSceneAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldServerRpcEnterSceneAsk::clear_sceneid() {
  sceneid_ = -1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 WorldServerRpcEnterSceneAsk::sceneid() const {
  return sceneid_;
}
inline void WorldServerRpcEnterSceneAsk::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// WorldServerRpcEnterSceneReply

// optional sint32 Result = 1 [default = -9999];
inline bool WorldServerRpcEnterSceneReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldServerRpcEnterSceneReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldServerRpcEnterSceneReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldServerRpcEnterSceneReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 WorldServerRpcEnterSceneReply::result() const {
  return result_;
}
inline void WorldServerRpcEnterSceneReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorldServerRpc_2eproto__INCLUDED
