// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRpc.proto

#ifndef PROTOBUF_ChatRpc_2eproto__INCLUDED
#define PROTOBUF_ChatRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ChatRpc_2eproto();
void protobuf_AssignDesc_ChatRpc_2eproto();
void protobuf_ShutdownFile_ChatRpc_2eproto();

class ChatRpcChatAsk;
class ChatRpcChatReply;
class ChatRpcPushChatUpdatesNotify;

// ===================================================================

class ChatRpcChatAsk : public ::google::protobuf::Message {
 public:
  ChatRpcChatAsk();
  virtual ~ChatRpcChatAsk();

  ChatRpcChatAsk(const ChatRpcChatAsk& from);

  inline ChatRpcChatAsk& operator=(const ChatRpcChatAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcChatAsk& default_instance();

  void Swap(ChatRpcChatAsk* other);

  // implements Message ----------------------------------------------

  ChatRpcChatAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatRpcChatAsk& from);
  void MergeFrom(const ChatRpcChatAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatMsg Chat_msg = 1;
  inline bool has_chat_msg() const;
  inline void clear_chat_msg();
  static const int kChatMsgFieldNumber = 1;
  inline const ::ChatMsg& chat_msg() const;
  inline ::ChatMsg* mutable_chat_msg();
  inline ::ChatMsg* release_chat_msg();
  inline void set_allocated_chat_msg(::ChatMsg* chat_msg);

  // optional sint32 Chat_channel = 2 [default = -1];
  inline bool has_chat_channel() const;
  inline void clear_chat_channel();
  static const int kChatChannelFieldNumber = 2;
  inline ::google::protobuf::int32 chat_channel() const;
  inline void set_chat_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatRpcChatAsk)
 private:
  inline void set_has_chat_msg();
  inline void clear_has_chat_msg();
  inline void set_has_chat_channel();
  inline void clear_has_chat_channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ChatMsg* chat_msg_;
  ::google::protobuf::int32 chat_channel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ChatRpc_2eproto();
  friend void protobuf_AssignDesc_ChatRpc_2eproto();
  friend void protobuf_ShutdownFile_ChatRpc_2eproto();

  void InitAsDefaultInstance();
  static ChatRpcChatAsk* default_instance_;
};
// -------------------------------------------------------------------

class ChatRpcChatReply : public ::google::protobuf::Message {
 public:
  ChatRpcChatReply();
  virtual ~ChatRpcChatReply();

  ChatRpcChatReply(const ChatRpcChatReply& from);

  inline ChatRpcChatReply& operator=(const ChatRpcChatReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcChatReply& default_instance();

  void Swap(ChatRpcChatReply* other);

  // implements Message ----------------------------------------------

  ChatRpcChatReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatRpcChatReply& from);
  void MergeFrom(const ChatRpcChatReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatRpcChatReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ChatRpc_2eproto();
  friend void protobuf_AssignDesc_ChatRpc_2eproto();
  friend void protobuf_ShutdownFile_ChatRpc_2eproto();

  void InitAsDefaultInstance();
  static ChatRpcChatReply* default_instance_;
};
// -------------------------------------------------------------------

class ChatRpcPushChatUpdatesNotify : public ::google::protobuf::Message {
 public:
  ChatRpcPushChatUpdatesNotify();
  virtual ~ChatRpcPushChatUpdatesNotify();

  ChatRpcPushChatUpdatesNotify(const ChatRpcPushChatUpdatesNotify& from);

  inline ChatRpcPushChatUpdatesNotify& operator=(const ChatRpcPushChatUpdatesNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcPushChatUpdatesNotify& default_instance();

  void Swap(ChatRpcPushChatUpdatesNotify* other);

  // implements Message ----------------------------------------------

  ChatRpcPushChatUpdatesNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatRpcPushChatUpdatesNotify& from);
  void MergeFrom(const ChatRpcPushChatUpdatesNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChatChannelData Chat_channels = 1;
  inline int chat_channels_size() const;
  inline void clear_chat_channels();
  static const int kChatChannelsFieldNumber = 1;
  inline const ::ChatChannelData& chat_channels(int index) const;
  inline ::ChatChannelData* mutable_chat_channels(int index);
  inline ::ChatChannelData* add_chat_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::ChatChannelData >&
      chat_channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChatChannelData >*
      mutable_chat_channels();

  // @@protoc_insertion_point(class_scope:ChatRpcPushChatUpdatesNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ChatChannelData > chat_channels_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ChatRpc_2eproto();
  friend void protobuf_AssignDesc_ChatRpc_2eproto();
  friend void protobuf_ShutdownFile_ChatRpc_2eproto();

  void InitAsDefaultInstance();
  static ChatRpcPushChatUpdatesNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// ChatRpcChatAsk

// optional .ChatMsg Chat_msg = 1;
inline bool ChatRpcChatAsk::has_chat_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcChatAsk::set_has_chat_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcChatAsk::clear_has_chat_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcChatAsk::clear_chat_msg() {
  if (chat_msg_ != NULL) chat_msg_->::ChatMsg::Clear();
  clear_has_chat_msg();
}
inline const ::ChatMsg& ChatRpcChatAsk::chat_msg() const {
  return chat_msg_ != NULL ? *chat_msg_ : *default_instance_->chat_msg_;
}
inline ::ChatMsg* ChatRpcChatAsk::mutable_chat_msg() {
  set_has_chat_msg();
  if (chat_msg_ == NULL) chat_msg_ = new ::ChatMsg;
  return chat_msg_;
}
inline ::ChatMsg* ChatRpcChatAsk::release_chat_msg() {
  clear_has_chat_msg();
  ::ChatMsg* temp = chat_msg_;
  chat_msg_ = NULL;
  return temp;
}
inline void ChatRpcChatAsk::set_allocated_chat_msg(::ChatMsg* chat_msg) {
  delete chat_msg_;
  chat_msg_ = chat_msg;
  if (chat_msg) {
    set_has_chat_msg();
  } else {
    clear_has_chat_msg();
  }
}

// optional sint32 Chat_channel = 2 [default = -1];
inline bool ChatRpcChatAsk::has_chat_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRpcChatAsk::set_has_chat_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRpcChatAsk::clear_has_chat_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRpcChatAsk::clear_chat_channel() {
  chat_channel_ = -1;
  clear_has_chat_channel();
}
inline ::google::protobuf::int32 ChatRpcChatAsk::chat_channel() const {
  return chat_channel_;
}
inline void ChatRpcChatAsk::set_chat_channel(::google::protobuf::int32 value) {
  set_has_chat_channel();
  chat_channel_ = value;
}

// -------------------------------------------------------------------

// ChatRpcChatReply

// optional sint32 Result = 1 [default = -9999];
inline bool ChatRpcChatReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcChatReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcChatReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcChatReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ChatRpcChatReply::result() const {
  return result_;
}
inline void ChatRpcChatReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ChatRpcPushChatUpdatesNotify

// repeated .ChatChannelData Chat_channels = 1;
inline int ChatRpcPushChatUpdatesNotify::chat_channels_size() const {
  return chat_channels_.size();
}
inline void ChatRpcPushChatUpdatesNotify::clear_chat_channels() {
  chat_channels_.Clear();
}
inline const ::ChatChannelData& ChatRpcPushChatUpdatesNotify::chat_channels(int index) const {
  return chat_channels_.Get(index);
}
inline ::ChatChannelData* ChatRpcPushChatUpdatesNotify::mutable_chat_channels(int index) {
  return chat_channels_.Mutable(index);
}
inline ::ChatChannelData* ChatRpcPushChatUpdatesNotify::add_chat_channels() {
  return chat_channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChatChannelData >&
ChatRpcPushChatUpdatesNotify::chat_channels() const {
  return chat_channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChatChannelData >*
ChatRpcPushChatUpdatesNotify::mutable_chat_channels() {
  return &chat_channels_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChatRpc_2eproto__INCLUDED
