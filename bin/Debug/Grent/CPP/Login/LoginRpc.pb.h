// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoginRpc.proto

#ifndef PROTOBUF_LoginRpc_2eproto__INCLUDED
#define PROTOBUF_LoginRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LoginRpc_2eproto();
void protobuf_AssignDesc_LoginRpc_2eproto();
void protobuf_ShutdownFile_LoginRpc_2eproto();

class LoginRpcConnectAsk;
class LoginRpcConnectReply;
class LoginRpcLoginAsk;
class LoginRpcLoginReply;
class LoginRpcCharacterListAsk;
class LoginRpcCharacterListReply;
class LoginRpcSelectCharacterAsk;
class LoginRpcSelectCharacterReply;
class LoginRpcCreateCharacterAsk;
class LoginRpcCreateCharacterReply;
class LoginRpcSelectSaveUserAsk;
class LoginRpcSelectSaveUserReply;
class LoginRpcDeleteCharacterAsk;
class LoginRpcDeleteCharacterReply;

// ===================================================================

class LoginRpcConnectAsk : public ::google::protobuf::Message {
 public:
  LoginRpcConnectAsk();
  virtual ~LoginRpcConnectAsk();

  LoginRpcConnectAsk(const LoginRpcConnectAsk& from);

  inline LoginRpcConnectAsk& operator=(const LoginRpcConnectAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcConnectAsk& default_instance();

  void Swap(LoginRpcConnectAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcConnectAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcConnectAsk& from);
  void MergeFrom(const LoginRpcConnectAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Type = 1 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcConnectAsk)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcConnectAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcConnectReply : public ::google::protobuf::Message {
 public:
  LoginRpcConnectReply();
  virtual ~LoginRpcConnectReply();

  LoginRpcConnectReply(const LoginRpcConnectReply& from);

  inline LoginRpcConnectReply& operator=(const LoginRpcConnectReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcConnectReply& default_instance();

  void Swap(LoginRpcConnectReply* other);

  // implements Message ----------------------------------------------

  LoginRpcConnectReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcConnectReply& from);
  void MergeFrom(const LoginRpcConnectReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional sint32 Type = 2 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcConnectReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcConnectReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcLoginAsk : public ::google::protobuf::Message {
 public:
  LoginRpcLoginAsk();
  virtual ~LoginRpcLoginAsk();

  LoginRpcLoginAsk(const LoginRpcLoginAsk& from);

  inline LoginRpcLoginAsk& operator=(const LoginRpcLoginAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcLoginAsk& default_instance();

  void Swap(LoginRpcLoginAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcLoginAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcLoginAsk& from);
  void MergeFrom(const LoginRpcLoginAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string Passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  inline ::std::string* release_passwd();
  inline void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:LoginRpcLoginAsk)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_passwd();
  inline void clear_has_passwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* passwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcLoginAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcLoginReply : public ::google::protobuf::Message {
 public:
  LoginRpcLoginReply();
  virtual ~LoginRpcLoginReply();

  LoginRpcLoginReply(const LoginRpcLoginReply& from);

  inline LoginRpcLoginReply& operator=(const LoginRpcLoginReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcLoginReply& default_instance();

  void Swap(LoginRpcLoginReply* other);

  // implements Message ----------------------------------------------

  LoginRpcLoginReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcLoginReply& from);
  void MergeFrom(const LoginRpcLoginReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcLoginReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcLoginReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcCharacterListAsk : public ::google::protobuf::Message {
 public:
  LoginRpcCharacterListAsk();
  virtual ~LoginRpcCharacterListAsk();

  LoginRpcCharacterListAsk(const LoginRpcCharacterListAsk& from);

  inline LoginRpcCharacterListAsk& operator=(const LoginRpcCharacterListAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcCharacterListAsk& default_instance();

  void Swap(LoginRpcCharacterListAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcCharacterListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcCharacterListAsk& from);
  void MergeFrom(const LoginRpcCharacterListAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Accountname = 1;
  inline bool has_accountname() const;
  inline void clear_accountname();
  static const int kAccountnameFieldNumber = 1;
  inline const ::std::string& accountname() const;
  inline void set_accountname(const ::std::string& value);
  inline void set_accountname(const char* value);
  inline void set_accountname(const char* value, size_t size);
  inline ::std::string* mutable_accountname();
  inline ::std::string* release_accountname();
  inline void set_allocated_accountname(::std::string* accountname);

  // @@protoc_insertion_point(class_scope:LoginRpcCharacterListAsk)
 private:
  inline void set_has_accountname();
  inline void clear_has_accountname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* accountname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcCharacterListAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcCharacterListReply : public ::google::protobuf::Message {
 public:
  LoginRpcCharacterListReply();
  virtual ~LoginRpcCharacterListReply();

  LoginRpcCharacterListReply(const LoginRpcCharacterListReply& from);

  inline LoginRpcCharacterListReply& operator=(const LoginRpcCharacterListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcCharacterListReply& default_instance();

  void Swap(LoginRpcCharacterListReply* other);

  // implements Message ----------------------------------------------

  LoginRpcCharacterListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcCharacterListReply& from);
  void MergeFrom(const LoginRpcCharacterListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .CharacterInfo CharacterList = 2;
  inline int characterlist_size() const;
  inline void clear_characterlist();
  static const int kCharacterListFieldNumber = 2;
  inline const ::CharacterInfo& characterlist(int index) const;
  inline ::CharacterInfo* mutable_characterlist(int index);
  inline ::CharacterInfo* add_characterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
      characterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
      mutable_characterlist();

  // optional uint64 LastSelectRoleId = 4 [default = 0];
  inline bool has_lastselectroleid() const;
  inline void clear_lastselectroleid();
  static const int kLastSelectRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lastselectroleid() const;
  inline void set_lastselectroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcCharacterListReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lastselectroleid();
  inline void clear_has_lastselectroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CharacterInfo > characterlist_;
  ::google::protobuf::uint64 lastselectroleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcCharacterListReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcSelectCharacterAsk : public ::google::protobuf::Message {
 public:
  LoginRpcSelectCharacterAsk();
  virtual ~LoginRpcSelectCharacterAsk();

  LoginRpcSelectCharacterAsk(const LoginRpcSelectCharacterAsk& from);

  inline LoginRpcSelectCharacterAsk& operator=(const LoginRpcSelectCharacterAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcSelectCharacterAsk& default_instance();

  void Swap(LoginRpcSelectCharacterAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcSelectCharacterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcSelectCharacterAsk& from);
  void MergeFrom(const LoginRpcSelectCharacterAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcSelectCharacterAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcSelectCharacterAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcSelectCharacterReply : public ::google::protobuf::Message {
 public:
  LoginRpcSelectCharacterReply();
  virtual ~LoginRpcSelectCharacterReply();

  LoginRpcSelectCharacterReply(const LoginRpcSelectCharacterReply& from);

  inline LoginRpcSelectCharacterReply& operator=(const LoginRpcSelectCharacterReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcSelectCharacterReply& default_instance();

  void Swap(LoginRpcSelectCharacterReply* other);

  // implements Message ----------------------------------------------

  LoginRpcSelectCharacterReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcSelectCharacterReply& from);
  void MergeFrom(const LoginRpcSelectCharacterReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional string Ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional sint32 Port = 4 [default = 0];
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcSelectCharacterReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 port_;
  ::std::string* ip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcSelectCharacterReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcCreateCharacterAsk : public ::google::protobuf::Message {
 public:
  LoginRpcCreateCharacterAsk();
  virtual ~LoginRpcCreateCharacterAsk();

  LoginRpcCreateCharacterAsk(const LoginRpcCreateCharacterAsk& from);

  inline LoginRpcCreateCharacterAsk& operator=(const LoginRpcCreateCharacterAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcCreateCharacterAsk& default_instance();

  void Swap(LoginRpcCreateCharacterAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcCreateCharacterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcCreateCharacterAsk& from);
  void MergeFrom(const LoginRpcCreateCharacterAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Nickname = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional sint32 ConfigId = 2 [default = -1];
  inline bool has_configid() const;
  inline void clear_configid();
  static const int kConfigIdFieldNumber = 2;
  inline ::google::protobuf::int32 configid() const;
  inline void set_configid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcCreateCharacterAsk)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_configid();
  inline void clear_has_configid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nickname_;
  ::google::protobuf::int32 configid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcCreateCharacterAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcCreateCharacterReply : public ::google::protobuf::Message {
 public:
  LoginRpcCreateCharacterReply();
  virtual ~LoginRpcCreateCharacterReply();

  LoginRpcCreateCharacterReply(const LoginRpcCreateCharacterReply& from);

  inline LoginRpcCreateCharacterReply& operator=(const LoginRpcCreateCharacterReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcCreateCharacterReply& default_instance();

  void Swap(LoginRpcCreateCharacterReply* other);

  // implements Message ----------------------------------------------

  LoginRpcCreateCharacterReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcCreateCharacterReply& from);
  void MergeFrom(const LoginRpcCreateCharacterReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcCreateCharacterReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcCreateCharacterReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcSelectSaveUserAsk : public ::google::protobuf::Message {
 public:
  LoginRpcSelectSaveUserAsk();
  virtual ~LoginRpcSelectSaveUserAsk();

  LoginRpcSelectSaveUserAsk(const LoginRpcSelectSaveUserAsk& from);

  inline LoginRpcSelectSaveUserAsk& operator=(const LoginRpcSelectSaveUserAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcSelectSaveUserAsk& default_instance();

  void Swap(LoginRpcSelectSaveUserAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcSelectSaveUserAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcSelectSaveUserAsk& from);
  void MergeFrom(const LoginRpcSelectSaveUserAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcSelectSaveUserAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcSelectSaveUserAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcSelectSaveUserReply : public ::google::protobuf::Message {
 public:
  LoginRpcSelectSaveUserReply();
  virtual ~LoginRpcSelectSaveUserReply();

  LoginRpcSelectSaveUserReply(const LoginRpcSelectSaveUserReply& from);

  inline LoginRpcSelectSaveUserReply& operator=(const LoginRpcSelectSaveUserReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcSelectSaveUserReply& default_instance();

  void Swap(LoginRpcSelectSaveUserReply* other);

  // implements Message ----------------------------------------------

  LoginRpcSelectSaveUserReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcSelectSaveUserReply& from);
  void MergeFrom(const LoginRpcSelectSaveUserReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcSelectSaveUserReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcSelectSaveUserReply* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcDeleteCharacterAsk : public ::google::protobuf::Message {
 public:
  LoginRpcDeleteCharacterAsk();
  virtual ~LoginRpcDeleteCharacterAsk();

  LoginRpcDeleteCharacterAsk(const LoginRpcDeleteCharacterAsk& from);

  inline LoginRpcDeleteCharacterAsk& operator=(const LoginRpcDeleteCharacterAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcDeleteCharacterAsk& default_instance();

  void Swap(LoginRpcDeleteCharacterAsk* other);

  // implements Message ----------------------------------------------

  LoginRpcDeleteCharacterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcDeleteCharacterAsk& from);
  void MergeFrom(const LoginRpcDeleteCharacterAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LoginRpcDeleteCharacterAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcDeleteCharacterAsk* default_instance_;
};
// -------------------------------------------------------------------

class LoginRpcDeleteCharacterReply : public ::google::protobuf::Message {
 public:
  LoginRpcDeleteCharacterReply();
  virtual ~LoginRpcDeleteCharacterReply();

  LoginRpcDeleteCharacterReply(const LoginRpcDeleteCharacterReply& from);

  inline LoginRpcDeleteCharacterReply& operator=(const LoginRpcDeleteCharacterReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRpcDeleteCharacterReply& default_instance();

  void Swap(LoginRpcDeleteCharacterReply* other);

  // implements Message ----------------------------------------------

  LoginRpcDeleteCharacterReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRpcDeleteCharacterReply& from);
  void MergeFrom(const LoginRpcDeleteCharacterReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRpcDeleteCharacterReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_LoginRpc_2eproto();
  friend void protobuf_AssignDesc_LoginRpc_2eproto();
  friend void protobuf_ShutdownFile_LoginRpc_2eproto();

  void InitAsDefaultInstance();
  static LoginRpcDeleteCharacterReply* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginRpcConnectAsk

// optional sint32 Type = 1 [default = -1];
inline bool LoginRpcConnectAsk::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcConnectAsk::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcConnectAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcConnectAsk::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 LoginRpcConnectAsk::type() const {
  return type_;
}
inline void LoginRpcConnectAsk::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// LoginRpcConnectReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcConnectReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcConnectReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcConnectReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcConnectReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcConnectReply::result() const {
  return result_;
}
inline void LoginRpcConnectReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional sint32 Type = 2 [default = 0];
inline bool LoginRpcConnectReply::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcConnectReply::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcConnectReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcConnectReply::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 LoginRpcConnectReply::type() const {
  return type_;
}
inline void LoginRpcConnectReply::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// LoginRpcLoginAsk

// optional string Username = 1;
inline bool LoginRpcLoginAsk::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcLoginAsk::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcLoginAsk::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcLoginAsk::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& LoginRpcLoginAsk::username() const {
  return *username_;
}
inline void LoginRpcLoginAsk::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void LoginRpcLoginAsk::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void LoginRpcLoginAsk::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRpcLoginAsk::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* LoginRpcLoginAsk::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRpcLoginAsk::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string Passwd = 2;
inline bool LoginRpcLoginAsk::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcLoginAsk::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcLoginAsk::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcLoginAsk::clear_passwd() {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    passwd_->clear();
  }
  clear_has_passwd();
}
inline const ::std::string& LoginRpcLoginAsk::passwd() const {
  return *passwd_;
}
inline void LoginRpcLoginAsk::set_passwd(const ::std::string& value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void LoginRpcLoginAsk::set_passwd(const char* value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void LoginRpcLoginAsk::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRpcLoginAsk::mutable_passwd() {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}
inline ::std::string* LoginRpcLoginAsk::release_passwd() {
  clear_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = passwd_;
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRpcLoginAsk::set_allocated_passwd(::std::string* passwd) {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (passwd) {
    set_has_passwd();
    passwd_ = passwd;
  } else {
    clear_has_passwd();
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LoginRpcLoginReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcLoginReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcLoginReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcLoginReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcLoginReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcLoginReply::result() const {
  return result_;
}
inline void LoginRpcLoginReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool LoginRpcLoginReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcLoginReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcLoginReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcLoginReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcLoginReply::roleid() const {
  return roleid_;
}
inline void LoginRpcLoginReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcCharacterListAsk

// optional string Accountname = 1;
inline bool LoginRpcCharacterListAsk::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcCharacterListAsk::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcCharacterListAsk::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcCharacterListAsk::clear_accountname() {
  if (accountname_ != &::google::protobuf::internal::kEmptyString) {
    accountname_->clear();
  }
  clear_has_accountname();
}
inline const ::std::string& LoginRpcCharacterListAsk::accountname() const {
  return *accountname_;
}
inline void LoginRpcCharacterListAsk::set_accountname(const ::std::string& value) {
  set_has_accountname();
  if (accountname_ == &::google::protobuf::internal::kEmptyString) {
    accountname_ = new ::std::string;
  }
  accountname_->assign(value);
}
inline void LoginRpcCharacterListAsk::set_accountname(const char* value) {
  set_has_accountname();
  if (accountname_ == &::google::protobuf::internal::kEmptyString) {
    accountname_ = new ::std::string;
  }
  accountname_->assign(value);
}
inline void LoginRpcCharacterListAsk::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  if (accountname_ == &::google::protobuf::internal::kEmptyString) {
    accountname_ = new ::std::string;
  }
  accountname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRpcCharacterListAsk::mutable_accountname() {
  set_has_accountname();
  if (accountname_ == &::google::protobuf::internal::kEmptyString) {
    accountname_ = new ::std::string;
  }
  return accountname_;
}
inline ::std::string* LoginRpcCharacterListAsk::release_accountname() {
  clear_has_accountname();
  if (accountname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accountname_;
    accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRpcCharacterListAsk::set_allocated_accountname(::std::string* accountname) {
  if (accountname_ != &::google::protobuf::internal::kEmptyString) {
    delete accountname_;
  }
  if (accountname) {
    set_has_accountname();
    accountname_ = accountname;
  } else {
    clear_has_accountname();
    accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LoginRpcCharacterListReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcCharacterListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcCharacterListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcCharacterListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcCharacterListReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcCharacterListReply::result() const {
  return result_;
}
inline void LoginRpcCharacterListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .CharacterInfo CharacterList = 2;
inline int LoginRpcCharacterListReply::characterlist_size() const {
  return characterlist_.size();
}
inline void LoginRpcCharacterListReply::clear_characterlist() {
  characterlist_.Clear();
}
inline const ::CharacterInfo& LoginRpcCharacterListReply::characterlist(int index) const {
  return characterlist_.Get(index);
}
inline ::CharacterInfo* LoginRpcCharacterListReply::mutable_characterlist(int index) {
  return characterlist_.Mutable(index);
}
inline ::CharacterInfo* LoginRpcCharacterListReply::add_characterlist() {
  return characterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
LoginRpcCharacterListReply::characterlist() const {
  return characterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
LoginRpcCharacterListReply::mutable_characterlist() {
  return &characterlist_;
}

// optional uint64 LastSelectRoleId = 4 [default = 0];
inline bool LoginRpcCharacterListReply::has_lastselectroleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRpcCharacterListReply::set_has_lastselectroleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRpcCharacterListReply::clear_has_lastselectroleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRpcCharacterListReply::clear_lastselectroleid() {
  lastselectroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastselectroleid();
}
inline ::google::protobuf::uint64 LoginRpcCharacterListReply::lastselectroleid() const {
  return lastselectroleid_;
}
inline void LoginRpcCharacterListReply::set_lastselectroleid(::google::protobuf::uint64 value) {
  set_has_lastselectroleid();
  lastselectroleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcSelectCharacterAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool LoginRpcSelectCharacterAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcSelectCharacterAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcSelectCharacterAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcSelectCharacterAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcSelectCharacterAsk::roleid() const {
  return roleid_;
}
inline void LoginRpcSelectCharacterAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcSelectCharacterReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcSelectCharacterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcSelectCharacterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcSelectCharacterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcSelectCharacterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcSelectCharacterReply::result() const {
  return result_;
}
inline void LoginRpcSelectCharacterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool LoginRpcSelectCharacterReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcSelectCharacterReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcSelectCharacterReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcSelectCharacterReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcSelectCharacterReply::roleid() const {
  return roleid_;
}
inline void LoginRpcSelectCharacterReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string Ip = 3;
inline bool LoginRpcSelectCharacterReply::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRpcSelectCharacterReply::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRpcSelectCharacterReply::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRpcSelectCharacterReply::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& LoginRpcSelectCharacterReply::ip() const {
  return *ip_;
}
inline void LoginRpcSelectCharacterReply::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void LoginRpcSelectCharacterReply::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void LoginRpcSelectCharacterReply::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRpcSelectCharacterReply::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* LoginRpcSelectCharacterReply::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRpcSelectCharacterReply::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 Port = 4 [default = 0];
inline bool LoginRpcSelectCharacterReply::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRpcSelectCharacterReply::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRpcSelectCharacterReply::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRpcSelectCharacterReply::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 LoginRpcSelectCharacterReply::port() const {
  return port_;
}
inline void LoginRpcSelectCharacterReply::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// LoginRpcCreateCharacterAsk

// optional string Nickname = 1;
inline bool LoginRpcCreateCharacterAsk::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcCreateCharacterAsk::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcCreateCharacterAsk::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcCreateCharacterAsk::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& LoginRpcCreateCharacterAsk::nickname() const {
  return *nickname_;
}
inline void LoginRpcCreateCharacterAsk::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void LoginRpcCreateCharacterAsk::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void LoginRpcCreateCharacterAsk::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LoginRpcCreateCharacterAsk::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* LoginRpcCreateCharacterAsk::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LoginRpcCreateCharacterAsk::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 ConfigId = 2 [default = -1];
inline bool LoginRpcCreateCharacterAsk::has_configid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcCreateCharacterAsk::set_has_configid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcCreateCharacterAsk::clear_has_configid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcCreateCharacterAsk::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 LoginRpcCreateCharacterAsk::configid() const {
  return configid_;
}
inline void LoginRpcCreateCharacterAsk::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcCreateCharacterReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcCreateCharacterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcCreateCharacterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcCreateCharacterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcCreateCharacterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcCreateCharacterReply::result() const {
  return result_;
}
inline void LoginRpcCreateCharacterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 RoleId = 2 [default = 0];
inline bool LoginRpcCreateCharacterReply::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRpcCreateCharacterReply::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRpcCreateCharacterReply::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRpcCreateCharacterReply::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcCreateCharacterReply::roleid() const {
  return roleid_;
}
inline void LoginRpcCreateCharacterReply::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcSelectSaveUserAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool LoginRpcSelectSaveUserAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcSelectSaveUserAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcSelectSaveUserAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcSelectSaveUserAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcSelectSaveUserAsk::roleid() const {
  return roleid_;
}
inline void LoginRpcSelectSaveUserAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcSelectSaveUserReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcSelectSaveUserReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcSelectSaveUserReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcSelectSaveUserReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcSelectSaveUserReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcSelectSaveUserReply::result() const {
  return result_;
}
inline void LoginRpcSelectSaveUserReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// LoginRpcDeleteCharacterAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool LoginRpcDeleteCharacterAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcDeleteCharacterAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcDeleteCharacterAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcDeleteCharacterAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 LoginRpcDeleteCharacterAsk::roleid() const {
  return roleid_;
}
inline void LoginRpcDeleteCharacterAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// LoginRpcDeleteCharacterReply

// optional sint32 Result = 1 [default = -9999];
inline bool LoginRpcDeleteCharacterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRpcDeleteCharacterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRpcDeleteCharacterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRpcDeleteCharacterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 LoginRpcDeleteCharacterReply::result() const {
  return result_;
}
inline void LoginRpcDeleteCharacterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LoginRpc_2eproto__INCLUDED
