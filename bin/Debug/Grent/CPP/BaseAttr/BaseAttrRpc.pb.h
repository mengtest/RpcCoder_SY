// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseAttrRpc.proto

#ifndef PROTOBUF_BaseAttrRpc_2eproto__INCLUDED
#define PROTOBUF_BaseAttrRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BaseAttrRpc_2eproto();
void protobuf_AssignDesc_BaseAttrRpc_2eproto();
void protobuf_ShutdownFile_BaseAttrRpc_2eproto();

class BaseAttrRpcSyncDataAsk;
class BaseAttrRpcSyncDataReply;
class BaseAttrRpcSyncNotify;

// ===================================================================

class BaseAttrRpcSyncDataAsk : public ::google::protobuf::Message {
 public:
  BaseAttrRpcSyncDataAsk();
  virtual ~BaseAttrRpcSyncDataAsk();

  BaseAttrRpcSyncDataAsk(const BaseAttrRpcSyncDataAsk& from);

  inline BaseAttrRpcSyncDataAsk& operator=(const BaseAttrRpcSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseAttrRpcSyncDataAsk& default_instance();

  void Swap(BaseAttrRpcSyncDataAsk* other);

  // implements Message ----------------------------------------------

  BaseAttrRpcSyncDataAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseAttrRpcSyncDataAsk& from);
  void MergeFrom(const BaseAttrRpcSyncDataAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:BaseAttrRpcSyncDataAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BaseAttrRpc_2eproto();
  friend void protobuf_AssignDesc_BaseAttrRpc_2eproto();
  friend void protobuf_ShutdownFile_BaseAttrRpc_2eproto();

  void InitAsDefaultInstance();
  static BaseAttrRpcSyncDataAsk* default_instance_;
};
// -------------------------------------------------------------------

class BaseAttrRpcSyncDataReply : public ::google::protobuf::Message {
 public:
  BaseAttrRpcSyncDataReply();
  virtual ~BaseAttrRpcSyncDataReply();

  BaseAttrRpcSyncDataReply(const BaseAttrRpcSyncDataReply& from);

  inline BaseAttrRpcSyncDataReply& operator=(const BaseAttrRpcSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseAttrRpcSyncDataReply& default_instance();

  void Swap(BaseAttrRpcSyncDataReply* other);

  // implements Message ----------------------------------------------

  BaseAttrRpcSyncDataReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseAttrRpcSyncDataReply& from);
  void MergeFrom(const BaseAttrRpcSyncDataReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes UpdateData = 2;
  inline bool has_updatedata() const;
  inline void clear_updatedata();
  static const int kUpdateDataFieldNumber = 2;
  inline const ::std::string& updatedata() const;
  inline void set_updatedata(const ::std::string& value);
  inline void set_updatedata(const char* value);
  inline void set_updatedata(const void* value, size_t size);
  inline ::std::string* mutable_updatedata();
  inline ::std::string* release_updatedata();
  inline void set_allocated_updatedata(::std::string* updatedata);

  // @@protoc_insertion_point(class_scope:BaseAttrRpcSyncDataReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_updatedata();
  inline void clear_has_updatedata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* updatedata_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BaseAttrRpc_2eproto();
  friend void protobuf_AssignDesc_BaseAttrRpc_2eproto();
  friend void protobuf_ShutdownFile_BaseAttrRpc_2eproto();

  void InitAsDefaultInstance();
  static BaseAttrRpcSyncDataReply* default_instance_;
};
// -------------------------------------------------------------------

class BaseAttrRpcSyncNotify : public ::google::protobuf::Message {
 public:
  BaseAttrRpcSyncNotify();
  virtual ~BaseAttrRpcSyncNotify();

  BaseAttrRpcSyncNotify(const BaseAttrRpcSyncNotify& from);

  inline BaseAttrRpcSyncNotify& operator=(const BaseAttrRpcSyncNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseAttrRpcSyncNotify& default_instance();

  void Swap(BaseAttrRpcSyncNotify* other);

  // implements Message ----------------------------------------------

  BaseAttrRpcSyncNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseAttrRpcSyncNotify& from);
  void MergeFrom(const BaseAttrRpcSyncNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ObjId = 2 [default = 0];
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::uint64 objid() const;
  inline void set_objid(::google::protobuf::uint64 value);

  // optional bytes UpdateData = 3;
  inline bool has_updatedata() const;
  inline void clear_updatedata();
  static const int kUpdateDataFieldNumber = 3;
  inline const ::std::string& updatedata() const;
  inline void set_updatedata(const ::std::string& value);
  inline void set_updatedata(const char* value);
  inline void set_updatedata(const void* value, size_t size);
  inline ::std::string* mutable_updatedata();
  inline ::std::string* release_updatedata();
  inline void set_allocated_updatedata(::std::string* updatedata);

  // @@protoc_insertion_point(class_scope:BaseAttrRpcSyncNotify)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_updatedata();
  inline void clear_has_updatedata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 objid_;
  ::std::string* updatedata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BaseAttrRpc_2eproto();
  friend void protobuf_AssignDesc_BaseAttrRpc_2eproto();
  friend void protobuf_ShutdownFile_BaseAttrRpc_2eproto();

  void InitAsDefaultInstance();
  static BaseAttrRpcSyncNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// BaseAttrRpcSyncDataAsk

// -------------------------------------------------------------------

// BaseAttrRpcSyncDataReply

// optional int32 Result = 1 [default = -9999];
inline bool BaseAttrRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseAttrRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseAttrRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseAttrRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 BaseAttrRpcSyncDataReply::result() const {
  return result_;
}
inline void BaseAttrRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bytes UpdateData = 2;
inline bool BaseAttrRpcSyncDataReply::has_updatedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseAttrRpcSyncDataReply::set_has_updatedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseAttrRpcSyncDataReply::clear_has_updatedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseAttrRpcSyncDataReply::clear_updatedata() {
  if (updatedata_ != &::google::protobuf::internal::kEmptyString) {
    updatedata_->clear();
  }
  clear_has_updatedata();
}
inline const ::std::string& BaseAttrRpcSyncDataReply::updatedata() const {
  return *updatedata_;
}
inline void BaseAttrRpcSyncDataReply::set_updatedata(const ::std::string& value) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(value);
}
inline void BaseAttrRpcSyncDataReply::set_updatedata(const char* value) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(value);
}
inline void BaseAttrRpcSyncDataReply::set_updatedata(const void* value, size_t size) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseAttrRpcSyncDataReply::mutable_updatedata() {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  return updatedata_;
}
inline ::std::string* BaseAttrRpcSyncDataReply::release_updatedata() {
  clear_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = updatedata_;
    updatedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaseAttrRpcSyncDataReply::set_allocated_updatedata(::std::string* updatedata) {
  if (updatedata_ != &::google::protobuf::internal::kEmptyString) {
    delete updatedata_;
  }
  if (updatedata) {
    set_has_updatedata();
    updatedata_ = updatedata;
  } else {
    clear_has_updatedata();
    updatedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BaseAttrRpcSyncNotify

// optional uint64 ObjId = 2 [default = 0];
inline bool BaseAttrRpcSyncNotify::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseAttrRpcSyncNotify::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseAttrRpcSyncNotify::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseAttrRpcSyncNotify::clear_objid() {
  objid_ = GOOGLE_ULONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::uint64 BaseAttrRpcSyncNotify::objid() const {
  return objid_;
}
inline void BaseAttrRpcSyncNotify::set_objid(::google::protobuf::uint64 value) {
  set_has_objid();
  objid_ = value;
}

// optional bytes UpdateData = 3;
inline bool BaseAttrRpcSyncNotify::has_updatedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseAttrRpcSyncNotify::set_has_updatedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseAttrRpcSyncNotify::clear_has_updatedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseAttrRpcSyncNotify::clear_updatedata() {
  if (updatedata_ != &::google::protobuf::internal::kEmptyString) {
    updatedata_->clear();
  }
  clear_has_updatedata();
}
inline const ::std::string& BaseAttrRpcSyncNotify::updatedata() const {
  return *updatedata_;
}
inline void BaseAttrRpcSyncNotify::set_updatedata(const ::std::string& value) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(value);
}
inline void BaseAttrRpcSyncNotify::set_updatedata(const char* value) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(value);
}
inline void BaseAttrRpcSyncNotify::set_updatedata(const void* value, size_t size) {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  updatedata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseAttrRpcSyncNotify::mutable_updatedata() {
  set_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    updatedata_ = new ::std::string;
  }
  return updatedata_;
}
inline ::std::string* BaseAttrRpcSyncNotify::release_updatedata() {
  clear_has_updatedata();
  if (updatedata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = updatedata_;
    updatedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaseAttrRpcSyncNotify::set_allocated_updatedata(::std::string* updatedata) {
  if (updatedata_ != &::google::protobuf::internal::kEmptyString) {
    delete updatedata_;
  }
  if (updatedata) {
    set_has_updatedata();
    updatedata_ = updatedata;
  } else {
    clear_has_updatedata();
    updatedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BaseAttrRpc_2eproto__INCLUDED
