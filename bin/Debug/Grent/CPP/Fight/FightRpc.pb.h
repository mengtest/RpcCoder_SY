// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FightRpc.proto

#ifndef PROTOBUF_FightRpc_2eproto__INCLUDED
#define PROTOBUF_FightRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FightRpc_2eproto();
void protobuf_AssignDesc_FightRpc_2eproto();
void protobuf_ShutdownFile_FightRpc_2eproto();

class FightRpcUseSkillActionNotify;

// ===================================================================

class FightRpcUseSkillActionNotify : public ::google::protobuf::Message {
 public:
  FightRpcUseSkillActionNotify();
  virtual ~FightRpcUseSkillActionNotify();

  FightRpcUseSkillActionNotify(const FightRpcUseSkillActionNotify& from);

  inline FightRpcUseSkillActionNotify& operator=(const FightRpcUseSkillActionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightRpcUseSkillActionNotify& default_instance();

  void Swap(FightRpcUseSkillActionNotify* other);

  // implements Message ----------------------------------------------

  FightRpcUseSkillActionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightRpcUseSkillActionNotify& from);
  void MergeFrom(const FightRpcUseSkillActionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 ObjTargetId = 1 [default = -1];
  inline bool has_objtargetid() const;
  inline void clear_objtargetid();
  static const int kObjTargetIdFieldNumber = 1;
  inline ::google::protobuf::int32 objtargetid() const;
  inline void set_objtargetid(::google::protobuf::int32 value);

  // optional sint32 SkillId = 2 [default = -1];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional sint32 X = 3 [default = -1];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional sint32 Y = 4 [default = -1];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional sint32 Dir = 5 [default = -1];
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline ::google::protobuf::int32 dir() const;
  inline void set_dir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FightRpcUseSkillActionNotify)
 private:
  inline void set_has_objtargetid();
  inline void clear_has_objtargetid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objtargetid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_FightRpc_2eproto();
  friend void protobuf_AssignDesc_FightRpc_2eproto();
  friend void protobuf_ShutdownFile_FightRpc_2eproto();

  void InitAsDefaultInstance();
  static FightRpcUseSkillActionNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// FightRpcUseSkillActionNotify

// optional sint32 ObjTargetId = 1 [default = -1];
inline bool FightRpcUseSkillActionNotify::has_objtargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightRpcUseSkillActionNotify::set_has_objtargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightRpcUseSkillActionNotify::clear_has_objtargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightRpcUseSkillActionNotify::clear_objtargetid() {
  objtargetid_ = -1;
  clear_has_objtargetid();
}
inline ::google::protobuf::int32 FightRpcUseSkillActionNotify::objtargetid() const {
  return objtargetid_;
}
inline void FightRpcUseSkillActionNotify::set_objtargetid(::google::protobuf::int32 value) {
  set_has_objtargetid();
  objtargetid_ = value;
}

// optional sint32 SkillId = 2 [default = -1];
inline bool FightRpcUseSkillActionNotify::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightRpcUseSkillActionNotify::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightRpcUseSkillActionNotify::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightRpcUseSkillActionNotify::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
inline ::google::protobuf::int32 FightRpcUseSkillActionNotify::skillid() const {
  return skillid_;
}
inline void FightRpcUseSkillActionNotify::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional sint32 X = 3 [default = -1];
inline bool FightRpcUseSkillActionNotify::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightRpcUseSkillActionNotify::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightRpcUseSkillActionNotify::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightRpcUseSkillActionNotify::clear_x() {
  x_ = -1;
  clear_has_x();
}
inline ::google::protobuf::int32 FightRpcUseSkillActionNotify::x() const {
  return x_;
}
inline void FightRpcUseSkillActionNotify::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// optional sint32 Y = 4 [default = -1];
inline bool FightRpcUseSkillActionNotify::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightRpcUseSkillActionNotify::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightRpcUseSkillActionNotify::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightRpcUseSkillActionNotify::clear_y() {
  y_ = -1;
  clear_has_y();
}
inline ::google::protobuf::int32 FightRpcUseSkillActionNotify::y() const {
  return y_;
}
inline void FightRpcUseSkillActionNotify::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// optional sint32 Dir = 5 [default = -1];
inline bool FightRpcUseSkillActionNotify::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightRpcUseSkillActionNotify::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightRpcUseSkillActionNotify::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightRpcUseSkillActionNotify::clear_dir() {
  dir_ = -1;
  clear_has_dir();
}
inline ::google::protobuf::int32 FightRpcUseSkillActionNotify::dir() const {
  return dir_;
}
inline void FightRpcUseSkillActionNotify::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FightRpc_2eproto__INCLUDED
