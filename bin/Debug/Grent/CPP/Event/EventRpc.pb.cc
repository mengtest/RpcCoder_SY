// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EventRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EventRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EventRpcMoveNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventRpcMoveNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventRpcStopMoveNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventRpcStopMoveNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventRpcObjAttrChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventRpcObjAttrChangeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EventRpc_2eproto() {
  protobuf_AddDesc_EventRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EventRpc.proto");
  GOOGLE_CHECK(file != NULL);
  EventRpcMoveNotify_descriptor_ = file->message_type(0);
  static const int EventRpcMoveNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcMoveNotify, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcMoveNotify, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcMoveNotify, dir_),
  };
  EventRpcMoveNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventRpcMoveNotify_descriptor_,
      EventRpcMoveNotify::default_instance_,
      EventRpcMoveNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcMoveNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcMoveNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventRpcMoveNotify));
  EventRpcStopMoveNotify_descriptor_ = file->message_type(1);
  static const int EventRpcStopMoveNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcStopMoveNotify, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcStopMoveNotify, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcStopMoveNotify, dir_),
  };
  EventRpcStopMoveNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventRpcStopMoveNotify_descriptor_,
      EventRpcStopMoveNotify::default_instance_,
      EventRpcStopMoveNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcStopMoveNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcStopMoveNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventRpcStopMoveNotify));
  EventRpcObjAttrChangeNotify_descriptor_ = file->message_type(2);
  static const int EventRpcObjAttrChangeNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, configid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, objid_),
  };
  EventRpcObjAttrChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventRpcObjAttrChangeNotify_descriptor_,
      EventRpcObjAttrChangeNotify::default_instance_,
      EventRpcObjAttrChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventRpcObjAttrChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventRpcObjAttrChangeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EventRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventRpcMoveNotify_descriptor_, &EventRpcMoveNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventRpcStopMoveNotify_descriptor_, &EventRpcStopMoveNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventRpcObjAttrChangeNotify_descriptor_, &EventRpcObjAttrChangeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EventRpc_2eproto() {
  delete EventRpcMoveNotify::default_instance_;
  delete EventRpcMoveNotify_reflection_;
  delete EventRpcStopMoveNotify::default_instance_;
  delete EventRpcStopMoveNotify_reflection_;
  delete EventRpcObjAttrChangeNotify::default_instance_;
  delete EventRpcObjAttrChangeNotify_reflection_;
}

void protobuf_AddDesc_EventRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016EventRpc.proto\032\022PublicStruct.proto\"J\n\022"
    "EventRpcMoveNotify\022\021\n\005ObjId\030\001 \001(\021:\002-1\022\020\n"
    "\003Pos\030\002 \001(\0132\003.V3\022\017\n\003Dir\030\003 \001(\002:\002-1\"N\n\026Even"
    "tRpcStopMoveNotify\022\021\n\005ObjId\030\001 \001(\021:\002-1\022\020\n"
    "\003Pos\030\002 \001(\0132\003.V3\022\017\n\003Dir\030\003 \001(\002:\002-1\"}\n\033Even"
    "tRpcObjAttrChangeNotify\022\021\n\005Speed\030\001 \001(\002:\002"
    "-1\022\016\n\002Hp\030\002 \001(\022:\002-1\022\022\n\006Status\030\003 \001(\021:\002-1\022\024"
    "\n\010ConfigId\030\004 \001(\021:\002-1\022\021\n\005ObjId\030\005 \001(\021:\002-1", 319);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EventRpc.proto", &protobuf_RegisterTypes);
  EventRpcMoveNotify::default_instance_ = new EventRpcMoveNotify();
  EventRpcStopMoveNotify::default_instance_ = new EventRpcStopMoveNotify();
  EventRpcObjAttrChangeNotify::default_instance_ = new EventRpcObjAttrChangeNotify();
  EventRpcMoveNotify::default_instance_->InitAsDefaultInstance();
  EventRpcStopMoveNotify::default_instance_->InitAsDefaultInstance();
  EventRpcObjAttrChangeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EventRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EventRpc_2eproto {
  StaticDescriptorInitializer_EventRpc_2eproto() {
    protobuf_AddDesc_EventRpc_2eproto();
  }
} static_descriptor_initializer_EventRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EventRpcMoveNotify::kObjIdFieldNumber;
const int EventRpcMoveNotify::kPosFieldNumber;
const int EventRpcMoveNotify::kDirFieldNumber;
#endif  // !_MSC_VER

EventRpcMoveNotify::EventRpcMoveNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventRpcMoveNotify::InitAsDefaultInstance() {
  pos_ = const_cast< ::V3*>(&::V3::default_instance());
}

EventRpcMoveNotify::EventRpcMoveNotify(const EventRpcMoveNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventRpcMoveNotify::SharedCtor() {
  _cached_size_ = 0;
  objid_ = -1;
  pos_ = NULL;
  dir_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventRpcMoveNotify::~EventRpcMoveNotify() {
  SharedDtor();
}

void EventRpcMoveNotify::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void EventRpcMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventRpcMoveNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventRpcMoveNotify_descriptor_;
}

const EventRpcMoveNotify& EventRpcMoveNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventRpc_2eproto();
  return *default_instance_;
}

EventRpcMoveNotify* EventRpcMoveNotify::default_instance_ = NULL;

EventRpcMoveNotify* EventRpcMoveNotify::New() const {
  return new EventRpcMoveNotify;
}

void EventRpcMoveNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = -1;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::V3::Clear();
    }
    dir_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventRpcMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ObjId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Pos;
        break;
      }

      // optional .V3 Pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_Dir;
        break;
      }

      // optional float Dir = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventRpcMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional sint32 ObjId = 1 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->objid(), output);
  }

  // optional .V3 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pos(), output);
  }

  // optional float Dir = 3 [default = -1];
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dir(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventRpcMoveNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional sint32 ObjId = 1 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->objid(), target);
  }

  // optional .V3 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pos(), target);
  }

  // optional float Dir = 3 [default = -1];
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dir(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventRpcMoveNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 ObjId = 1 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->objid());
    }

    // optional .V3 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional float Dir = 3 [default = -1];
    if (has_dir()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventRpcMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventRpcMoveNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventRpcMoveNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventRpcMoveNotify::MergeFrom(const EventRpcMoveNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_pos()) {
      mutable_pos()->::V3::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventRpcMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventRpcMoveNotify::CopyFrom(const EventRpcMoveNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventRpcMoveNotify::IsInitialized() const {

  return true;
}

void EventRpcMoveNotify::Swap(EventRpcMoveNotify* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(pos_, other->pos_);
    std::swap(dir_, other->dir_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventRpcMoveNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventRpcMoveNotify_descriptor_;
  metadata.reflection = EventRpcMoveNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventRpcStopMoveNotify::kObjIdFieldNumber;
const int EventRpcStopMoveNotify::kPosFieldNumber;
const int EventRpcStopMoveNotify::kDirFieldNumber;
#endif  // !_MSC_VER

EventRpcStopMoveNotify::EventRpcStopMoveNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventRpcStopMoveNotify::InitAsDefaultInstance() {
  pos_ = const_cast< ::V3*>(&::V3::default_instance());
}

EventRpcStopMoveNotify::EventRpcStopMoveNotify(const EventRpcStopMoveNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventRpcStopMoveNotify::SharedCtor() {
  _cached_size_ = 0;
  objid_ = -1;
  pos_ = NULL;
  dir_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventRpcStopMoveNotify::~EventRpcStopMoveNotify() {
  SharedDtor();
}

void EventRpcStopMoveNotify::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void EventRpcStopMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventRpcStopMoveNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventRpcStopMoveNotify_descriptor_;
}

const EventRpcStopMoveNotify& EventRpcStopMoveNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventRpc_2eproto();
  return *default_instance_;
}

EventRpcStopMoveNotify* EventRpcStopMoveNotify::default_instance_ = NULL;

EventRpcStopMoveNotify* EventRpcStopMoveNotify::New() const {
  return new EventRpcStopMoveNotify;
}

void EventRpcStopMoveNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = -1;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::V3::Clear();
    }
    dir_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventRpcStopMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ObjId = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Pos;
        break;
      }

      // optional .V3 Pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_Dir;
        break;
      }

      // optional float Dir = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventRpcStopMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional sint32 ObjId = 1 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->objid(), output);
  }

  // optional .V3 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pos(), output);
  }

  // optional float Dir = 3 [default = -1];
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dir(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventRpcStopMoveNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional sint32 ObjId = 1 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->objid(), target);
  }

  // optional .V3 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pos(), target);
  }

  // optional float Dir = 3 [default = -1];
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dir(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventRpcStopMoveNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 ObjId = 1 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->objid());
    }

    // optional .V3 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // optional float Dir = 3 [default = -1];
    if (has_dir()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventRpcStopMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventRpcStopMoveNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventRpcStopMoveNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventRpcStopMoveNotify::MergeFrom(const EventRpcStopMoveNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_pos()) {
      mutable_pos()->::V3::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventRpcStopMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventRpcStopMoveNotify::CopyFrom(const EventRpcStopMoveNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventRpcStopMoveNotify::IsInitialized() const {

  return true;
}

void EventRpcStopMoveNotify::Swap(EventRpcStopMoveNotify* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(pos_, other->pos_);
    std::swap(dir_, other->dir_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventRpcStopMoveNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventRpcStopMoveNotify_descriptor_;
  metadata.reflection = EventRpcStopMoveNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EventRpcObjAttrChangeNotify::kSpeedFieldNumber;
const int EventRpcObjAttrChangeNotify::kHpFieldNumber;
const int EventRpcObjAttrChangeNotify::kStatusFieldNumber;
const int EventRpcObjAttrChangeNotify::kConfigIdFieldNumber;
const int EventRpcObjAttrChangeNotify::kObjIdFieldNumber;
#endif  // !_MSC_VER

EventRpcObjAttrChangeNotify::EventRpcObjAttrChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventRpcObjAttrChangeNotify::InitAsDefaultInstance() {
}

EventRpcObjAttrChangeNotify::EventRpcObjAttrChangeNotify(const EventRpcObjAttrChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventRpcObjAttrChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  speed_ = -1;
  hp_ = GOOGLE_LONGLONG(-1);
  status_ = -1;
  configid_ = -1;
  objid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventRpcObjAttrChangeNotify::~EventRpcObjAttrChangeNotify() {
  SharedDtor();
}

void EventRpcObjAttrChangeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventRpcObjAttrChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventRpcObjAttrChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventRpcObjAttrChangeNotify_descriptor_;
}

const EventRpcObjAttrChangeNotify& EventRpcObjAttrChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EventRpc_2eproto();
  return *default_instance_;
}

EventRpcObjAttrChangeNotify* EventRpcObjAttrChangeNotify::default_instance_ = NULL;

EventRpcObjAttrChangeNotify* EventRpcObjAttrChangeNotify::New() const {
  return new EventRpcObjAttrChangeNotify;
}

void EventRpcObjAttrChangeNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    speed_ = -1;
    hp_ = GOOGLE_LONGLONG(-1);
    status_ = -1;
    configid_ = -1;
    objid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventRpcObjAttrChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float Speed = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Hp;
        break;
      }

      // optional sint64 Hp = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional sint32 Status = 3 [default = -1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ConfigId;
        break;
      }

      // optional sint32 ConfigId = 4 [default = -1];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ConfigId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &configid_)));
          set_has_configid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ObjId;
        break;
      }

      // optional sint32 ObjId = 5 [default = -1];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventRpcObjAttrChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional float Speed = 1 [default = -1];
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->speed(), output);
  }

  // optional sint64 Hp = 2 [default = -1];
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->hp(), output);
  }

  // optional sint32 Status = 3 [default = -1];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->status(), output);
  }

  // optional sint32 ConfigId = 4 [default = -1];
  if (has_configid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->configid(), output);
  }

  // optional sint32 ObjId = 5 [default = -1];
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventRpcObjAttrChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional float Speed = 1 [default = -1];
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->speed(), target);
  }

  // optional sint64 Hp = 2 [default = -1];
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->hp(), target);
  }

  // optional sint32 Status = 3 [default = -1];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->status(), target);
  }

  // optional sint32 ConfigId = 4 [default = -1];
  if (has_configid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->configid(), target);
  }

  // optional sint32 ObjId = 5 [default = -1];
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventRpcObjAttrChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float Speed = 1 [default = -1];
    if (has_speed()) {
      total_size += 1 + 4;
    }

    // optional sint64 Hp = 2 [default = -1];
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->hp());
    }

    // optional sint32 Status = 3 [default = -1];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->status());
    }

    // optional sint32 ConfigId = 4 [default = -1];
    if (has_configid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->configid());
    }

    // optional sint32 ObjId = 5 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->objid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventRpcObjAttrChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventRpcObjAttrChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventRpcObjAttrChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventRpcObjAttrChangeNotify::MergeFrom(const EventRpcObjAttrChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_configid()) {
      set_configid(from.configid());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventRpcObjAttrChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventRpcObjAttrChangeNotify::CopyFrom(const EventRpcObjAttrChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventRpcObjAttrChangeNotify::IsInitialized() const {

  return true;
}

void EventRpcObjAttrChangeNotify::Swap(EventRpcObjAttrChangeNotify* other) {
  if (other != this) {
    std::swap(speed_, other->speed_);
    std::swap(hp_, other->hp_);
    std::swap(status_, other->status_);
    std::swap(configid_, other->configid_);
    std::swap(objid_, other->objid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventRpcObjAttrChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventRpcObjAttrChangeNotify_descriptor_;
  metadata.reflection = EventRpcObjAttrChangeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
