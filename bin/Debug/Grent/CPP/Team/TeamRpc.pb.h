// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamRpc.proto

#ifndef PROTOBUF_TeamRpc_2eproto__INCLUDED
#define PROTOBUF_TeamRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TeamRpc_2eproto();
void protobuf_AssignDesc_TeamRpc_2eproto();
void protobuf_ShutdownFile_TeamRpc_2eproto();

class TeamRpcCreateTeamAsk;
class TeamRpcCreateTeamReply;
class TeamRpcJoinTeamAsk;
class TeamRpcJoinTeamReply;
class TeamRpcLeaveTeamAsk;
class TeamRpcLeaveTeamReply;
class TeamRpcAppointTeamLeaderAsk;
class TeamRpcAppointTeamLeaderReply;
class TeamRpcNewLeaderNotify;
class TeamRpcKickMemberAsk;
class TeamRpcKickMemberReply;
class TeamRpcDissmissTeamAsk;
class TeamRpcDissmissTeamReply;
class TeamRpcAppointTeamLeaderNotify;
class TeamRpcKickMemberNotifyNotify;
class TeamRpcLeaveTeamNotifyNotify;
class TeamRpcJoinTeamNotifyNotify;
class TeamRpcDissmissTeamNotifyNotify;
class TeamRpcSurroundingTeamAsk;
class TeamRpcSurroundingTeamReply;
class TeamRpcApplyTeamAsk;
class TeamRpcApplyTeamReply;
class TeamRpcApplyTeamNotifyNotify;
class TeamRpcAgreeApplicantAsk;
class TeamRpcAgreeApplicantReply;
class TeamRpcAgreeApplicantNotifyNotify;
class TeamRpcTeamInfoNotify;
class TeamRpcUpdateTeamMemInfoNotify;

// ===================================================================

class TeamRpcCreateTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcCreateTeamAsk();
  virtual ~TeamRpcCreateTeamAsk();

  TeamRpcCreateTeamAsk(const TeamRpcCreateTeamAsk& from);

  inline TeamRpcCreateTeamAsk& operator=(const TeamRpcCreateTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcCreateTeamAsk& default_instance();

  void Swap(TeamRpcCreateTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcCreateTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcCreateTeamAsk& from);
  void MergeFrom(const TeamRpcCreateTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TeamType = 2 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 2;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcCreateTeamAsk)
 private:
  inline void set_has_teamtype();
  inline void clear_has_teamtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcCreateTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcCreateTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcCreateTeamReply();
  virtual ~TeamRpcCreateTeamReply();

  TeamRpcCreateTeamReply(const TeamRpcCreateTeamReply& from);

  inline TeamRpcCreateTeamReply& operator=(const TeamRpcCreateTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcCreateTeamReply& default_instance();

  void Swap(TeamRpcCreateTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcCreateTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcCreateTeamReply& from);
  void MergeFrom(const TeamRpcCreateTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TeamInfo Team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcCreateTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcCreateTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcJoinTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcJoinTeamAsk();
  virtual ~TeamRpcJoinTeamAsk();

  TeamRpcJoinTeamAsk(const TeamRpcJoinTeamAsk& from);

  inline TeamRpcJoinTeamAsk& operator=(const TeamRpcJoinTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcJoinTeamAsk& default_instance();

  void Swap(TeamRpcJoinTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcJoinTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcJoinTeamAsk& from);
  void MergeFrom(const TeamRpcJoinTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TeamId = 1 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional sint32 TeamType = 2 [default = -1];
  inline bool has_teamtype() const;
  inline void clear_teamtype();
  static const int kTeamTypeFieldNumber = 2;
  inline ::google::protobuf::int32 teamtype() const;
  inline void set_teamtype(::google::protobuf::int32 value);

  // optional .TeamInfo Team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // optional .TeamMemberInfo TeamMember = 4;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 4;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcJoinTeamAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teamtype();
  inline void clear_has_teamtype();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 teamtype_;
  ::TeamInfo* team_;
  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcJoinTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcJoinTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcJoinTeamReply();
  virtual ~TeamRpcJoinTeamReply();

  TeamRpcJoinTeamReply(const TeamRpcJoinTeamReply& from);

  inline TeamRpcJoinTeamReply& operator=(const TeamRpcJoinTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcJoinTeamReply& default_instance();

  void Swap(TeamRpcJoinTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcJoinTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcJoinTeamReply& from);
  void MergeFrom(const TeamRpcJoinTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .TeamInfo Team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcJoinTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcJoinTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamAsk();
  virtual ~TeamRpcLeaveTeamAsk();

  TeamRpcLeaveTeamAsk(const TeamRpcLeaveTeamAsk& from);

  inline TeamRpcLeaveTeamAsk& operator=(const TeamRpcLeaveTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamAsk& default_instance();

  void Swap(TeamRpcLeaveTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamAsk& from);
  void MergeFrom(const TeamRpcLeaveTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamReply();
  virtual ~TeamRpcLeaveTeamReply();

  TeamRpcLeaveTeamReply(const TeamRpcLeaveTeamReply& from);

  inline TeamRpcLeaveTeamReply& operator=(const TeamRpcLeaveTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamReply& default_instance();

  void Swap(TeamRpcLeaveTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamReply& from);
  void MergeFrom(const TeamRpcLeaveTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderAsk : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderAsk();
  virtual ~TeamRpcAppointTeamLeaderAsk();

  TeamRpcAppointTeamLeaderAsk(const TeamRpcAppointTeamLeaderAsk& from);

  inline TeamRpcAppointTeamLeaderAsk& operator=(const TeamRpcAppointTeamLeaderAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderAsk& default_instance();

  void Swap(TeamRpcAppointTeamLeaderAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderAsk& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderReply : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderReply();
  virtual ~TeamRpcAppointTeamLeaderReply();

  TeamRpcAppointTeamLeaderReply(const TeamRpcAppointTeamLeaderReply& from);

  inline TeamRpcAppointTeamLeaderReply& operator=(const TeamRpcAppointTeamLeaderReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderReply& default_instance();

  void Swap(TeamRpcAppointTeamLeaderReply* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderReply& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 NewLeaderId = 2 [default = 0];
  inline bool has_newleaderid() const;
  inline void clear_newleaderid();
  static const int kNewLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 newleaderid() const;
  inline void set_newleaderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newleaderid();
  inline void clear_has_newleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 newleaderid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcNewLeaderNotify : public ::google::protobuf::Message {
 public:
  TeamRpcNewLeaderNotify();
  virtual ~TeamRpcNewLeaderNotify();

  TeamRpcNewLeaderNotify(const TeamRpcNewLeaderNotify& from);

  inline TeamRpcNewLeaderNotify& operator=(const TeamRpcNewLeaderNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcNewLeaderNotify& default_instance();

  void Swap(TeamRpcNewLeaderNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcNewLeaderNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcNewLeaderNotify& from);
  void MergeFrom(const TeamRpcNewLeaderNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Newleaderroleid = 1 [default = 0];
  inline bool has_newleaderroleid() const;
  inline void clear_newleaderroleid();
  static const int kNewleaderroleidFieldNumber = 1;
  inline ::google::protobuf::uint64 newleaderroleid() const;
  inline void set_newleaderroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcNewLeaderNotify)
 private:
  inline void set_has_newleaderroleid();
  inline void clear_has_newleaderroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 newleaderroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcNewLeaderNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberAsk : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberAsk();
  virtual ~TeamRpcKickMemberAsk();

  TeamRpcKickMemberAsk(const TeamRpcKickMemberAsk& from);

  inline TeamRpcKickMemberAsk& operator=(const TeamRpcKickMemberAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberAsk& default_instance();

  void Swap(TeamRpcKickMemberAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberAsk& from);
  void MergeFrom(const TeamRpcKickMemberAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 KickMemberRoleId = 1 [default = 0];
  inline bool has_kickmemberroleid() const;
  inline void clear_kickmemberroleid();
  static const int kKickMemberRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kickmemberroleid() const;
  inline void set_kickmemberroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberAsk)
 private:
  inline void set_has_kickmemberroleid();
  inline void clear_has_kickmemberroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kickmemberroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberReply : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberReply();
  virtual ~TeamRpcKickMemberReply();

  TeamRpcKickMemberReply(const TeamRpcKickMemberReply& from);

  inline TeamRpcKickMemberReply& operator=(const TeamRpcKickMemberReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberReply& default_instance();

  void Swap(TeamRpcKickMemberReply* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberReply& from);
  void MergeFrom(const TeamRpcKickMemberReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamAsk();
  virtual ~TeamRpcDissmissTeamAsk();

  TeamRpcDissmissTeamAsk(const TeamRpcDissmissTeamAsk& from);

  inline TeamRpcDissmissTeamAsk& operator=(const TeamRpcDissmissTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamAsk& default_instance();

  void Swap(TeamRpcDissmissTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamAsk& from);
  void MergeFrom(const TeamRpcDissmissTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamReply();
  virtual ~TeamRpcDissmissTeamReply();

  TeamRpcDissmissTeamReply(const TeamRpcDissmissTeamReply& from);

  inline TeamRpcDissmissTeamReply& operator=(const TeamRpcDissmissTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamReply& default_instance();

  void Swap(TeamRpcDissmissTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamReply& from);
  void MergeFrom(const TeamRpcDissmissTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAppointTeamLeaderNotify : public ::google::protobuf::Message {
 public:
  TeamRpcAppointTeamLeaderNotify();
  virtual ~TeamRpcAppointTeamLeaderNotify();

  TeamRpcAppointTeamLeaderNotify(const TeamRpcAppointTeamLeaderNotify& from);

  inline TeamRpcAppointTeamLeaderNotify& operator=(const TeamRpcAppointTeamLeaderNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAppointTeamLeaderNotify& default_instance();

  void Swap(TeamRpcAppointTeamLeaderNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcAppointTeamLeaderNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAppointTeamLeaderNotify& from);
  void MergeFrom(const TeamRpcAppointTeamLeaderNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcAppointTeamLeaderNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAppointTeamLeaderNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcKickMemberNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcKickMemberNotifyNotify();
  virtual ~TeamRpcKickMemberNotifyNotify();

  TeamRpcKickMemberNotifyNotify(const TeamRpcKickMemberNotifyNotify& from);

  inline TeamRpcKickMemberNotifyNotify& operator=(const TeamRpcKickMemberNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcKickMemberNotifyNotify& default_instance();

  void Swap(TeamRpcKickMemberNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcKickMemberNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcKickMemberNotifyNotify& from);
  void MergeFrom(const TeamRpcKickMemberNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 KickedMemberRoleId = 1 [default = 0];
  inline bool has_kickedmemberroleid() const;
  inline void clear_kickedmemberroleid();
  static const int kKickedMemberRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 kickedmemberroleid() const;
  inline void set_kickedmemberroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcKickMemberNotifyNotify)
 private:
  inline void set_has_kickedmemberroleid();
  inline void clear_has_kickedmemberroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kickedmemberroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcKickMemberNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcLeaveTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcLeaveTeamNotifyNotify();
  virtual ~TeamRpcLeaveTeamNotifyNotify();

  TeamRpcLeaveTeamNotifyNotify(const TeamRpcLeaveTeamNotifyNotify& from);

  inline TeamRpcLeaveTeamNotifyNotify& operator=(const TeamRpcLeaveTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcLeaveTeamNotifyNotify& default_instance();

  void Swap(TeamRpcLeaveTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcLeaveTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcLeaveTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcLeaveTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 1 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional uint64 NewLeaderRoleId = 2 [default = 0];
  inline bool has_newleaderroleid() const;
  inline void clear_newleaderroleid();
  static const int kNewLeaderRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 newleaderroleid() const;
  inline void set_newleaderroleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcLeaveTeamNotifyNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_newleaderroleid();
  inline void clear_has_newleaderroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint64 newleaderroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcLeaveTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcJoinTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcJoinTeamNotifyNotify();
  virtual ~TeamRpcJoinTeamNotifyNotify();

  TeamRpcJoinTeamNotifyNotify(const TeamRpcJoinTeamNotifyNotify& from);

  inline TeamRpcJoinTeamNotifyNotify& operator=(const TeamRpcJoinTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcJoinTeamNotifyNotify& default_instance();

  void Swap(TeamRpcJoinTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcJoinTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcJoinTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcJoinTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcJoinTeamNotifyNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcJoinTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcDissmissTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcDissmissTeamNotifyNotify();
  virtual ~TeamRpcDissmissTeamNotifyNotify();

  TeamRpcDissmissTeamNotifyNotify(const TeamRpcDissmissTeamNotifyNotify& from);

  inline TeamRpcDissmissTeamNotifyNotify& operator=(const TeamRpcDissmissTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcDissmissTeamNotifyNotify& default_instance();

  void Swap(TeamRpcDissmissTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcDissmissTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcDissmissTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcDissmissTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcDissmissTeamNotifyNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcDissmissTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSurroundingTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcSurroundingTeamAsk();
  virtual ~TeamRpcSurroundingTeamAsk();

  TeamRpcSurroundingTeamAsk(const TeamRpcSurroundingTeamAsk& from);

  inline TeamRpcSurroundingTeamAsk& operator=(const TeamRpcSurroundingTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSurroundingTeamAsk& default_instance();

  void Swap(TeamRpcSurroundingTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcSurroundingTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSurroundingTeamAsk& from);
  void MergeFrom(const TeamRpcSurroundingTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TeamRpcSurroundingTeamAsk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSurroundingTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcSurroundingTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcSurroundingTeamReply();
  virtual ~TeamRpcSurroundingTeamReply();

  TeamRpcSurroundingTeamReply(const TeamRpcSurroundingTeamReply& from);

  inline TeamRpcSurroundingTeamReply& operator=(const TeamRpcSurroundingTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcSurroundingTeamReply& default_instance();

  void Swap(TeamRpcSurroundingTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcSurroundingTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcSurroundingTeamReply& from);
  void MergeFrom(const TeamRpcSurroundingTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .TeamInfo TeamsInfo = 2;
  inline int teamsinfo_size() const;
  inline void clear_teamsinfo();
  static const int kTeamsInfoFieldNumber = 2;
  inline const ::TeamInfo& teamsinfo(int index) const;
  inline ::TeamInfo* mutable_teamsinfo(int index);
  inline ::TeamInfo* add_teamsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::TeamInfo >&
      teamsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::TeamInfo >*
      mutable_teamsinfo();

  // @@protoc_insertion_point(class_scope:TeamRpcSurroundingTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TeamInfo > teamsinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcSurroundingTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamAsk();
  virtual ~TeamRpcApplyTeamAsk();

  TeamRpcApplyTeamAsk(const TeamRpcApplyTeamAsk& from);

  inline TeamRpcApplyTeamAsk& operator=(const TeamRpcApplyTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamAsk& default_instance();

  void Swap(TeamRpcApplyTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamAsk& from);
  void MergeFrom(const TeamRpcApplyTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TeamId = 1 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamReply();
  virtual ~TeamRpcApplyTeamReply();

  TeamRpcApplyTeamReply(const TeamRpcApplyTeamReply& from);

  inline TeamRpcApplyTeamReply& operator=(const TeamRpcApplyTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamReply& default_instance();

  void Swap(TeamRpcApplyTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamReply& from);
  void MergeFrom(const TeamRpcApplyTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional sint32 TeamId = 2 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcApplyTeamNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcApplyTeamNotifyNotify();
  virtual ~TeamRpcApplyTeamNotifyNotify();

  TeamRpcApplyTeamNotifyNotify(const TeamRpcApplyTeamNotifyNotify& from);

  inline TeamRpcApplyTeamNotifyNotify& operator=(const TeamRpcApplyTeamNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcApplyTeamNotifyNotify& default_instance();

  void Swap(TeamRpcApplyTeamNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcApplyTeamNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcApplyTeamNotifyNotify& from);
  void MergeFrom(const TeamRpcApplyTeamNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcApplyTeamNotifyNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcApplyTeamNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantAsk : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantAsk();
  virtual ~TeamRpcAgreeApplicantAsk();

  TeamRpcAgreeApplicantAsk(const TeamRpcAgreeApplicantAsk& from);

  inline TeamRpcAgreeApplicantAsk& operator=(const TeamRpcAgreeApplicantAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantAsk& default_instance();

  void Swap(TeamRpcAgreeApplicantAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantAsk& from);
  void MergeFrom(const TeamRpcAgreeApplicantAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoleId = 2 [default = 0];
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantAsk)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantReply : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantReply();
  virtual ~TeamRpcAgreeApplicantReply();

  TeamRpcAgreeApplicantReply(const TeamRpcAgreeApplicantReply& from);

  inline TeamRpcAgreeApplicantReply& operator=(const TeamRpcAgreeApplicantReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantReply& default_instance();

  void Swap(TeamRpcAgreeApplicantReply* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantReply& from);
  void MergeFrom(const TeamRpcAgreeApplicantReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcAgreeApplicantNotifyNotify : public ::google::protobuf::Message {
 public:
  TeamRpcAgreeApplicantNotifyNotify();
  virtual ~TeamRpcAgreeApplicantNotifyNotify();

  TeamRpcAgreeApplicantNotifyNotify(const TeamRpcAgreeApplicantNotifyNotify& from);

  inline TeamRpcAgreeApplicantNotifyNotify& operator=(const TeamRpcAgreeApplicantNotifyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcAgreeApplicantNotifyNotify& default_instance();

  void Swap(TeamRpcAgreeApplicantNotifyNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcAgreeApplicantNotifyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcAgreeApplicantNotifyNotify& from);
  void MergeFrom(const TeamRpcAgreeApplicantNotifyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamInfo Team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcAgreeApplicantNotifyNotify)
 private:
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcAgreeApplicantNotifyNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcTeamInfoNotify : public ::google::protobuf::Message {
 public:
  TeamRpcTeamInfoNotify();
  virtual ~TeamRpcTeamInfoNotify();

  TeamRpcTeamInfoNotify(const TeamRpcTeamInfoNotify& from);

  inline TeamRpcTeamInfoNotify& operator=(const TeamRpcTeamInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcTeamInfoNotify& default_instance();

  void Swap(TeamRpcTeamInfoNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcTeamInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcTeamInfoNotify& from);
  void MergeFrom(const TeamRpcTeamInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamInfo Team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline const ::TeamInfo& team() const;
  inline ::TeamInfo* mutable_team();
  inline ::TeamInfo* release_team();
  inline void set_allocated_team(::TeamInfo* team);

  // @@protoc_insertion_point(class_scope:TeamRpcTeamInfoNotify)
 private:
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamInfo* team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcTeamInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcUpdateTeamMemInfoNotify : public ::google::protobuf::Message {
 public:
  TeamRpcUpdateTeamMemInfoNotify();
  virtual ~TeamRpcUpdateTeamMemInfoNotify();

  TeamRpcUpdateTeamMemInfoNotify(const TeamRpcUpdateTeamMemInfoNotify& from);

  inline TeamRpcUpdateTeamMemInfoNotify& operator=(const TeamRpcUpdateTeamMemInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcUpdateTeamMemInfoNotify& default_instance();

  void Swap(TeamRpcUpdateTeamMemInfoNotify* other);

  // implements Message ----------------------------------------------

  TeamRpcUpdateTeamMemInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcUpdateTeamMemInfoNotify& from);
  void MergeFrom(const TeamRpcUpdateTeamMemInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TeamMemberInfo TeamMember = 1;
  inline bool has_teammember() const;
  inline void clear_teammember();
  static const int kTeamMemberFieldNumber = 1;
  inline const ::TeamMemberInfo& teammember() const;
  inline ::TeamMemberInfo* mutable_teammember();
  inline ::TeamMemberInfo* release_teammember();
  inline void set_allocated_teammember(::TeamMemberInfo* teammember);

  // @@protoc_insertion_point(class_scope:TeamRpcUpdateTeamMemInfoNotify)
 private:
  inline void set_has_teammember();
  inline void clear_has_teammember();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TeamMemberInfo* teammember_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamRpc_2eproto();
  friend void protobuf_AssignDesc_TeamRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcUpdateTeamMemInfoNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TeamRpcCreateTeamAsk

// optional sint32 TeamType = 2 [default = -1];
inline bool TeamRpcCreateTeamAsk::has_teamtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcCreateTeamAsk::set_has_teamtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcCreateTeamAsk::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcCreateTeamAsk::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcCreateTeamAsk::teamtype() const {
  return teamtype_;
}
inline void TeamRpcCreateTeamAsk::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// -------------------------------------------------------------------

// TeamRpcCreateTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcCreateTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcCreateTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcCreateTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcCreateTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcCreateTeamReply::result() const {
  return result_;
}
inline void TeamRpcCreateTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TeamInfo Team = 2;
inline bool TeamRpcCreateTeamReply::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcCreateTeamReply::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcCreateTeamReply::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcCreateTeamReply::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcCreateTeamReply::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcCreateTeamReply::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcCreateTeamReply::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcCreateTeamReply::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcJoinTeamAsk

// optional sint32 TeamId = 1 [default = -1];
inline bool TeamRpcJoinTeamAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcJoinTeamAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcJoinTeamAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcJoinTeamAsk::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamRpcJoinTeamAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcJoinTeamAsk::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional sint32 TeamType = 2 [default = -1];
inline bool TeamRpcJoinTeamAsk::has_teamtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcJoinTeamAsk::set_has_teamtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcJoinTeamAsk::clear_has_teamtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcJoinTeamAsk::clear_teamtype() {
  teamtype_ = -1;
  clear_has_teamtype();
}
inline ::google::protobuf::int32 TeamRpcJoinTeamAsk::teamtype() const {
  return teamtype_;
}
inline void TeamRpcJoinTeamAsk::set_teamtype(::google::protobuf::int32 value) {
  set_has_teamtype();
  teamtype_ = value;
}

// optional .TeamInfo Team = 3;
inline bool TeamRpcJoinTeamAsk::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcJoinTeamAsk::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcJoinTeamAsk::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcJoinTeamAsk::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcJoinTeamAsk::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcJoinTeamAsk::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcJoinTeamAsk::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamAsk::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// optional .TeamMemberInfo TeamMember = 4;
inline bool TeamRpcJoinTeamAsk::has_teammember() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRpcJoinTeamAsk::set_has_teammember() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRpcJoinTeamAsk::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRpcJoinTeamAsk::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcJoinTeamAsk::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamAsk::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamAsk::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamAsk::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// -------------------------------------------------------------------

// TeamRpcJoinTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcJoinTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcJoinTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcJoinTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcJoinTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcJoinTeamReply::result() const {
  return result_;
}
inline void TeamRpcJoinTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .TeamInfo Team = 2;
inline bool TeamRpcJoinTeamReply::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcJoinTeamReply::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcJoinTeamReply::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcJoinTeamReply::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcJoinTeamReply::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcJoinTeamReply::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcJoinTeamReply::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamReply::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcLeaveTeamAsk

// -------------------------------------------------------------------

// TeamRpcLeaveTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcLeaveTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcLeaveTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcLeaveTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcLeaveTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcLeaveTeamReply::result() const {
  return result_;
}
inline void TeamRpcLeaveTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderAsk

// optional uint64 RoleId = 1 [default = 0];
inline bool TeamRpcAppointTeamLeaderAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAppointTeamLeaderAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAppointTeamLeaderAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAppointTeamLeaderAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcAppointTeamLeaderAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcAppointTeamLeaderAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcAppointTeamLeaderReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAppointTeamLeaderReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcAppointTeamLeaderReply::result() const {
  return result_;
}
inline void TeamRpcAppointTeamLeaderReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 NewLeaderId = 2 [default = 0];
inline bool TeamRpcAppointTeamLeaderReply::has_newleaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcAppointTeamLeaderReply::set_has_newleaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_has_newleaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcAppointTeamLeaderReply::clear_newleaderid() {
  newleaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderid();
}
inline ::google::protobuf::uint64 TeamRpcAppointTeamLeaderReply::newleaderid() const {
  return newleaderid_;
}
inline void TeamRpcAppointTeamLeaderReply::set_newleaderid(::google::protobuf::uint64 value) {
  set_has_newleaderid();
  newleaderid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcNewLeaderNotify

// optional uint64 Newleaderroleid = 1 [default = 0];
inline bool TeamRpcNewLeaderNotify::has_newleaderroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcNewLeaderNotify::set_has_newleaderroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcNewLeaderNotify::clear_has_newleaderroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcNewLeaderNotify::clear_newleaderroleid() {
  newleaderroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderroleid();
}
inline ::google::protobuf::uint64 TeamRpcNewLeaderNotify::newleaderroleid() const {
  return newleaderroleid_;
}
inline void TeamRpcNewLeaderNotify::set_newleaderroleid(::google::protobuf::uint64 value) {
  set_has_newleaderroleid();
  newleaderroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcKickMemberAsk

// optional uint64 KickMemberRoleId = 1 [default = 0];
inline bool TeamRpcKickMemberAsk::has_kickmemberroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberAsk::set_has_kickmemberroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberAsk::clear_has_kickmemberroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberAsk::clear_kickmemberroleid() {
  kickmemberroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickmemberroleid();
}
inline ::google::protobuf::uint64 TeamRpcKickMemberAsk::kickmemberroleid() const {
  return kickmemberroleid_;
}
inline void TeamRpcKickMemberAsk::set_kickmemberroleid(::google::protobuf::uint64 value) {
  set_has_kickmemberroleid();
  kickmemberroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcKickMemberReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcKickMemberReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcKickMemberReply::result() const {
  return result_;
}
inline void TeamRpcKickMemberReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcDissmissTeamAsk

// -------------------------------------------------------------------

// TeamRpcDissmissTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcDissmissTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcDissmissTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcDissmissTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcDissmissTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcDissmissTeamReply::result() const {
  return result_;
}
inline void TeamRpcDissmissTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAppointTeamLeaderNotify

// -------------------------------------------------------------------

// TeamRpcKickMemberNotifyNotify

// optional uint64 KickedMemberRoleId = 1 [default = 0];
inline bool TeamRpcKickMemberNotifyNotify::has_kickedmemberroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcKickMemberNotifyNotify::set_has_kickedmemberroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcKickMemberNotifyNotify::clear_has_kickedmemberroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcKickMemberNotifyNotify::clear_kickedmemberroleid() {
  kickedmemberroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickedmemberroleid();
}
inline ::google::protobuf::uint64 TeamRpcKickMemberNotifyNotify::kickedmemberroleid() const {
  return kickedmemberroleid_;
}
inline void TeamRpcKickMemberNotifyNotify::set_kickedmemberroleid(::google::protobuf::uint64 value) {
  set_has_kickedmemberroleid();
  kickedmemberroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcLeaveTeamNotifyNotify

// optional uint64 RoleId = 1 [default = 0];
inline bool TeamRpcLeaveTeamNotifyNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcLeaveTeamNotifyNotify::roleid() const {
  return roleid_;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint64 NewLeaderRoleId = 2 [default = 0];
inline bool TeamRpcLeaveTeamNotifyNotify::has_newleaderroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_has_newleaderroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_has_newleaderroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcLeaveTeamNotifyNotify::clear_newleaderroleid() {
  newleaderroleid_ = GOOGLE_ULONGLONG(0);
  clear_has_newleaderroleid();
}
inline ::google::protobuf::uint64 TeamRpcLeaveTeamNotifyNotify::newleaderroleid() const {
  return newleaderroleid_;
}
inline void TeamRpcLeaveTeamNotifyNotify::set_newleaderroleid(::google::protobuf::uint64 value) {
  set_has_newleaderroleid();
  newleaderroleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcJoinTeamNotifyNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcJoinTeamNotifyNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcJoinTeamNotifyNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcJoinTeamNotifyNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcJoinTeamNotifyNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamNotifyNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcJoinTeamNotifyNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcJoinTeamNotifyNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// -------------------------------------------------------------------

// TeamRpcDissmissTeamNotifyNotify

// -------------------------------------------------------------------

// TeamRpcSurroundingTeamAsk

// -------------------------------------------------------------------

// TeamRpcSurroundingTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcSurroundingTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcSurroundingTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcSurroundingTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcSurroundingTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcSurroundingTeamReply::result() const {
  return result_;
}
inline void TeamRpcSurroundingTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .TeamInfo TeamsInfo = 2;
inline int TeamRpcSurroundingTeamReply::teamsinfo_size() const {
  return teamsinfo_.size();
}
inline void TeamRpcSurroundingTeamReply::clear_teamsinfo() {
  teamsinfo_.Clear();
}
inline const ::TeamInfo& TeamRpcSurroundingTeamReply::teamsinfo(int index) const {
  return teamsinfo_.Get(index);
}
inline ::TeamInfo* TeamRpcSurroundingTeamReply::mutable_teamsinfo(int index) {
  return teamsinfo_.Mutable(index);
}
inline ::TeamInfo* TeamRpcSurroundingTeamReply::add_teamsinfo() {
  return teamsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TeamInfo >&
TeamRpcSurroundingTeamReply::teamsinfo() const {
  return teamsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::TeamInfo >*
TeamRpcSurroundingTeamReply::mutable_teamsinfo() {
  return &teamsinfo_;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamAsk

// optional sint32 TeamId = 1 [default = -1];
inline bool TeamRpcApplyTeamAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamAsk::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamRpcApplyTeamAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcApplyTeamAsk::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcApplyTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcApplyTeamReply::result() const {
  return result_;
}
inline void TeamRpcApplyTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional sint32 TeamId = 2 [default = -1];
inline bool TeamRpcApplyTeamReply::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcApplyTeamReply::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcApplyTeamReply::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcApplyTeamReply::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamRpcApplyTeamReply::teamid() const {
  return teamid_;
}
inline void TeamRpcApplyTeamReply::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcApplyTeamNotifyNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcApplyTeamNotifyNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcApplyTeamNotifyNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcApplyTeamNotifyNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcApplyTeamNotifyNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcApplyTeamNotifyNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcApplyTeamNotifyNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcApplyTeamNotifyNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcApplyTeamNotifyNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantAsk

// optional uint64 RoleId = 2 [default = 0];
inline bool TeamRpcAgreeApplicantAsk::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantAsk::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantAsk::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantAsk::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 TeamRpcAgreeApplicantAsk::roleid() const {
  return roleid_;
}
inline void TeamRpcAgreeApplicantAsk::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcAgreeApplicantReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcAgreeApplicantReply::result() const {
  return result_;
}
inline void TeamRpcAgreeApplicantReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// TeamRpcAgreeApplicantNotifyNotify

// optional .TeamInfo Team = 1;
inline bool TeamRpcAgreeApplicantNotifyNotify::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcAgreeApplicantNotifyNotify::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcAgreeApplicantNotifyNotify::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcAgreeApplicantNotifyNotify::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcAgreeApplicantNotifyNotify::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcAgreeApplicantNotifyNotify::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcAgreeApplicantNotifyNotify::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcAgreeApplicantNotifyNotify::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcTeamInfoNotify

// optional .TeamInfo Team = 1;
inline bool TeamRpcTeamInfoNotify::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcTeamInfoNotify::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcTeamInfoNotify::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcTeamInfoNotify::clear_team() {
  if (team_ != NULL) team_->::TeamInfo::Clear();
  clear_has_team();
}
inline const ::TeamInfo& TeamRpcTeamInfoNotify::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::TeamInfo* TeamRpcTeamInfoNotify::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::TeamInfo;
  return team_;
}
inline ::TeamInfo* TeamRpcTeamInfoNotify::release_team() {
  clear_has_team();
  ::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void TeamRpcTeamInfoNotify::set_allocated_team(::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    set_has_team();
  } else {
    clear_has_team();
  }
}

// -------------------------------------------------------------------

// TeamRpcUpdateTeamMemInfoNotify

// optional .TeamMemberInfo TeamMember = 1;
inline bool TeamRpcUpdateTeamMemInfoNotify::has_teammember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcUpdateTeamMemInfoNotify::set_has_teammember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcUpdateTeamMemInfoNotify::clear_has_teammember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcUpdateTeamMemInfoNotify::clear_teammember() {
  if (teammember_ != NULL) teammember_->::TeamMemberInfo::Clear();
  clear_has_teammember();
}
inline const ::TeamMemberInfo& TeamRpcUpdateTeamMemInfoNotify::teammember() const {
  return teammember_ != NULL ? *teammember_ : *default_instance_->teammember_;
}
inline ::TeamMemberInfo* TeamRpcUpdateTeamMemInfoNotify::mutable_teammember() {
  set_has_teammember();
  if (teammember_ == NULL) teammember_ = new ::TeamMemberInfo;
  return teammember_;
}
inline ::TeamMemberInfo* TeamRpcUpdateTeamMemInfoNotify::release_teammember() {
  clear_has_teammember();
  ::TeamMemberInfo* temp = teammember_;
  teammember_ = NULL;
  return temp;
}
inline void TeamRpcUpdateTeamMemInfoNotify::set_allocated_teammember(::TeamMemberInfo* teammember) {
  delete teammember_;
  teammember_ = teammember;
  if (teammember) {
    set_has_teammember();
  } else {
    clear_has_teammember();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TeamRpc_2eproto__INCLUDED
