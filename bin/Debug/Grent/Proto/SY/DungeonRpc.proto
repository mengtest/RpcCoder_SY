message  DungeonRpcCreateDungeonAsk
{
	optional uint64 RoleId = 1[default=0];
	optional int32 DungeonConfigId = 2;

}

message  DungeonRpcCreateDungeonReply
{
	optional int32 Result = 1;
	optional int32 DungeonConfigId = 2;
	optional int32 SceneConfigId = 3;

}

message  DungeonRpcExitDungeonAsk
{
	optional uint64 RoleId = 1[default=0];
	optional int32 SceneId = 2;

}

message  DungeonRpcExitDungeonReply
{
	optional int32 Result = 1;
	optional int32 SceneConfigId = 2;
	optional int32 SceneId = 3;

}

message  DungeonRpcInformCreateDungeonAsk
{
	optional uint64 RoleId = 1[default=0];
	optional int32 TargetSceneId = 2;
	optional int32 DungeonConfigId = 3;
	optional int32 CurSceneId = 4;
	optional int32 Result = 5;
	repeated uint64 RoleIds = 6;

}

message  DungeonRpcInformCreateDungeonReply
{
	optional int32 Result = 1;

}

message  DungeonRpcSettlementNotify
{
	optional int32 SettlementResult = 1;
	optional DungeonExploits Exploits = 2;
	optional int32 Exp = 3;
	repeated ItemObj UiItemInfoList = 4;
	optional int32 Gold = 5;
	optional int32 DungeonPassTime = 6;
	optional int64 ForceRetreatSceneTime = 7[default=-1];
	optional int64 RemainTime = 8[default=-1];
	optional int32 Starbattleid = 9;
	optional int32 SceneType = 10;

}

message  DungeonRpcEnterDungeonAsk
{
	optional int32 SceneId = 1;
	optional int32 DungeonConfigId = 2;

}

message  DungeonRpcEnterDungeonReply
{
	optional int32 Result = 1;

}

message  DungeonRpcDungeonDataNotify
{
	optional int32 BeginTime = 1;
	optional DungeonData Data = 3;
	optional DungeonExploits Exploits = 4;

}

message  DungeonRpcDungeonSyncAsk
{

}

message  DungeonRpcDungeonSyncReply
{
	optional int32 Result = 1;
	optional DungeonData Data = 2;
	optional DungeonExploits Exploits = 3;

}

message  DungeonRpcDungeonListInfoAsk
{

}

message  DungeonRpcDungeonListInfoReply
{
	optional int32 Result = 1;
	repeated DungeonBossInfo DungeonBossData = 3;

}

message  DungeonRpcCreateTutorialAsk
{
	optional uint64 RoleId = 1[default=0];
	optional int32 DungeonConfigId = 2;

}

message  DungeonRpcCreateTutorialReply
{
	optional int32 Result = 1;
	optional int32 DungeonConfigId = 3;
	optional int32 SceneConfigId = 4;

}

message  DungeonRpcQuitTutorialAsk
{

}

message  DungeonRpcQuitTutorialReply
{
	optional int32 Result = 1;

}

message  DungeonRpcDungeonTargetNotify
{
	repeated DungeonTarget DungeonTarget = 1;

}

message  DungeonRpcTargetContentChangeNotify
{
	optional int32 Index = 1;
	optional int32 SubIndex = 2;
	optional int32 CurCount = 3;

}

message  DungeonRpcDungeon_NotifyNotify
{
	optional int32 TextId = 1;

}

message  DungeonRpcSceneOperator1Ask
{
	optional int32 OpCode = 1;
	optional int32 OpExtraParam = 2;

}

message  DungeonRpcSceneOperator1Reply
{
	optional int32 Result = 1;

}

message  DungeonRpcForceEnterNextDungeonLayerNotify
{
	optional int32 NextLayer = 1;
	optional bool Breward = 6[default=false];

}

message  DungeonRpcDungeonRewardUpdateNotify
{
	repeated uint64 OpenRoleIdList = 1;
	optional uint64 NewRoleId = 2[default=0];
	optional int32 NewIndex = 3;

}

message  DungeonRpcVictoryOfAllLayerNotify
{
	optional int32 LastLayer = 1;

}

message  DungeonRpcLayerBeginNotify
{

}

message  DungeonRpcLayerSettlementNotify
{
	optional int32 NextLayer = 1;
	repeated PBUIRewardData RewardList = 2;

}

message  DungeonRpcSceneOperatorNNotify
{
	optional int32 OpCode = 1;

}

message  DungeonRpcEnterLayerDungeonNotify
{
	optional int32 CurrentLayer = 1;
	optional int32 CurentLayerRemainTime = 2;

}

message  DungeonRpcDungeonExploitsNotify
{
	optional DungeonExploits Exploits = 1;

}

message  DungeonRpcCreateDungeonWithRobotAsk
{
	optional int32 DungeonConfigId = 1;
	optional uint64 RoleId = 2[default=0];

}

message  DungeonRpcCreateDungeonWithRobotReply
{
	optional int32 Result = 1;

}

message  DungeonRpcUseBossNumAsk
{
	optional bool BUse = 1[default=false];

}

message  DungeonRpcUseBossNumReply
{
	optional int32 Result = 1;

}

message  DungeonExploits
{
	repeated RealTimeExploits Exploits = 1;

}

message  ItemObj
{
	optional int32 Pos = 1[default=-1];
	optional ItemData ItemData = 2;
	optional bool RedPoint = 3[default=false];

}

message  DungeonData
{
	optional int32 DurationMentTime = 2[default=0];
	optional int32 ConclusionTime = 3[default=0];
	optional int32 PrepareTime = 4[default=0];
	optional int32 RewardTime = 7[default=0];

}

message  DungeonBossInfo
{
	optional int32 Bossid = 1[default=-1];
	optional int32 Number = 2[default=-1];
	optional int32 Dungeonid = 3[default=-1];
	optional int32 MaxNumber = 4[default=-1];
	optional int32 RefreshType = 5[default=-1];
	optional int32 HoldNum = 6[default=0];
	optional int32 Killed = 7[default=0];
	optional int32 DungeonType = 8[default=-1];
	optional int32 BossIndex = 9[default=-1];

}

message  DungeonTarget
{
	optional int32 TypeId = 1[default=-1];
	optional int32 Index = 2[default=-1];
	repeated DungeonTargetContent TargetContent = 3;
	optional int32 Description = 4[default=-1];
	optional int32 IParam = 5[default=-1];

}

message  PBUIRewardData
{
	optional int32 ItemId = 1[default=0];
	optional int32 ItemCount = 2[default=0];
	optional uint64 RoleId = 3[default=0];
	optional string PlayerName = 4;

}

message  RealTimeExploits
{
	repeated PlayerRealTimeExploit PlayerList = 1;
	optional int32 ExploitsType = 2[default=0];

}

message  PlayerRealTimeExploit
{
	optional uint64 RoleId = 1[default=0];
	optional int32 PlayerLevel = 2[default=0];
	optional string PlayerName = 3;
	optional int32 Occupation = 4[default=0];
	optional int32 ExploitsValue = 5[default=0];

}

message  ItemData
{
	optional bool IsLock = 2[default=false];
	optional int32 OverlayCount = 3[default=-1];
	optional int32 ConfigId = 4[default=-1];
	optional EquipAttr EquipAttr = 5;
	optional bool IsBind = 12[default=true];
	optional uint64 Guid = 13[default=0];
	optional PetData PetData = 14;
	optional int32 BindRule = 15[default=1];
	optional int32 SaleCD = 16[default=0];
	optional SoulStoneData SoulStone = 19;
	optional RefineData RefineData = 20;
	optional EquipAttr CacheAttr = 21;
	optional int32 WaysOfObtaining = 22[default=-1];

}

message  EquipAttr
{
	repeated AttrKeyValue BaseAttr = 1;
	repeated AttrKeyValue ExtraAttr = 2;
	optional int32 BattleScore = 3[default=-1];

}

message  AttrKeyValue
{
	optional int32 Key = 1[default=-1];
	optional int64 Value = 2[default=-1];
	optional int32 Quality = 3[default=-1];
	optional int32 Key2 = 4[default=-1];

}

message  PetData
{
	optional int32 Exp = 1[default=-1];
	optional int32 Level = 2[default=-1];
	optional string Name = 3;
	repeated AttrKeyValue Attrs = 5;
	optional int32 BattleScore = 6[default=-1];
	repeated AttrKeyValue Talent = 7;
	repeated PetSkill SkillList = 8;
	optional int32 TalentScore = 10[default=-1];
	optional bool Wild = 15[default=false];
	optional PetFeedData FeedData = 16;

}

message  PetSkill
{
	optional int32 SkillId = 3[default=-1];
	optional int32 Lock = 4[default=-1];

}

message  PetFeedData
{
	optional int32 Level = 1[default=0];
	optional int32 Exp = 2[default=0];
	optional int32 FeedCount = 3[default=0];

}

message  SoulStoneData
{
	repeated AttrKeyValue Attr = 1;
	optional int32 SuitId = 2[default=-1];
	optional int32 BattleScore = 3[default=0];

}

message  RefineData
{
	optional int32 Level = 1[default=0];
	optional int32 Extend = 2[default=0];

}

message  DungeonTargetContent
{
	optional int32 Index = 1[default=-1];
	optional int32 TemplateId = 2[default=-1];
	optional int32 MaxCount = 3[default=-1];
	optional int32 CurCount = 4[default=-1];
	optional int32 Description = 5[default=-1];
	optional int32 IParam = 6[default=-1];

}

