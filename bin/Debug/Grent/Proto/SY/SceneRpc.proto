message  SceneRpcLoadSceneCompleteAsk
{
	optional uint64 RoleId = 1[default=0];
	optional int32 SceneId = 2;

}

message  SceneRpcLoadSceneCompleteReply
{
	optional int32 Result = 1;
	optional uint64 ObjId = 3[default=0];
	optional Vector3 Pos = 4;
	optional float Dir = 5[default=-1];
	optional bytes ObjData = 6;

}

message  SceneRpcDeletePlayerNotify
{
	repeated ObjDeleteInfo Delete_list = 4;

}

message  SceneRpcConnectGameServerAsk
{
	optional uint64 RoleId = 1[default=0];
	optional string Key = 2;
	optional int32 SceneID = 3;
	optional int32 LineID = 4;
	optional string GameToken = 5;

}

message  SceneRpcConnectGameServerReply
{
	optional int32 Result = 1;
	optional uint64 RoleId = 2[default=0];
	optional int32 SceneId = 3;
	optional int32 MapId = 5;
	optional string GameToken = 6;

}

message  SceneRpcCreateObjNotify
{
	repeated ObjCreateInfo Create_list = 14;

}

message  SceneRpcSurroundingHumanAsk
{

}

message  SceneRpcSurroundingHumanReply
{
	optional int32 Result = 1;
	repeated CharacterInfo RoleList = 2;

}

message  SceneRpcCEnterSceneNotify
{
	optional int32 SceneId = 3;
	optional int32 MapId = 6;
	optional int32 LineId = 7;

}

message  SceneRpcSEnterSceneNotify
{
	optional int32 Result = 1;
	optional int32 SceneId = 8;
	optional int32 SceneConfigId = 9;
	optional int32 MapId = 10;
	optional uint64 RoleId = 11[default=0];
	optional int32 DungeonConfigId = 12;
	optional int32 LineId = 14;
	repeated IntPair TypeConfig = 18;

}

message  SceneRpcObjDieNotify
{
	optional uint64 ObjId = 1[default=0];
	optional int32 RespawnTime = 2;
	optional int32 ConfigId = 3;
	optional int32 ObjType = 4;

}

message  SceneRpcCollide_ChangeSceneAsk
{
	optional int32 Collide_id = 1;

}

message  SceneRpcCollide_ChangeSceneReply
{
	optional int32 Result = 1;

}

message  SceneRpcEnterMirrorAsk
{
	optional int32 MirrorID = 1;

}

message  SceneRpcEnterMirrorReply
{
	optional int32 Result = 1;

}

message  SceneRpcSEnterMirrorSceneNotify
{
	optional int32 MapID = 1;
	optional int32 MirrorID = 2;

}

message  SceneRpcExitMirrorSceneAsk
{

}

message  SceneRpcExitMirrorSceneReply
{
	optional int32 Result = 1;

}

message  SceneRpcChangeSceneLeaveNotify
{
	optional int32 TargetLineID = 1;
	optional int32 TargetMapID = 2;
	optional uint64 RoleID = 4[default=0];
	optional int32 CopyID = 5;

}

message  SceneRpcChangeLineAsk
{
	optional int32 LineID = 1;
	optional int32 MapID = 2;

}

message  SceneRpcChangeLineReply
{
	optional int32 Result = 1;
	optional int32 LineID = 2;
	optional int32 MapID = 3;
	optional uint64 RoleID = 4[default=0];

}

message  SceneRpcPingAsk
{

}

message  SceneRpcPingReply
{
	optional int32 Result = 1;

}

message  SceneRpcSyncSceneLineStatsNotify
{
	optional SceneStats Scene_stats = 1;
	optional int32 Player_lineId = 2;

}

message  SceneRpcLogOutGameAsk
{

}

message  SceneRpcLogOutGameReply
{
	optional int32 Result = 1;

}

message  SceneRpcKickOutGameNotify
{
	optional AppendString Kick_reason = 1;
	optional int32 Reason_id = 2;

}

message  SceneRpcShowFilmFinishAsk
{

}

message  SceneRpcShowFilmFinishReply
{
	optional int32 Result = 1;

}

message  SceneRpcSpecObjPosAsk
{

}

message  SceneRpcSpecObjPosReply
{
	optional int32 Result = 1;
	repeated ObjPosInfo PosInfos = 2;

}

message  SceneRpcDayNightChangeNotify
{
	optional int32 DayStage = 1;
	optional int32 Remaining = 2;

}

message  SceneRpcWeatherChangeNotify
{
	optional int32 WeatherId = 1;

}

message  SceneRpcWantChangeZoneAsk
{
	optional int32 Zoneid = 1;

}

message  SceneRpcWantChangeZoneReply
{
	optional int32 Result = 1;

}

message  SceneRpcReturnSrcServerAsk
{

}

message  SceneRpcReturnSrcServerReply
{
	optional int32 Result = 1;

}

message  Vector3
{
	optional float X = 1[default=-1];
	optional float Y = 2[default=-1];
	optional float Z = 3[default=-1];

}

message  ObjDeleteInfo
{
	optional uint64 ObjId = 1[default=0];
	optional int32 SceneId = 2[default=-1];
	optional bytes ObjData = 3;

}

message  ObjCreateInfo
{
	optional uint64 ObjId = 1[default=0];
	optional Vector3 Pos = 2;
	optional float Dir = 3[default=-1];
	optional int32 Status = 4[default=-1];
	optional Vector3 TargetPos = 5;
	optional bytes ObjData = 6;
	optional MotionInfo Motion = 7;
	optional bool IsNew = 8[default=false];
	optional int32 SkillPrepareId = 9[default=-1];
	optional int32 SkillPrepareTime = 10[default=-1];
	optional int32 LoopSkillId = 11[default=-1];

}

message  CharacterInfo
{
	optional uint64 RoleId = 1[default=0];
	optional string Nickname = 2;
	optional int32 ConfigId = 3[default=-1];
	optional int32 Hp = 4[default=-1];
	optional int32 HpMax = 5[default=-1];
	optional int32 Level = 6[default=-1];
	optional TreasureEquipedID TreasureEquiped = 8;
	optional PinchFaceData PinchData = 9;

}

message  IntPair
{
	optional int32 Key = 1[default=-1];
	optional int32 Value = 2[default=-1];

}

message  SceneStats
{
	repeated LineStats Lines = 1;
	optional int32 SceneId = 2[default=-1];

}

message  AppendString
{
	optional int32 TransID = 1[default=-1];
	optional int32 Key = 2[default=-1];
	repeated string StringList = 3;

}

message  ObjPosInfo
{
	optional uint64 ObjId = 1[default=0];
	optional int32 Id = 2[default=-1];
	optional int32 X = 3[default=-1];
	optional int32 Z = 4[default=-1];
	optional int32 Type = 5[default=-1];

}

message  MotionInfo
{
	optional int32 MotionType = 1[default=-1];
	repeated Vector3Int MotionPath = 2;
	optional bool IsAllowChangeRunAnimation = 3[default=false];
	optional bool IsFollow = 4[default=false];
	optional bool IsLookAtMoving = 5[default=false];

}

message  Vector3Int
{
	optional int32 X = 1[default=-1];
	optional int32 Z = 2[default=-1];

}

message  TreasureEquipedID
{
	optional int32 TreasureHair = 1[default=-1];
	optional int32 TreasureHead = 2[default=-1];
	optional int32 TreasureBody = 3[default=-1];
	optional int32 TreasureWeapon = 4[default=-1];
	optional int32 TreasureWing = 5[default=-1];
	optional int32 TreasureRiding = 6[default=-1];
	optional int32 TreasureFootPrint = 7[default=-1];
	optional int32 EquipHair = 8[default=-1];
	optional int32 EquipHead = 9[default=-1];
	optional int32 EquipBody = 10[default=-1];
	optional int32 EquipWeapon = 11[default=-1];
	optional bool Headdisplayswitch = 12[default=true];
	optional bool Fashiondisplayswitch = 13[default=true];
	optional int32 InitHair = 14[default=-1];
	optional int32 InitHead = 15[default=-1];
	optional int32 InitBody = 16[default=-1];
	optional int32 InitWeapon = 17[default=-1];

}

message  PinchFaceData
{
	repeated PinchFaceBase DataInfo = 1;

}

message  PinchFaceBase
{
	optional int32 Id = 1[default=-1];
	optional float Value = 2[default=-1];
	optional Color Color = 4;

}

message  Color
{
	optional float R = 1[default=-1];
	optional float G = 2[default=-1];
	optional float B = 3[default=-1];
	optional float A = 4[default=-1];

}

message  LineStats
{
	optional int32 LineId = 1[default=-1];
	optional int32 LineStats = 2[default=-1];

}

