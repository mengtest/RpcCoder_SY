
import "PublicStruct.proto";

message  HumanRpcMoveAsk
{
	optional float Dir = 2[default=-1];
	optional float X = 3[default=-1];
	optional float Z = 4[default=-1];
	optional uint64 ObjId = 5[default=0];

}

message  HumanRpcMoveReply
{
	optional int32 Result = 1;
	optional Vector3 Pos = 2;
	optional float Dir = 3[default=-1];
	optional uint64 ObjId = 4[default=0];

}

message  HumanRpcStopMoveAsk
{
	optional float Dir = 2[default=-1];
	optional int32 X = 3;
	optional int32 Z = 4;
	optional uint64 ObjId = 5[default=0];
	optional bool BrakeRush = 6[default=false];

}

message  HumanRpcStopMoveReply
{
	optional int32 Result = 1;
	optional Vector3Int Pos = 2;
	optional float Dir = 3[default=-1];
	optional uint64 ObjId = 4[default=0];

}

message  HumanRpcMoveCheckNotify
{
	optional uint64 ObjId = 1[default=0];
	optional float Dir = 3[default=-1];
	optional float X = 4[default=-1];
	optional float Y = 5[default=-1];

}

message  HumanRpcRespawnAsk
{
	optional int32 ReviveType = 1;

}

message  HumanRpcRespawnReply
{
	optional int32 Result = 1;
	optional int32 ReviveType = 2;

}

message  HumanRpcRespawnOtherNotify
{
	optional uint64 ObjId = 1[default=0];

}

message  HumanRpcMovePosAsk
{
	repeated Vector3Int PosList = 1;
	optional float Dir = 2[default=-1];
	optional uint64 ObjId = 3[default=0];
	optional bool IsAllowChangeRunAnimation = 4[default=true];
	optional bool IsLookAtMoving = 5[default=true];
	optional int32 FromX = 6;
	optional int32 FromZ = 7;

}

message  HumanRpcMovePosReply
{
	optional int32 Result = 1;
	optional Vector3Int Pos = 2;
	optional float Dir = 3[default=-1];
	optional uint64 ObjId = 4[default=0];

}

message  HumanRpcRoleDieNotify
{
	optional int64 KillerGuid = 1[default=-1];
	optional string KillerName = 2;
	optional int32 KillerType = 3;
	optional int32 RevieCDTime = 4;
	optional int32 DungeonReviveCounts = 5;

}

message  HumanRpcChangeAnimationStateNotify
{
	optional bool AnimationState = 1[default=false];

}

message  HumanRpcFuncNoticeAsk
{

}

message  HumanRpcFuncNoticeReply
{
	optional int32 Result = 1;
	optional int32 FuncIndex = 2;

}

message  HumanRpcFuncNoticeChangeAsk
{

}

message  HumanRpcFuncNoticeChangeReply
{
	optional int32 Result = 1;

}

message  HumanRpcClientAttributesNotify
{
	optional uint64 ObjId = 2[default=0];
	optional bool IsTouchJoyStick = 6[default=false];
	optional bool IsHold = 7[default=false];

}

message  HumanRpcTimeCheckNotify
{
	optional int64 Data = 1[default=-1];

}

message  HumanRpcMotionFlagsNotify
{
	optional uint64 ObjId = 1[default=0];
	optional int32 MotionFlags = 2;

}

message  HumanRpcRushAsk
{
	optional bool Apply = 1[default=false];

}

message  HumanRpcRushReply
{
	optional int32 Result = 1;

}

message  HumanRpcStareAsk
{
	optional bool Apply = 1[default=false];
	optional uint64 TargetID = 2[default=0];
	optional float Dir = 3[default=-1];

}

message  HumanRpcStareReply
{
	optional int32 Result = 1;
	optional uint64 TargetID = 2[default=0];

}

message  HumanRpcChangePositionNotify
{
	optional uint64 ObjID = 1[default=0];
	optional Vector3Int Pos = 2;
	optional float Dir = 4[default=-1];

}

message  HumanRpcAttrChangeNotify
{
	optional int32 AttrType = 1;
	optional int32 Value = 2;
	optional uint64 Playerguid = 3[default=0];

}

message  HumanRpcTrusteeshipAsk
{
	optional bool Open = 1[default=false];

}

message  HumanRpcTrusteeshipReply
{
	optional int32 Result = 1;

}

message  HumanRpcChangePlayerNameAsk
{
	optional string PlayerName = 1;

}

message  HumanRpcChangePlayerNameReply
{
	optional int32 Result = 1;

}

